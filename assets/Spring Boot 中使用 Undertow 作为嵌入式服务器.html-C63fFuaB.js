import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as e,a}from"./app-DWXdHMII.js";const n={};function l(r,s){return t(),e("div",null,s[0]||(s[0]=[a(`<h1 id="spring-boot-中使用-undertow-作为嵌入式服务器" tabindex="-1"><a class="header-anchor" href="#spring-boot-中使用-undertow-作为嵌入式服务器"><span>Spring Boot 中使用 Undertow 作为嵌入式服务器</span></a></h1><p>Spring Boot 默认使用 Tomcat 作为嵌入式 Servlet 服务器，它是由 Apache 软件基金会下 Jakarta 项目开发的 Servlet 容器，被广泛用于部署和运行 Java Web 应用程序。特点是轻量级、易于安装和配置，并且具有良好的可扩展性和性能</p><p>本文将会介绍另一款优秀的 Servlet 容器，Undertow。以及如何在 Spring Boot 中用它来替换 Tomcat 作为嵌入式服务器。</p><h2 id="undertow" tabindex="-1"><a class="header-anchor" href="#undertow"><span>Undertow</span></a></h2><p>Undertow 是一个轻量级的、高性能的 Java Web 服务器，由 JBoss 开发并开源。它是基于非阻塞（non-blocking）的 I/O 模型，具有低资源消耗和高并发处理能力。</p><p>Undertown 的优势如下：</p><ol><li><strong>「支持 HTTP/2」</strong>：Undertow 开箱即支持 HTTP/2，无需重写启动类路径。</li><li><strong>「支持 HTTP Upgrade」</strong>：允许通过 HTTP 端口复用多种协议。</li><li><strong>「支持 Web Socket」</strong>：Undertow 提供对 Web Sockets 的全面支持，包括 JSR-356 支持。</li><li><strong>「Servlet 4.0」</strong>：Undertow 支持 Servlet 4.0，包括对嵌入式 Servlet 的支持。还可以在同一部署中混合使用 Servlet 和原生 undertow 非阻塞 handler。</li><li><strong>「可嵌入式」</strong>：只需几行代码，即可将 Undertow 嵌入应用程序或独立运行。</li><li><strong>「灵活性」</strong>：Undertow 通过链式 handler 进行配置，可以根据需求灵活地添加功能。</li></ol><p>在很多场景的测试下， Undertow 的性能都高于 Tomcat。天生适合作为 Spring Boot 应用的嵌入式服务器！</p><h2 id="在-spring-boot-中使用" tabindex="-1"><a class="header-anchor" href="#在-spring-boot-中使用"><span>在 Spring Boot 中使用</span></a></h2><p>如上所述，Spring Boot 默认使用 Tomcat 作为嵌入式服务。所以 <code>spring-boot-starter-web</code> 默认依赖了 <code>spring-boot-starter-tomcat</code>。</p><p>要使用 Undertow 首先要从 <code>spring-boot-starter-web</code> 排除 <code>spring-boot-starter-tomcat</code> ，再添加 <code>spring-boot-starter-undertow</code> 依赖：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-web&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclusions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclusion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-tomcat&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclusion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclusions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-undertow&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仅此即可。启动应用，查看日志：</p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" data-title="plain" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>INFO 11908 --- [           main] io.undertow                              : starting server: Undertow - 2.3.8.Final</span></span>
<span class="line"><span>INFO 11908 --- [           main] org.xnio                                 : XNIO version 3.8.8.Final</span></span>
<span class="line"><span>INFO 11908 --- [           main] org.xnio.nio                             : XNIO NIO Implementation Version 3.8.8.Final</span></span>
<span class="line"><span>INFO 11908 --- [           main] org.jboss.threads                        : JBoss Threads version 3.5.0.Final</span></span>
<span class="line"><span>INFO 11908 --- [           main] o.s.b.w.e.undertow.UndertowWebServer     : Undertow started on port(s) 8080 (http)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如你所见，Spring Boot 已经使用 Undertow 作为嵌入式服务器。</p><h2 id="配置属性" tabindex="-1"><a class="header-anchor" href="#配置属性"><span>配置属性</span></a></h2><p>Spring Boot 预置了很多属性，可用于在 <code>applicaton.properties | yaml</code> 中对 Undertow 服务器进行个性化配置。</p><p>它们都以 <code>server.undertow.*</code> 开头，总结如下：</p><table><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">说明</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><code>server.undertow.accesslog.dir</code></td><td style="text-align:left;">Undertow 访问日志目录。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.accesslog.enabled</code></td><td style="text-align:left;">是否启用访问日志。</td><td style="text-align:left;"><code>false</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.accesslog.pattern</code></td><td style="text-align:left;">访问日志的格式。</td><td style="text-align:left;"><code>common</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.accesslog.prefix</code></td><td style="text-align:left;">日志文件前缀。</td><td style="text-align:left;"><code>access_log.</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.accesslog.rotate</code></td><td style="text-align:left;">是否开启日志滚动。</td><td style="text-align:left;"><code>true</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.accesslog.suffix</code></td><td style="text-align:left;">日志文件后缀。</td><td style="text-align:left;"><code>log</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.always-set-keep-alive</code></td><td style="text-align:left;">是否应在所有响应中添加 <code>Connection: keep-alive</code> Header，即使 HTTP 规范没有要求。</td><td style="text-align:left;"><code>true</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.buffer-size</code></td><td style="text-align:left;">每个 buffer 的大小。默认大小是根据 JVM 可用的最大内存确定的。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.decode-slash</code></td><td style="text-align:left;">是否应解码已编码的斜线字符（<code>%2F</code>）。如果前端代理不执行相同的解码，解码可能会导致安全问题。只有在传统应用程序需要时才启用。设置后，<code>server.undertow.allow-encoded-slash</code> 无效。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.decode-url</code></td><td style="text-align:left;">是否对 URL 进行解码。禁用时，URL 中的百分比编码字符将保持原样。</td><td style="text-align:left;"><code>true</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.direct-buffers</code></td><td style="text-align:left;">是否在 Java 堆外分配 buffer。默认大小是根据 JVM 可用的最大内存确定的。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.eager-filter-init</code></td><td style="text-align:left;">是否应在启动时初始化 servlet Filter</td><td style="text-align:left;"><code>true</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.max-cookies</code></td><td style="text-align:left;">允许的最大 cookie 数量。这一限制是为了防止基于哈希碰撞的 DOS 攻击。</td><td style="text-align:left;"><code>200</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.max-headers</code></td><td style="text-align:left;">允许的最大 header 数量。这一限制是为了防止基于哈希碰撞的 DOS 攻击。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.max-http-post-size</code></td><td style="text-align:left;">HTTP post content 的最大大小。当值为-1（默认值）时，大小为无限。</td><td style="text-align:left;"><code>-1B</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.max-parameters</code></td><td style="text-align:left;">允许查询或路径参数的最大数量。这一限制是为了防止基于哈希碰撞的 DOS 攻击。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.no-request-timeout</code></td><td style="text-align:left;">在服务器关闭连接之前，连接在不处理请求的情况下闲置的时间。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.options.server.*</code></td><td style="text-align:left;">在 <code>io.undertow.UndertowOptions</code> 中定义的服务器选项。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.options.socket.*</code></td><td style="text-align:left;">在 <code>org.xnio.Options</code> 中定义的 socket 选项。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.preserve-path-on-forward</code></td><td style="text-align:left;">转发请求时是否保留请求路径。</td><td style="text-align:left;"><code>false</code></td></tr><tr><td style="text-align:left;"><code>server.undertow.threads.io</code></td><td style="text-align:left;">I/O 线程数。默认值为可用的处理器数量。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.threads.worker</code></td><td style="text-align:left;">Worker 线程数。默认为 I/O 线程数的 8 倍。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>server.undertow.url-charset</code></td><td style="text-align:left;">用于解码 URL 的字符集。</td><td style="text-align:left;"><code>UTF-8</code></td></tr></tbody></table><h2 id="编程式配置" tabindex="-1"><a class="header-anchor" href="#编程式配置"><span>编程式配置</span></a></h2><p>如果配置属性无法满足你的需求，你可以通过配置类，以编程式的方式进行定制。</p><p>实现 <code>WebServerFactoryCustomizer&lt;UndertowServletWebServerFactory&gt;</code> 接口，覆写 <code>customize</code> 方法：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.web.server.WebServerFactoryCustomizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.context.annotation.Configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UndertowConfiguration</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> WebServerFactoryCustomizer</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">UndertowServletWebServerFactory</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> customize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">UndertowServletWebServerFactory</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> factory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        factory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setBufferSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8192</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 其他自定义配置 ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>❝</p><p>对于 <code>UndertowServletWebServerFactory</code> 配置类的细节，请参阅 ：springdoc.cn。</p><p>❞</p></blockquote><h2 id="启动时的警告日志" tabindex="-1"><a class="header-anchor" href="#启动时的警告日志"><span>启动时的警告日志</span></a></h2><p>当你使用 Undertow 作为 Spring Boot 嵌入式服务器时，启动应用。你会看到有一条 <code>WARN</code> 日志，如下：</p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" data-title="plain" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>WARN 9608 --- [           main] io.undertow.websockets.jsr               : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>大致意思是“没有给 WebSocketDeploymentInfo 设置 Buffer pool，将会使用默认值”。有 2 种方式可以解决这个问题。</p><h3 id="排除-undertow-websockets-jsr-依赖" tabindex="-1"><a class="header-anchor" href="#排除-undertow-websockets-jsr-依赖"><span>排除 undertow-websockets-jsr 依赖</span></a></h3><p>如果未使用到 WebSocket 技术，那么可以直接从 <code>spring-boot-starter-undertow</code> 中排除 <code>undertow-websockets-jsr</code> 依赖即可。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-undertow&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclusions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- 排除 undertow-websockets-jsr 依赖 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclusion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;io.undertow&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;undertow-websockets-jsr&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclusion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclusions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="为-websocketdeploymentinfo-设置合理的参数" tabindex="-1"><a class="header-anchor" href="#为-websocketdeploymentinfo-设置合理的参数"><span>为 WebSocketDeploymentInfo 设置合理的参数</span></a></h3><p>也可以通过上述的 “编程式” 配置方式，为 <code>WebSocketDeploymentInfo</code> 设置一个合理的参数。如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.web.server.WebServerFactoryCustomizer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.context.annotation.Configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> io.undertow.server.DefaultByteBufferPool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> io.undertow.websockets.jsr.WebSocketDeploymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UndertowConfiguration</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> WebServerFactoryCustomizer</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">UndertowServletWebServerFactory</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> customize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">UndertowServletWebServerFactory</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> factory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        factory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addDeploymentInfoCustomizers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(deploymentInfo </span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">            WebSocketDeploymentInfo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> webSocketDeploymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> WebSocketDeploymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 设置合理的参数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            webSocketDeploymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setBuffers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> DefaultByteBufferPool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8192</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            deploymentInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">addServletContextAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;io.undertow.websockets.jsr.WebSocketDeploymentInfo&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, webSocketDeploymentInfo);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过测试，上述 2 种方式都可以解决 Undertow 启动时有警告日志的问题。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>总之，使用 Undertow 作为 Spring Boot 的嵌入式服务器可以提供更好的性能、更小的内存占用以及更高的灵活性和嵌入式支持。</p>`,37)]))}const h=i(n,[["render",l],["__file","Spring Boot 中使用 Undertow 作为嵌入式服务器.html.vue"]]),k=JSON.parse('{"path":"/dev/Spring%20Boot%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20Undertow%20%E4%BD%9C%E4%B8%BA%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%9C%8D%E5%8A%A1%E5%99%A8.html","title":"Spring Boot 中使用 Undertow 作为嵌入式服务器","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Spring Boot 中使用 Undertow 作为嵌入式服务器","excerpt":null,"description":"Spring Boot 中使用 Undertow 作为嵌入式服务器 Spring Boot 默认使用 Tomcat 作为嵌入式 Servlet 服务器，它是由 Apache 软件基金会下 Jakarta 项目开发的 Servlet 容器，被广泛用于部署和运行 Java Web 应用程序。特点是轻量级、易于安装和配置，并且具有良好的可扩展性和性能 本文将...","date":"2023-12-06T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/Spring%20Boot%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20Undertow%20%E4%BD%9C%E4%B8%BA%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%9C%8D%E5%8A%A1%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"Spring Boot 中使用 Undertow 作为嵌入式服务器"}],["meta",{"property":"og:description","content":"Spring Boot 中使用 Undertow 作为嵌入式服务器 Spring Boot 默认使用 Tomcat 作为嵌入式 Servlet 服务器，它是由 Apache 软件基金会下 Jakarta 项目开发的 Servlet 容器，被广泛用于部署和运行 Java Web 应用程序。特点是轻量级、易于安装和配置，并且具有良好的可扩展性和性能 本文将..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-12-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Boot 中使用 Undertow 作为嵌入式服务器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"Undertow","slug":"undertow","link":"#undertow","children":[]},{"level":2,"title":"在 Spring Boot 中使用","slug":"在-spring-boot-中使用","link":"#在-spring-boot-中使用","children":[]},{"level":2,"title":"配置属性","slug":"配置属性","link":"#配置属性","children":[]},{"level":2,"title":"编程式配置","slug":"编程式配置","link":"#编程式配置","children":[]},{"level":2,"title":"启动时的警告日志","slug":"启动时的警告日志","link":"#启动时的警告日志","children":[{"level":3,"title":"排除 undertow-websockets-jsr 依赖","slug":"排除-undertow-websockets-jsr-依赖","link":"#排除-undertow-websockets-jsr-依赖","children":[]},{"level":3,"title":"为 WebSocketDeploymentInfo 设置合理的参数","slug":"为-websocketdeploymentinfo-设置合理的参数","link":"#为-websocketdeploymentinfo-设置合理的参数","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1701949796000,"updatedTime":1714224756000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":5.09,"words":1528},"filePathRelative":"dev/Spring Boot 中使用 Undertow 作为嵌入式服务器.md","localizedDate":"2023年12月6日","excerpt":"\\n<p>Spring Boot 默认使用 Tomcat 作为嵌入式 Servlet 服务器，它是由 Apache 软件基金会下 Jakarta 项目开发的 Servlet\\n容器，被广泛用于部署和运行 Java Web 应用程序。特点是轻量级、易于安装和配置，并且具有良好的可扩展性和性能</p>","autoDesc":true}');export{h as comp,k as data};
