const e=JSON.parse('{"key":"v-30b08094","path":"/dev/SpringBoot%20%E6%8F%90%E5%8D%87%E5%90%9E%E5%90%90%E9%87%8F.html","title":"SpringBoot 提升吞吐量","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"SpringBoot 提升吞吐量","description":"SpringBoot 提升吞吐量 1、异步执行 实现方式二种： 使用异步注解 @aysnc、启动类：添加 @EnableAsync 注解 JDK 8 本身有一个非常好用的 Future 类——CompletableFuture 在该示例中，启动一个线程，此时 AskThread 对象还没有拿到它需要的数据，执行到 myRe = re.get() * r...","date":"2024-01-14T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/SpringBoot%20%E6%8F%90%E5%8D%87%E5%90%9E%E5%90%90%E9%87%8F.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"SpringBoot 提升吞吐量"}],["meta",{"property":"og:description","content":"SpringBoot 提升吞吐量 1、异步执行 实现方式二种： 使用异步注解 @aysnc、启动类：添加 @EnableAsync 注解 JDK 8 本身有一个非常好用的 Future 类——CompletableFuture 在该示例中，启动一个线程，此时 AskThread 对象还没有拿到它需要的数据，执行到 myRe = re.get() * r..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-02T14:53:53.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2024-01-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-02T14:53:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot 提升吞吐量\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-02T14:53:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"1、异步执行","slug":"_1、异步执行","link":"#_1、异步执行","children":[]},{"level":2,"title":"2、增加内嵌 Tomcat 的最大连接数","slug":"_2、增加内嵌-tomcat-的最大连接数","link":"#_2、增加内嵌-tomcat-的最大连接数","children":[]},{"level":2,"title":"3、使用 @ComponentScan()","slug":"_3、使用-componentscan","link":"#_3、使用-componentscan","children":[]},{"level":2,"title":"4、默认 Tomcat 容器改为 Undertow","slug":"_4、默认-tomcat-容器改为-undertow","link":"#_4、默认-tomcat-容器改为-undertow","children":[]},{"level":2,"title":"5、使用 BufferedWriter 进行缓冲","slug":"_5、使用-bufferedwriter-进行缓冲","link":"#_5、使用-bufferedwriter-进行缓冲","children":[]},{"level":2,"title":"7、异步调用可以使用 AsyncHandlerInterceptor 进行拦截","slug":"_7、异步调用可以使用-asynchandlerinterceptor-进行拦截","link":"#_7、异步调用可以使用-asynchandlerinterceptor-进行拦截","children":[]}],"git":{"createdTime":1706885633000,"updatedTime":1706885633000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":4.99,"words":1496},"filePathRelative":"dev/SpringBoot 提升吞吐量.md","localizedDate":"2024年1月14日","excerpt":"\\n<h2><strong>1、异步执行</strong></h2>\\n<p>实现方式二种：</p>\\n<ul>\\n<li>使用异步注解 @aysnc、启动类：添加 @EnableAsync 注解</li>\\n<li>JDK 8 本身有一个非常好用的 Future 类——CompletableFuture</li>\\n</ul>","autoDesc":true}');export{e as data};
