import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-Clq2mtAP.js";const p={},e=t(`<h1 id="java-isempty-和-isblank-的用法区别" tabindex="-1"><a class="header-anchor" href="#java-isempty-和-isblank-的用法区别"><span>Java isEmpty 和 isBlank 的用法区别</span></a></h1><p>也许你两个都不知道，也许你除了<code>isEmpty</code>/<code>isNotEmpty</code>/<code>isNotBlank</code>/<code>isBlank</code> 外，并不知道还有<code>isAnyEmpty</code>/<code>isNoneEmpty</code>/<code>isAnyBlank</code>/<code>isNoneBlank</code>的存在。</p><p>come on ,让我们一起来探索<code>org.apache.commons.lang3.StringUtils;</code>这个工具类。</p><h2 id="isempty-系列" tabindex="-1"><a class="header-anchor" href="#isempty-系列"><span>isEmpty 系列</span></a></h2><h3 id="stringutils-isempty" tabindex="-1"><a class="header-anchor" href="#stringutils-isempty"><span>StringUtils.isEmpty()</span></a></h3><p>是否为空。可以看到 &quot; &quot; 空格是会绕过这种空判断，因为是一个空格，并不是严格的空值，会导致 <code>isEmpty(&quot; &quot;)=false</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>“bob”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token string">&quot; bob &quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token operator">/</span>
 <span class="token operator">*</span>
 <span class="token operator">*</span> <span class="token generics"><span class="token punctuation">&lt;</span>p<span class="token punctuation">&gt;</span></span><span class="token constant">NOTE</span><span class="token operator">:</span> <span class="token class-name">This</span> method changed in <span class="token class-name">Lang</span> version <span class="token number">2.0</span><span class="token punctuation">.</span>
 <span class="token operator">*</span> <span class="token class-name">It</span> no longer trims the <span class="token class-name">CharSequence</span><span class="token punctuation">.</span>
 <span class="token operator">*</span> <span class="token class-name">That</span> functionality is available in <span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>&lt;<span class="token operator">/</span>p<span class="token operator">&gt;</span>
 <span class="token operator">*</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> cs  the <span class="token class-name">CharSequence</span> <span class="token keyword">to</span> <span class="token namespace">check</span><span class="token punctuation">,</span> may be <span class="token keyword">null</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@return</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@code</span> <span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token keyword">if</span> the <span class="token class-name">CharSequence</span> is empty or <span class="token keyword">null</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@since</span> <span class="token number">3.0</span> <span class="token class-name">Changed</span> signature from <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token keyword">to</span> <span class="token namespace">isEmpty</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span><span class="token punctuation">)</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span> cs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cs <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> cs<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringutils-isnotempty" tabindex="-1"><a class="header-anchor" href="#stringutils-isnotempty"><span>StringUtils.isNotEmpty()</span></a></h3><p>相当于不为空 , <code>= !isEmpty()</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span> cs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringutils-isanyempty" tabindex="-1"><a class="header-anchor" href="#stringutils-isanyempty"><span>StringUtils.isAnyEmpty()</span></a></h3><p>是否有一个为空，只有一个为空，就为 true。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyEmpty</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyEmpty</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> “foo”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyEmpty</span><span class="token punctuation">(</span>“bob”<span class="token punctuation">,</span> “”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyEmpty</span><span class="token punctuation">(</span><span class="token string">&quot; bob &quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyEmpty</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyEmpty</span><span class="token punctuation">(</span>“foo”<span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token operator">/</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> css  the <span class="token class-name">CharSequences</span> <span class="token keyword">to</span> <span class="token namespace">check</span><span class="token punctuation">,</span> may be <span class="token keyword">null</span> or empty
 <span class="token operator">*</span> <span class="token annotation punctuation">@return</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@code</span> <span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token keyword">if</span> any of the <span class="token class-name">CharSequences</span> are empty or <span class="token keyword">null</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@since</span> <span class="token number">3.2</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isAnyEmpty</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> css<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>css<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span> cs <span class="token operator">:</span> css<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringutils-isnoneempty" tabindex="-1"><a class="header-anchor" href="#stringutils-isnoneempty"><span>StringUtils.isNoneEmpty()</span></a></h3><p>相当于<code>!isAnyEmpty(css)</code> , 必须所有的值都不为空才返回 true</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token operator">/</span>
 <span class="token operator">*</span> <span class="token generics"><span class="token punctuation">&lt;</span>p<span class="token punctuation">&gt;</span></span><span class="token class-name">Checks</span> <span class="token keyword">if</span> none of the <span class="token class-name">CharSequences</span> are empty <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> or <span class="token keyword">null</span><span class="token punctuation">.</span>&lt;<span class="token operator">/</span>p<span class="token operator">&gt;</span>
 <span class="token operator">*</span>
 <span class="token operator">*</span> <span class="token generics"><span class="token punctuation">&lt;</span>pre<span class="token punctuation">&gt;</span></span>
 <span class="token operator">*</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneEmpty</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>             <span class="token operator">=</span> <span class="token boolean">false</span>
 <span class="token operator">*</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneEmpty</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span>      <span class="token operator">=</span> <span class="token boolean">false</span>
 <span class="token operator">*</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span>        <span class="token operator">=</span> <span class="token boolean">false</span>
 <span class="token operator">*</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;bob&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>        <span class="token operator">=</span> <span class="token boolean">false</span>
 <span class="token operator">*</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;  bob  &quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>  <span class="token operator">=</span> <span class="token boolean">false</span>
 <span class="token operator">*</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneEmpty</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span>       <span class="token operator">=</span> <span class="token boolean">true</span>
 <span class="token operator">*</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneEmpty</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span>     <span class="token operator">=</span> <span class="token boolean">true</span>
 <span class="token operator">*</span> <span class="token operator">&lt;</span><span class="token operator">/</span>pre<span class="token operator">&gt;</span>
 <span class="token operator">*</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> css  the <span class="token class-name">CharSequences</span> <span class="token keyword">to</span> <span class="token namespace">check</span><span class="token punctuation">,</span> may be <span class="token keyword">null</span> or empty
 <span class="token operator">*</span> <span class="token annotation punctuation">@return</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@code</span> <span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token keyword">if</span> none of the <span class="token class-name">CharSequences</span> are empty or <span class="token keyword">null</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@since</span> <span class="token number">3.2</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isNoneEmpty</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> css<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isAnyEmpty</span><span class="token punctuation">(</span>css<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="isbank-系列" tabindex="-1"><a class="header-anchor" href="#isbank-系列"><span>isBank 系列</span></a></h2><h3 id="stringutils-isblank" tabindex="-1"><a class="header-anchor" href="#stringutils-isblank"><span>StringUtils.isBlank()</span></a></h3><p>是否为真空值(空格或者空值)</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>“bob”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token string">&quot; bob &quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token operator">/</span>
 <span class="token operator">*</span> <span class="token generics"><span class="token punctuation">&lt;</span>p<span class="token punctuation">&gt;</span></span><span class="token class-name">Checks</span> <span class="token keyword">if</span> a <span class="token class-name">CharSequence</span> is whitespace<span class="token punctuation">,</span> empty <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> or <span class="token keyword">null</span><span class="token punctuation">.</span>&lt;<span class="token operator">/</span>p<span class="token operator">&gt;</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> cs  the <span class="token class-name">CharSequence</span> <span class="token keyword">to</span> <span class="token namespace">check</span><span class="token punctuation">,</span> may be <span class="token keyword">null</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@return</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@code</span> <span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token keyword">if</span> the <span class="token class-name">CharSequence</span> is <span class="token keyword">null</span><span class="token punctuation">,</span> empty or whitespace
 <span class="token operator">*</span> <span class="token annotation punctuation">@since</span> <span class="token number">2.0</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@since</span> <span class="token number">3.0</span> <span class="token class-name">Changed</span> signature from <span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token keyword">to</span> <span class="token namespace">isBlank</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span><span class="token punctuation">)</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span> cs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> strLen<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cs <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>strLen <span class="token operator">=</span> cs<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strLen<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span>cs<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringutils-isnotblank" tabindex="-1"><a class="header-anchor" href="#stringutils-isnotblank"><span>StringUtils.isNotBlank()</span></a></h3><p>是否真的不为空，不是空格或者空值，相当于<code>!isBlank();</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span> cs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isBlank</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringutils-isanyblank" tabindex="-1"><a class="header-anchor" href="#stringutils-isanyblank"><span>StringUtils.isAnyBlank()</span></a></h3><p>是否包含任何真空值(包含空格或空值)</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> “foo”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span>“bob”<span class="token punctuation">,</span> “”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span><span class="token string">&quot; bob &quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span>“foo”<span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
 <span class="token operator">/</span>
 <span class="token operator">*</span> <span class="token generics"><span class="token punctuation">&lt;</span>p<span class="token punctuation">&gt;</span></span><span class="token class-name">Checks</span> <span class="token keyword">if</span> any one of the <span class="token class-name">CharSequences</span> are blank <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> or <span class="token keyword">null</span> and not whitespace only<span class="token punctuation">.</span><span class="token punctuation">.</span>&lt;<span class="token operator">/</span>p<span class="token operator">&gt;</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> css  the <span class="token class-name">CharSequences</span> <span class="token keyword">to</span> <span class="token namespace">check</span><span class="token punctuation">,</span> may be <span class="token keyword">null</span> or empty
 <span class="token operator">*</span> <span class="token annotation punctuation">@return</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@code</span> <span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token keyword">if</span> any of the <span class="token class-name">CharSequences</span> are blank or <span class="token keyword">null</span> or whitespace only
 <span class="token operator">*</span> <span class="token annotation punctuation">@since</span> <span class="token number">3.2</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isAnyBlank</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> css<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ArrayUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>css<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span> cs <span class="token operator">:</span> css<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isBlank</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringutils-isnoneblank" tabindex="-1"><a class="header-anchor" href="#stringutils-isnoneblank"><span>StringUtils.isNoneBlank()</span></a></h3><p>是否全部都不包含空值或空格。面试宝典，公众号 Java 精选，回复 java 面试，获取在线面试资料，支持随时随地刷题。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> “foo”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span>“bob”<span class="token punctuation">,</span> “”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span><span class="token string">&quot; bob &quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span>“foo”<span class="token punctuation">,</span> “bar”<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token operator">/</span>
 <span class="token operator">*</span> <span class="token generics"><span class="token punctuation">&lt;</span>p<span class="token punctuation">&gt;</span></span><span class="token class-name">Checks</span> <span class="token keyword">if</span> none of the <span class="token class-name">CharSequences</span> are blank <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> or <span class="token keyword">null</span> and whitespace only<span class="token punctuation">.</span><span class="token punctuation">.</span>&lt;<span class="token operator">/</span>p<span class="token operator">&gt;</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> css  the <span class="token class-name">CharSequences</span> <span class="token keyword">to</span> <span class="token namespace">check</span><span class="token punctuation">,</span> may be <span class="token keyword">null</span> or empty
 <span class="token operator">*</span> <span class="token annotation punctuation">@return</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@code</span> <span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token keyword">if</span> none of the <span class="token class-name">CharSequences</span> are blank or <span class="token keyword">null</span> or whitespace only
 <span class="token operator">*</span> <span class="token annotation punctuation">@since</span> <span class="token number">3.2</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isNoneBlank</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> css<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isAnyBlank</span><span class="token punctuation">(</span>css<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","Java isEmpty和isBlank的用法区别.html.vue"]]),d=JSON.parse('{"path":"/dev/Java%20isEmpty%E5%92%8CisBlank%E7%9A%84%E7%94%A8%E6%B3%95%E5%8C%BA%E5%88%AB.html","title":"Java isEmpty和isBlank的用法区别","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Java isEmpty和isBlank的用法区别","excerpt":null,"description":"Java isEmpty 和 isBlank 的用法区别 也许你两个都不知道，也许你除了isEmpty/isNotEmpty/isNotBlank/isBlank 外，并不知道还有isAnyEmpty/isNoneEmpty/isAnyBlank/isNoneBlank的存在。 come on ,让我们一起来探索org.apache.commons.l...","date":"2023-10-31T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/Java%20isEmpty%E5%92%8CisBlank%E7%9A%84%E7%94%A8%E6%B3%95%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"Java isEmpty和isBlank的用法区别"}],["meta",{"property":"og:description","content":"Java isEmpty 和 isBlank 的用法区别 也许你两个都不知道，也许你除了isEmpty/isNotEmpty/isNotBlank/isBlank 外，并不知道还有isAnyEmpty/isNoneEmpty/isAnyBlank/isNoneBlank的存在。 come on ,让我们一起来探索org.apache.commons.l..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-10-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java isEmpty和isBlank的用法区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"isEmpty 系列","slug":"isempty-系列","link":"#isempty-系列","children":[{"level":3,"title":"StringUtils.isEmpty()","slug":"stringutils-isempty","link":"#stringutils-isempty","children":[]},{"level":3,"title":"StringUtils.isNotEmpty()","slug":"stringutils-isnotempty","link":"#stringutils-isnotempty","children":[]},{"level":3,"title":"StringUtils.isAnyEmpty()","slug":"stringutils-isanyempty","link":"#stringutils-isanyempty","children":[]},{"level":3,"title":"StringUtils.isNoneEmpty()","slug":"stringutils-isnoneempty","link":"#stringutils-isnoneempty","children":[]}]},{"level":2,"title":"isBank 系列","slug":"isbank-系列","link":"#isbank-系列","children":[{"level":3,"title":"StringUtils.isBlank()","slug":"stringutils-isblank","link":"#stringutils-isblank","children":[]},{"level":3,"title":"StringUtils.isNotBlank()","slug":"stringutils-isnotblank","link":"#stringutils-isnotblank","children":[]},{"level":3,"title":"StringUtils.isAnyBlank()","slug":"stringutils-isanyblank","link":"#stringutils-isanyblank","children":[]},{"level":3,"title":"StringUtils.isNoneBlank()","slug":"stringutils-isnoneblank","link":"#stringutils-isnoneblank","children":[]}]}],"git":{"createdTime":1699443632000,"updatedTime":1714224756000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":2.69,"words":807},"filePathRelative":"dev/Java isEmpty和isBlank的用法区别.md","localizedDate":"2023年10月31日","autoDesc":true}');export{r as comp,d as data};
