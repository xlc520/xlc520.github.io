const t=JSON.parse('{"key":"v-7406ceee","path":"/dev/SpringBoot-MDC%20%E5%AE%9E%E7%8E%B0%E5%85%A8%E9%93%BE%E8%B7%AF%E8%B0%83%E7%94%A8%E6%97%A5%E5%BF%97%E8%B7%9F%E8%B8%AA.html","title":"SpringBoot - MDC 实现全链路调用日志跟踪","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"SpringBoot - MDC 实现全链路调用日志跟踪","description":"SpringBoot - MDC 实现全链路调用日志跟踪 MDC 介绍 简介 MDC（Mapped Diagnostic Context，映射调试上下文）是 log4j 、logback及log4j2 提供的一种方便在多线程条件下记录日志的功能。MDC 可以看成是一个与当前线程绑定的哈希表，可以往其中添加键值对。MDC 中包含的内容可以被同一线程中执行...","date":"2023-01-23T00:00:00.000Z","category":"Java","tag":["Java","SpringBoot"],"article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/SpringBoot-MDC%20%E5%AE%9E%E7%8E%B0%E5%85%A8%E9%93%BE%E8%B7%AF%E8%B0%83%E7%94%A8%E6%97%A5%E5%BF%97%E8%B7%9F%E8%B8%AA.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"SpringBoot - MDC 实现全链路调用日志跟踪"}],["meta",{"property":"og:description","content":"SpringBoot - MDC 实现全链路调用日志跟踪 MDC 介绍 简介 MDC（Mapped Diagnostic Context，映射调试上下文）是 log4j 、logback及log4j2 提供的一种方便在多线程条件下记录日志的功能。MDC 可以看成是一个与当前线程绑定的哈希表，可以往其中添加键值对。MDC 中包含的内容可以被同一线程中执行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-19T07:04:14.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:published_time","content":"2023-01-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-19T07:04:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot - MDC 实现全链路调用日志跟踪\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-19T07:04:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":3,"title":"MDC 介绍","slug":"mdc-介绍","link":"#mdc-介绍","children":[]},{"level":3,"title":"MDC 使用","slug":"mdc-使用","link":"#mdc-使用","children":[]},{"level":3,"title":"MDC 存在的问题","slug":"mdc-存在的问题","link":"#mdc-存在的问题","children":[]},{"level":3,"title":"解决 MDC 存在的问题","slug":"解决-mdc-存在的问题","link":"#解决-mdc-存在的问题","children":[]}],"git":{"createdTime":1681887854000,"updatedTime":1681887854000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":6,"words":1801},"filePathRelative":"dev/SpringBoot-MDC 实现全链路调用日志跟踪.md","localizedDate":"2023年1月23日","excerpt":"\\n<h3>MDC 介绍</h3>\\n<h5>简介</h5>\\n<p>MDC（Mapped Diagnostic Context，映射调试上下文）是 log4j 、logback及log4j2 提供的一种方便在多线程条件下记录日志的功能。<strong>MDC</strong> 可以看成是一个与<strong>当前线程绑定的哈希表</strong>，可以往其中添加键值对。MDC 中包含的内容可以<strong>被同一线程中执行的代码所访问</strong>。当前线程的子线程会继承其父线程中的 MDC 的内容。当需要记录日志时，只需要从 MDC 中获取所需的信息即可。MDC 的内容则由程序在适当的时候保存进去。对于一个 Web 应用来说，通常是在请求被处理的最开始保存这些数据。</p>","autoDesc":true}');export{t as data};
