import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,a as e}from"./app-BxuroukW.js";const p={},l=e(`<h1 id="实用-shell-脚本" tabindex="-1"><a class="header-anchor" href="#实用-shell-脚本"><span>实用 shell 脚本</span></a></h1><h2 id="_1、服务器系统配置初始化" tabindex="-1"><a class="header-anchor" href="#_1、服务器系统配置初始化"><span>1、服务器系统配置初始化</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#/bin/bash</span>
<span class="token comment"># 安装系统性能分析工具及其他</span>
yum <span class="token function">install</span> gcc <span class="token function">make</span> autoconf <span class="token function">vim</span> sysstat net-tools iostat iftop iotp <span class="token function">wget</span> lrzsz <span class="token function">lsof</span> <span class="token function">unzip</span> openssh-clients net-tool <span class="token function">vim</span> ntpdate <span class="token parameter variable">-y</span>
<span class="token comment"># 设置时区并同步时间</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">crontab</span> <span class="token parameter variable">-l</span> <span class="token operator">|</span><span class="token function">grep</span> ntpdate <span class="token operator">&amp;&gt;</span>/dev/null <span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token punctuation">(</span>echo <span class="token string">&quot;* 1 * * * ntpdate time.windows.com &gt;/dev/null 2&gt;&amp;1&quot;</span><span class="token punctuation">;</span><span class="token function">crontab</span> -l<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token function">crontab</span> 
<span class="token keyword">fi</span>
 
<span class="token comment"># 禁用selinux</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;/SELINUX/{s/permissive/disabled/}&#39;</span> /etc/selinux/config
 
<span class="token comment"># 关闭防火墙</span>
<span class="token keyword">if</span> <span class="token function">egrep</span> <span class="token string">&quot;7.[0-9]&quot;</span> /etc/redhat-release <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    systemctl stop firewalld
    systemctl disable firewalld
<span class="token keyword">elif</span> <span class="token function">egrep</span> <span class="token string">&quot;6.[0-9]&quot;</span> /etc/redhat-release <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">service</span> iptables stop
    <span class="token function">chkconfig</span> iptables off
<span class="token keyword">fi</span>
 
<span class="token comment"># 历史命令显示操作时间</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> HISTTIMEFORMAT /etc/bashrc<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;export HISTTIMEFORMAT=&quot;%Y-%m-%d %H:%M:%S  \`whoami\` &quot;&#39;</span> <span class="token operator">&gt;&gt;</span> /etc/bashrc
<span class="token keyword">fi</span>
 
<span class="token comment"># SSH超时时间</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> <span class="token string">&quot;TMOUT=600&quot;</span> /etc/profile <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;export TMOUT=600&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/profile
<span class="token keyword">fi</span>
 
<span class="token comment"># 禁止root远程登录 切记给系统添加普通用户，给su到root的权限</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/#PermitRootLogin yes/PermitRootLogin no/&#39;</span> /etc/ssh/sshd_config
 
<span class="token comment"># 禁止定时任务向发送邮件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/^MAILTO=root/MAILTO=&quot;&quot;/&#39;</span> /etc/crontab 
 
<span class="token comment"># 设置最大打开文件数</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> <span class="token string">&quot;* soft nofile 65535&quot;</span> /etc/security/limits.conf <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
    * soft nofile 65535
    * hard nofile 65535
EOF</span>
<span class="token keyword">fi</span>
 
<span class="token comment"># 系统内核优化</span>
<span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_tw_buckets = 20480
net.ipv4.tcp_max_syn_backlog = 20480
net.core.netdev_max_backlog = 262144
net.ipv4.tcp_fin_timeout = 20  
EOF</span>
 
<span class="token comment"># 减少SWAP使用</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">&gt;</span> /proc/sys/vm/swappiness
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、批量创建多个用户并设置密码" tabindex="-1"><a class="header-anchor" href="#_2、批量创建多个用户并设置密码"><span>2、批量创建多个用户并设置密码</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">USER_LIST</span><span class="token operator">=</span><span class="token variable">$@</span>
<span class="token assign-left variable">USER_FILE</span><span class="token operator">=</span>./user.info
<span class="token keyword">for</span> <span class="token for-or-select variable">USER</span> <span class="token keyword">in</span> <span class="token variable">$USER_LIST</span><span class="token punctuation">;</span><span class="token keyword">do</span>
 <span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">id</span> <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span> <span class="token operator">|</span>md5sum <span class="token operator">|</span><span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">1</span>-8<span class="token variable">)</span></span>
  <span class="token function">useradd</span> <span class="token environment constant">$USER</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$PASS</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token parameter variable">--stdin</span> <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span>   <span class="token variable">$PASS</span>&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$USER_FILE</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User create successful.&quot;</span>
 <span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User already exists!&quot;</span>
 <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、一键查看服务器利用率" tabindex="-1"><a class="header-anchor" href="#_3、一键查看服务器利用率"><span>3、一键查看服务器利用率</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token keyword">function</span> <span class="token function-name function">cpu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 
 <span class="token assign-left variable">util</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">vmstat</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $13+$14}&#39;</span><span class="token variable">)</span></span>
 <span class="token assign-left variable">iowait</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">vmstat</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $16}&#39;</span><span class="token variable">)</span></span>
 <span class="token builtin class-name">echo</span> <span class="token string">&quot;CPU -使用率：<span class="token variable">\${util}</span>% ,等待磁盘IO相应使用率：<span class="token variable">\${iowait}</span>:<span class="token variable">\${iowait}</span>%&quot;</span>
 
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function-name function">memory</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 
 <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2)printf &quot;%.1f&quot;,$2/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2) printf &quot;%.1f&quot;,($2-$NF)/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2) printf &quot;%.1f&quot;,$NF/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;内存 - 总大小: <span class="token variable">\${total}</span>G , 使用: <span class="token variable">\${used}</span>G , 剩余: <span class="token variable">\${available}</span>G&quot;</span>
<span class="token punctuation">}</span>
<span class="token function-name function">disk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 
 <span class="token assign-left variable">fs</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;/^\\/dev/{print $1}&#39;</span><span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">p</span> <span class="token keyword">in</span> <span class="token variable">$fs</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">mounted</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $NF}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $2}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $3}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">used_percent</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $5}&#39;</span><span class="token variable">)</span></span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;硬盘 - 挂载点: <span class="token variable">$mounted</span> , 总大小: <span class="token variable">$size</span> , 使用: <span class="token variable">$used</span> , 使用率: <span class="token variable">$used_percent</span>&quot;</span>
    <span class="token keyword">done</span>
 
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function-name function">tcp_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">summary</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>ss <span class="token parameter variable">-antp</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{status[$1]++}END{for(i in status) printf i&quot;:&quot;status[i]&quot; &quot;}&#39;</span><span class="token variable">)</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;TCP连接状态 - <span class="token variable">$summary</span>&quot;</span>
<span class="token punctuation">}</span>
cpu
memory
disk
tcp_status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、找出占用-cpu-内存过高的进程" tabindex="-1"><a class="header-anchor" href="#_4、找出占用-cpu-内存过高的进程"><span>4、找出占用 CPU 内存过高的进程</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;-------------------CUP占用前10排序--------------------------------&quot;</span>
<span class="token function">ps</span> <span class="token parameter variable">-eo</span> user,pid,pcpu,pmem,args <span class="token parameter variable">--sort</span><span class="token operator">=</span>-pcpu  <span class="token operator">|</span><span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">10</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;-------------------内存占用前10排序--------------------------------&quot;</span>
<span class="token function">ps</span> <span class="token parameter variable">-eo</span> user,pid,pcpu,pmem,args <span class="token parameter variable">--sort</span><span class="token operator">=</span>-pmem  <span class="token operator">|</span><span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、查看网卡的实时流量" tabindex="-1"><a class="header-anchor" href="#_5、查看网卡的实时流量"><span>5、查看网卡的实时流量</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">eth0</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">echo</span>  <span class="token parameter variable">-e</span>    <span class="token string">&quot;流量进入--流量传出    &quot;</span>
<span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
 <span class="token assign-left variable">old_in</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span><span class="token function">grep</span> $eth0 <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
 <span class="token assign-left variable">old_out</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span><span class="token function">grep</span> $eth0 <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $10}&#39;</span><span class="token variable">)</span></span>
 <span class="token function">sleep</span> <span class="token number">1</span>
 <span class="token assign-left variable">new_in</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span><span class="token function">grep</span> $eth0 <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
 <span class="token assign-left variable">new_out</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span><span class="token function">grep</span> $eth0 <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $10}&#39;</span><span class="token variable">)</span></span>
 <span class="token assign-left variable">in</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%.1f%s&quot;</span> &quot;<span class="token punctuation">$((</span><span class="token punctuation">(</span>$new_in-$old_in<span class="token punctuation">)</span>/1024<span class="token variable">)</span></span><span class="token punctuation">)</span><span class="token string">&quot; &quot;</span>KB/s<span class="token string">&quot;)
 out=<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%.1f%s&quot;</span> &quot;<span class="token punctuation">$((</span><span class="token punctuation">(</span>$new_out-$old_out<span class="token punctuation">)</span>/1024<span class="token variable">)</span></span>)&quot;</span> <span class="token string">&quot;KB/s&quot;</span><span class="token punctuation">)</span>
 <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$in</span> <span class="token variable">$out</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、监控多台服务器磁盘利用率脚本" tabindex="-1"><a class="header-anchor" href="#_6、监控多台服务器磁盘利用率脚本"><span>6、监控多台服务器磁盘利用率脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">HOST_INFO</span><span class="token operator">=</span>host.info
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^[^#]/{print $1}&#39;</span> $HOST_INFO<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
 <span class="token comment">#取出用户名和端口</span>
    <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $2}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $3}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
 <span class="token comment">#创建临时文件，保存信息</span>
    <span class="token assign-left variable">TMP_FILE</span><span class="token operator">=</span>/tmp/disk.tmp
 <span class="token comment">#通过公钥登录获取主机磁盘信息</span>
    <span class="token function">ssh</span> <span class="token parameter variable">-p</span> <span class="token variable">$PORT</span> <span class="token environment constant">$USER</span>@<span class="token variable">$IP</span> <span class="token string">&#39;df -h&#39;</span> <span class="token operator">&gt;</span> <span class="token variable">$TMP_FILE</span>
 <span class="token comment">#分析磁盘占用空间</span>
    <span class="token assign-left variable">USE_RATE_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;BEGIN{OFS=&quot;=&quot;}/^\\/dev/{print $NF,int($5)}&#39;</span> $TMP_FILE<span class="token variable">)</span></span>
 <span class="token comment">#循环磁盘列表，进行判断</span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">USE_RATE</span> <span class="token keyword">in</span> <span class="token variable">$USE_RATE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token comment">#取出等号（=）右边的值 挂载点名称</span>
        <span class="token assign-left variable">PART_NAME</span><span class="token operator">=</span><span class="token variable">\${USE_RATE<span class="token operator">%</span>=*}</span>  
  <span class="token comment">#取出等号（=）左边的值  磁盘利用率</span>
        <span class="token assign-left variable">USE_RATE</span><span class="token operator">=</span><span class="token variable">\${USE_RATE<span class="token operator">#</span>*=}</span>
  <span class="token comment">#进行判断</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$USE_RATE</span> <span class="token parameter variable">-ge</span> <span class="token number">80</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;Warning: <span class="token variable">$PART_NAME</span> Partition usage <span class="token variable">$USE_RATE</span>%!&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;服务器<span class="token variable">$IP</span>的磁盘空间占用过高，请及时处理&quot;</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> <span class="token string">&quot;空间不足警告&quot;</span> 你的qq@qq.com
  <span class="token keyword">else</span>
   <span class="token builtin class-name">echo</span> <span class="token string">&quot;服务器<span class="token variable">$IP</span>的<span class="token variable">$PART_NAME</span>目录空间良好&quot;</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、批量检测网站是否异常并邮件通知" tabindex="-1"><a class="header-anchor" href="#_7、批量检测网站是否异常并邮件通知"><span>7、批量检测网站是否异常并邮件通知</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash  </span>
<span class="token assign-left variable">URL_LIST</span><span class="token operator">=</span><span class="token string">&quot;www.baidu.com www.ctnrs.com www.der-matech.net.cn www.der-matech.com.cn www.der-matech.cn www.der-matech.top www.der-matech.org&quot;</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">URL</span> <span class="token keyword">in</span> <span class="token variable">$URL_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">FAIL_COUNT</span><span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">HTTP_CODE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-o</span> /dev/null --connect-timeout <span class="token number">3</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-w</span> <span class="token string">&quot;%{http_code}&quot;</span> $URL<span class="token variable">)</span></span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$HTTP_CODE</span> <span class="token parameter variable">-eq</span> <span class="token number">200</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$URL</span> OK&quot;</span>
            <span class="token builtin class-name">break</span>
        <span class="token keyword">else</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$URL</span> retry <span class="token variable">$FAIL_COUNT</span>&quot;</span>
            <span class="token builtin class-name">let</span> FAIL_COUNT++
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$FAIL_COUNT</span> <span class="token parameter variable">-eq</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Warning: <span class="token variable">$URL</span> Access failure!&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;网站<span class="token variable">$URL</span>坏掉，请及时处理&quot;</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> <span class="token string">&quot;<span class="token variable">$URL</span>网站高危&quot;</span> <span class="token number">1794748404</span>@qq.com
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8、批量主机远程执行命令脚本" tabindex="-1"><a class="header-anchor" href="#_8、批量主机远程执行命令脚本"><span>8、批量主机远程执行命令脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">COMMAND</span><span class="token operator">=</span><span class="token variable">$*</span>
<span class="token assign-left variable">HOST_INFO</span><span class="token operator">=</span>host.info
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^[^#]/{print $1}&#39;</span> $HOST_INFO<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $2}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $3}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $4}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token function">expect</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;
       spawn ssh -p <span class="token variable">$PORT</span> <span class="token environment constant">$USER</span>@<span class="token variable">$IP</span>
       expect {
          <span class="token entity" title="\\&quot;">\\&quot;</span>(yes/no)<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span>yes<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
          <span class="token entity" title="\\&quot;">\\&quot;</span>password:<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$PASS</span><span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
          <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token environment constant">$USER</span>@*<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$COMMAND</span><span class="token entity" title="\\r">\\r</span> exit<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
       }
    &quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;-------------------&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9、一键部署-lnmp-网站平台脚本" tabindex="-1"><a class="header-anchor" href="#_9、一键部署-lnmp-网站平台脚本"><span>9、一键部署 LNMP 网站平台脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">NGINX_V</span><span class="token operator">=</span><span class="token number">1.15</span>.6
<span class="token assign-left variable">PHP_V</span><span class="token operator">=</span><span class="token number">5.6</span>.36
<span class="token assign-left variable">TMP_DIR</span><span class="token operator">=</span>/tmp
 
<span class="token assign-left variable">INSTALL_DIR</span><span class="token operator">=</span>/usr/local
 
<span class="token assign-left variable">PWD_C</span><span class="token operator">=</span><span class="token environment constant">$PWD</span>
 
<span class="token builtin class-name">echo</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span>Menu<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;1. Install Nginx&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;2. Install PHP&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;3. Install MySQL&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;4. Deploy LNMP&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;9. Quit&quot;</span>
 
<span class="token keyword">function</span> <span class="token function-name function">command_status_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$1</span>
  <span class="token builtin class-name">exit</span>
 <span class="token keyword">fi</span> 
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">install_nginx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin class-name">cd</span> <span class="token variable">$TMP_DIR</span>
    yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc gcc-c++ <span class="token function">make</span> openssl-devel pcre-devel <span class="token function">wget</span>
    <span class="token function">wget</span> http://nginx.org/download/nginx-<span class="token variable">\${NGINX_V}</span>.tar.gz
    <span class="token function">tar</span> zxf nginx-<span class="token variable">\${NGINX_V}</span>.tar.gz
    <span class="token builtin class-name">cd</span> nginx-<span class="token variable">\${NGINX_V}</span>
    ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/nginx <span class="token punctuation">\\</span>
    --with-http_ssl_module <span class="token punctuation">\\</span>
    --with-http_stub_status_module <span class="token punctuation">\\</span>
    --with-stream
    command_status_check <span class="token string">&quot;Nginx - 平台环境检查失败！&quot;</span>
    <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">4</span> 
    command_status_check <span class="token string">&quot;Nginx - 编译失败！&quot;</span>
    <span class="token function">make</span> <span class="token function">install</span>
    command_status_check <span class="token string">&quot;Nginx - 安装失败！&quot;</span>
    <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$INSTALL_DIR</span>/nginx/conf/vhost
    <span class="token builtin class-name">alias</span> <span class="token assign-left variable">cp</span><span class="token operator">=</span>cp <span class="token punctuation">;</span> <span class="token function">cp</span> <span class="token parameter variable">-rf</span> <span class="token variable">$PWD_C</span>/nginx.conf <span class="token variable">$INSTALL_DIR</span>/nginx/conf
    <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/*
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;ok&quot;</span> <span class="token operator">&gt;</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/status.html
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;&lt;?php echo &quot;ok&quot;?&gt;&#39;</span> <span class="token operator">&gt;</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/status.php
    <span class="token variable">$INSTALL_DIR</span>/nginx/sbin/nginx
    command_status_check <span class="token string">&quot;Nginx - 启动失败！&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">install_php</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token builtin class-name">cd</span> <span class="token variable">$TMP_DIR</span>
    yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc gcc-c++ <span class="token function">make</span> gd-devel libxml2-devel <span class="token punctuation">\\</span>
        libcurl-devel libjpeg-devel libpng-devel openssl-devel <span class="token punctuation">\\</span>
        libmcrypt-devel libxslt-devel libtidy-devel
    <span class="token function">wget</span> http://docs.php.net/distributions/php-<span class="token variable">\${PHP_V}</span>.tar.gz
    <span class="token function">tar</span> zxf php-<span class="token variable">\${PHP_V}</span>.tar.gz
    <span class="token builtin class-name">cd</span> php-<span class="token variable">\${PHP_V}</span>
    ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/php <span class="token punctuation">\\</span>
    --with-config-file-path<span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/php/etc <span class="token punctuation">\\</span>
    --enable-fpm --enable-opcache <span class="token punctuation">\\</span>
    --with-mysql --with-mysqli --with-pdo-mysql <span class="token punctuation">\\</span>
    --with-openssl --with-zlib --with-curl --with-gd <span class="token punctuation">\\</span>
    --with-jpeg-dir --with-png-dir --with-freetype-dir <span class="token punctuation">\\</span>
    --enable-mbstring --enable-hash
    command_status_check <span class="token string">&quot;PHP - 平台环境检查失败！&quot;</span>
    <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">4</span> 
    command_status_check <span class="token string">&quot;PHP - 编译失败！&quot;</span>
    <span class="token function">make</span> <span class="token function">install</span>
    command_status_check <span class="token string">&quot;PHP - 安装失败！&quot;</span>
    <span class="token function">cp</span> php.ini-production <span class="token variable">$INSTALL_DIR</span>/php/etc/php.ini
    <span class="token function">cp</span> sapi/fpm/php-fpm.conf <span class="token variable">$INSTALL_DIR</span>/php/etc/php-fpm.conf
    <span class="token function">cp</span> sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
    <span class="token function">chmod</span> +x /etc/init.d/php-fpm
    /etc/init.d/php-fpm start
    command_status_check <span class="token string">&quot;PHP - 启动失败！&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入编号：&quot;</span> number
<span class="token keyword">case</span> <span class="token variable">$number</span> <span class="token keyword">in</span>
    <span class="token number">1</span><span class="token punctuation">)</span>
        install_nginx<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">2</span><span class="token punctuation">)</span>
        install_php<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">3</span><span class="token punctuation">)</span>
        install_mysql<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">4</span><span class="token punctuation">)</span>
        install_nginx
        install_php
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">9</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10、监控-mysql-主从同步状态是否异常脚本" tabindex="-1"><a class="header-anchor" href="#_10、监控-mysql-主从同步状态是否异常脚本"><span>10、监控 MySQL 主从同步状态是否异常脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash  </span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>root
<span class="token assign-left variable">PASSWD</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">IO_SQL_STATUS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASSWD <span class="token parameter variable">-e</span> <span class="token string">&#39;show slave status\\G&#39;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;/Slave_.*_Running:/{print $1$2}&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable">$IO_SQL_STATUS</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">THREAD_STATUS_NAME</span><span class="token operator">=</span><span class="token variable">\${i<span class="token operator">%</span><span class="token operator">:</span>*}</span>
    <span class="token assign-left variable">THREAD_STATUS</span><span class="token operator">=</span><span class="token variable">\${i<span class="token operator">#</span>*<span class="token operator">:</span>}</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$THREAD_STATUS</span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;Yes&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Error: MySQL Master-Slave <span class="token variable">$THREAD_STATUS_NAME</span> status is <span class="token variable">$THREAD_STATUS</span>!&quot;</span> <span class="token operator">|</span>mail <span class="token parameter variable">-s</span> <span class="token string">&quot;Master-Slave Staus&quot;</span> xxx@163.com
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11、mysql-数据库备份脚本" tabindex="-1"><a class="header-anchor" href="#_11、mysql-数据库备份脚本"><span>11、MySql 数据库备份脚本</span></a></h2><h6 id="分库备份" tabindex="-1"><a class="header-anchor" href="#分库备份"><span>分库备份</span></a></h6><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-pxxx</span> <span class="token parameter variable">-B</span> A <span class="token operator">&gt;</span> A.sql
<span class="token comment">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%H-%M-%S<span class="token variable">)</span></span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>backup
<span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/db_backup
<span class="token assign-left variable">DB_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS <span class="token parameter variable">-s</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;show databases;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span><span class="token variable">)</span></span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">DB</span> <span class="token keyword">in</span> <span class="token variable">$DB_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">BACKUP_NAME</span><span class="token operator">=</span><span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${DB}</span>_<span class="token variable">\${DATE}</span>.sql
    <span class="token keyword">if</span> <span class="token operator">!</span> mysqldump -h<span class="token variable">$HOST</span> -u<span class="token environment constant">$USER</span> -p<span class="token variable">$PASS</span> <span class="token parameter variable">-B</span> <span class="token variable">$DB</span> <span class="token operator">&gt;</span> <span class="token variable">$BACKUP_NAME</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$BACKUP_NAME</span> 备份失败!&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="分表备份" tabindex="-1"><a class="header-anchor" href="#分表备份"><span>分表备份</span></a></h6><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-pxxx</span> <span class="token parameter variable">-A</span> t <span class="token operator">&gt;</span> t.sql
<span class="token comment">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%H-%M-%S<span class="token variable">)</span></span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>backup
<span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/db_backup
<span class="token assign-left variable">DB_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS <span class="token parameter variable">-s</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;show databases;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span><span class="token variable">)</span></span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">DB</span> <span class="token keyword">in</span> <span class="token variable">$DB_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">BACKUP_DB_DIR</span><span class="token operator">=</span><span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${DB}</span>_<span class="token variable">\${DATE}</span>
    <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$BACKUP_DB_DIR</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$BACKUP_DB_DIR</span> <span class="token operator">&amp;&gt;</span>/dev/null
    <span class="token assign-left variable">TABLE_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS <span class="token parameter variable">-s</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;use <span class="token variable">$DB</span>;show tables;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">TABLE</span> <span class="token keyword">in</span> <span class="token variable">$TABLE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">BACKUP_NAME</span><span class="token operator">=</span><span class="token variable">$BACKUP_DB_DIR</span>/<span class="token variable">\${TABLE}</span>.sql 
        <span class="token keyword">if</span> <span class="token operator">!</span> mysqldump -h<span class="token variable">$HOST</span> -u<span class="token environment constant">$USER</span> -p<span class="token variable">$PASS</span> <span class="token variable">$DB</span> <span class="token variable">$TABLE</span> <span class="token operator">&gt;</span> <span class="token variable">$BACKUP_NAME</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$BACKUP_NAME</span> 备份失败!&quot;</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_12、nginx-访问日志分析" tabindex="-1"><a class="header-anchor" href="#_12、nginx-访问日志分析"><span>12、Nginx 访问日志分析</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 日志格式: $remote_addr - $remote_user [$time_local] &quot;$request&quot; $status $body_bytes_sent &quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;</span>
<span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;统计访问最多的10个IP&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$1]++}END{print &quot;UV:&quot;,length(a);for(v in a)print v,a[v]}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k2</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span><span class="token function">head</span> <span class="token parameter variable">-10</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;统计时间段访问最多的IP&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;$4&gt;=&quot;[01/Dec/2018:13:20:25&quot; &amp;&amp; $4&lt;=&quot;[27/Nov/2018:16:20:49&quot;{a[$1]++}END{for(v in a)print v,a[v]}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k2</span> -nr<span class="token operator">|</span><span class="token function">head</span> <span class="token parameter variable">-10</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;统计访问最多的10个页面&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$7]++}END{print &quot;PV:&quot;,length(a);for(v in a){if(a[v]&gt;10)print v,a[v]}}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k2</span> <span class="token parameter variable">-nr</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;统计访问页面状态码数量&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$7&quot; &quot;$9]++}END{for(v in a){if(a[v]&gt;5)print v,a[v]}}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k3</span> <span class="token parameter variable">-nr</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13、nginx-访问日志自动按天-周、月-切割" tabindex="-1"><a class="header-anchor" href="#_13、nginx-访问日志自动按天-周、月-切割"><span>13、Nginx 访问日志自动按天（周、月）切割</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#nginx日志目录</span>
<span class="token assign-left variable">LOG_DIR</span><span class="token operator">=</span>/www/server/nginx/logs
<span class="token comment">#获取到上一天的时间</span>
<span class="token assign-left variable">YESTERDAY_TIME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;yesterday&quot;</span> +%F<span class="token variable">)</span></span>
<span class="token comment">#归档日志取时间</span>
<span class="token assign-left variable">LOG_MONTH_DIR</span><span class="token operator">=</span><span class="token variable">$LOG_DIR</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&quot;%Y-%m&quot;</span><span class="token variable">)</span></span>
<span class="token comment">#归档日志的名称</span>
<span class="token assign-left variable">LOG_FILE_LIST</span><span class="token operator">=</span><span class="token string">&quot;access.log&quot;</span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">LOG_FILE</span> <span class="token keyword">in</span> <span class="token variable">$LOG_FILE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$LOG_MONTH_DIR</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$LOG_MONTH_DIR</span>
    <span class="token function">mv</span> <span class="token variable">$LOG_DIR</span>/<span class="token variable">$LOG_FILE</span> <span class="token variable">$LOG_MONTH_DIR</span>/<span class="token variable">\${LOG_FILE}</span>_<span class="token variable">\${YESTERDAY_TIME}</span>
<span class="token keyword">done</span>
 
<span class="token function">kill</span> <span class="token parameter variable">-USR1</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> $LOG_DIR/nginx.pid<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_14、自动发布-java-项目-tomcat" tabindex="-1"><a class="header-anchor" href="#_14、自动发布-java-项目-tomcat"><span>14、自动发布 Java 项目（Tomcat）</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
 
<span class="token assign-left variable">TOMCAT_NAME</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token assign-left variable">TOMCAT_DIR</span><span class="token operator">=</span>/usr/local/<span class="token variable">$TOMCAT_NAME</span>
<span class="token assign-left variable">ROOT</span><span class="token operator">=</span><span class="token variable">$TOMCAT_DIR</span>/webapps/ROOT
 
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/backup
<span class="token assign-left variable">WORK_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">PROJECT_NAME</span><span class="token operator">=</span>tomcat-java-demo
 
<span class="token comment"># 拉取代码</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$WORK_DIR</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$PROJECT_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">git</span> clone https://github.com/lizhenliang/tomcat-java-demo
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
<span class="token keyword">else</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
   <span class="token function">git</span> pull
<span class="token keyword">fi</span>
 
<span class="token comment"># 构建</span>
mvn clean package <span class="token parameter variable">-Dmaven.test.skip</span><span class="token operator">=</span>true
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token builtin class-name">echo</span> <span class="token string">&quot;maven build failure!&quot;</span>
   <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
 
<span class="token comment"># 部署</span>
<span class="token assign-left variable">TOMCAT_PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">&quot;<span class="token variable">$TOMCAT_NAME</span>&quot;</span> <span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;grep|<span class="token variable">$$</span>&quot;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;NR==1{print $2}&#39;</span><span class="token variable">)</span></span>
<span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token variable">$TOMCAT_PID</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$TOMCAT_PID</span>
<span class="token punctuation">[</span> <span class="token parameter variable">-d</span> <span class="token variable">$ROOT</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> <span class="token variable">$ROOT</span> <span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${TOMCAT_NAME}</span>_ROOT<span class="token variable">$DATE</span>
<span class="token function">unzip</span> <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/target/*.war <span class="token parameter variable">-d</span> <span class="token variable">$ROOT</span>
<span class="token variable">$TOMCAT_DIR</span>/bin/startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15、自动发布-php-项目" tabindex="-1"><a class="header-anchor" href="#_15、自动发布-php-项目"><span>15、自动发布 PHP 项目</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
 
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
 
<span class="token assign-left variable">WWWROOT</span><span class="token operator">=</span>/usr/local/nginx/html/<span class="token variable">$1</span>
 
 
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/backup
<span class="token assign-left variable">WORK_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">PROJECT_NAME</span><span class="token operator">=</span>php-demo
 
 
<span class="token comment"># 拉取代码</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$WORK_DIR</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$PROJECT_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">git</span> clone https://github.com/lizhenliang/php-demo
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
<span class="token keyword">else</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
   <span class="token function">git</span> pull
<span class="token keyword">fi</span>
 
 
<span class="token comment"># 部署</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$WWWROOT</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$WWWROOT</span>
   <span class="token function">rsync</span> <span class="token parameter variable">-avz</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>.git <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/* <span class="token variable">$WWWROOT</span>
<span class="token keyword">else</span>
   <span class="token function">rsync</span> <span class="token parameter variable">-avz</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>.git <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/* <span class="token variable">$WWWROOT</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_16、dos-攻击防范-自动屏蔽攻击-ip" tabindex="-1"><a class="header-anchor" href="#_16、dos-攻击防范-自动屏蔽攻击-ip"><span>16、DOS 攻击防范（自动屏蔽攻击 IP）</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%d/%b/%Y:%H:%M<span class="token variable">)</span></span>
<span class="token comment">#nginx日志</span>
<span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span>/usr/local/nginx/logs/demo2.access.log
<span class="token comment">#分析ip的访问情况</span>
<span class="token assign-left variable">ABNORMAL_IP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">tail</span> <span class="token parameter variable">-n5000</span> $LOG_FILE <span class="token operator">|</span><span class="token function">grep</span> $DATE <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{a[$1]++}END{for(i in a)if(a[i]&gt;10)print i}&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable">$ABNORMAL_IP</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span>iptables <span class="token parameter variable">-vnL</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable">$IP</span>&quot;</span><span class="token variable">)</span></span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        iptables <span class="token parameter variable">-I</span> INPUT <span class="token parameter variable">-s</span> <span class="token variable">$IP</span> <span class="token parameter variable">-j</span> DROP
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&#39;%F_%T&#39;</span><span class="token variable">)</span></span> <span class="token variable">$IP</span>&quot;</span> <span class="token operator">&gt;&gt;</span> /tmp/drop_ip.log
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_17、目录入侵检测与告警" tabindex="-1"><a class="header-anchor" href="#_17、目录入侵检测与告警"><span>17、目录入侵检测与告警</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
 
<span class="token assign-left variable">MON_DIR</span><span class="token operator">=</span>/opt
inotifywait <span class="token parameter variable">-mqr</span> <span class="token parameter variable">--format</span> %f <span class="token parameter variable">-e</span> create <span class="token variable">$MON_DIR</span> <span class="token operator">|</span><span class="token punctuation">\\</span>
<span class="token keyword">while</span> <span class="token builtin class-name">read</span> files<span class="token punctuation">;</span> <span class="token keyword">do</span>
   <span class="token comment">#同步文件</span>
   <span class="token function">rsync</span> <span class="token parameter variable">-avz</span> /opt /tmp/opt
  <span class="token comment">#检测文件是否被修改</span>
   <span class="token comment">#echo &quot;$(date +&#39;%F %T&#39;) create $files&quot; | mail -s &quot;dir monitor&quot; xxx@163.com</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_18、dos-攻击防范-自动屏蔽攻击-ip" tabindex="-1"><a class="header-anchor" href="#_18、dos-攻击防范-自动屏蔽攻击-ip"><span>18、Dos 攻击防范（自动屏蔽攻击 IP）</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%d/%b/%Y:%H:%M<span class="token variable">)</span></span>
<span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span>/usr/local/nginx/logs/demo2.access.log
<span class="token assign-left variable">ABNORMAL_IP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">tail</span> <span class="token parameter variable">-n5000</span> $LOG_FILE <span class="token operator">|</span><span class="token function">grep</span> $DATE <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{a[$1]++}END{for(i in a)if(a[i]&gt;10)print i}&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable">$ABNORMAL_IP</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span>iptables <span class="token parameter variable">-vnL</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable">$IP</span>&quot;</span><span class="token variable">)</span></span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        iptables <span class="token parameter variable">-I</span> INPUT <span class="token parameter variable">-s</span> <span class="token variable">$IP</span> <span class="token parameter variable">-j</span> DROP
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&#39;%F_%T&#39;</span><span class="token variable">)</span></span> <span class="token variable">$IP</span>&quot;</span> <span class="token operator">&gt;&gt;</span> /tmp/drop_ip.log
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_19、linux-系统发送告警脚本" tabindex="-1"><a class="header-anchor" href="#_19、linux-系统发送告警脚本"><span>19、Linux 系统发送告警脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># yum install mailx</span>
<span class="token comment"># vi /etc/mail.rc  </span>
<span class="token builtin class-name">set</span> <span class="token assign-left variable">from</span><span class="token operator">=</span>baojingtongzhi@163.com <span class="token assign-left variable">smtp</span><span class="token operator">=</span>smtp.163.com
<span class="token builtin class-name">set</span> smtp-auth-user<span class="token operator">=</span>baojingtongzhi@163.com smtp-auth-password<span class="token operator">=</span><span class="token number">123456</span>
<span class="token builtin class-name">set</span> smtp-auth<span class="token operator">=</span>login
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_20、mysql-数据库备份单循环" tabindex="-1"><a class="header-anchor" href="#_20、mysql-数据库备份单循环"><span>20、MySQL 数据库备份单循环</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%H-%M-%S<span class="token variable">)</span></span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>backup
<span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/db_backup
<span class="token assign-left variable">DB_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS <span class="token parameter variable">-s</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;show databases;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span><span class="token variable">)</span></span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">DB</span> <span class="token keyword">in</span> <span class="token variable">$DB_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">BACKUP_NAME</span><span class="token operator">=</span><span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${DB}</span>_<span class="token variable">\${DATE}</span>.sql
    <span class="token keyword">if</span> <span class="token operator">!</span> mysqldump -h<span class="token variable">$HOST</span> -u<span class="token environment constant">$USER</span> -p<span class="token variable">$PASS</span> <span class="token parameter variable">-B</span> <span class="token variable">$DB</span> <span class="token operator">&gt;</span> <span class="token variable">$BACKUP_NAME</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$BACKUP_NAME</span> 备份失败!&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_21、mysql-数据库备份多循环" tabindex="-1"><a class="header-anchor" href="#_21、mysql-数据库备份多循环"><span>21、MySQL 数据库备份多循环</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%H-%M-%S<span class="token variable">)</span></span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>backup
<span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/db_backup
<span class="token assign-left variable">DB_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS <span class="token parameter variable">-s</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;show databases;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span><span class="token variable">)</span></span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">DB</span> <span class="token keyword">in</span> <span class="token variable">$DB_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">BACKUP_DB_DIR</span><span class="token operator">=</span><span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${DB}</span>_<span class="token variable">\${DATE}</span>
    <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$BACKUP_DB_DIR</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$BACKUP_DB_DIR</span> <span class="token operator">&amp;&gt;</span>/dev/null
    <span class="token assign-left variable">TABLE_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS <span class="token parameter variable">-s</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;use <span class="token variable">$DB</span>;show tables;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">TABLE</span> <span class="token keyword">in</span> <span class="token variable">$TABLE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">BACKUP_NAME</span><span class="token operator">=</span><span class="token variable">$BACKUP_DB_DIR</span>/<span class="token variable">\${TABLE}</span>.sql 
        <span class="token keyword">if</span> <span class="token operator">!</span> mysqldump -h<span class="token variable">$HOST</span> -u<span class="token environment constant">$USER</span> -p<span class="token variable">$PASS</span> <span class="token variable">$DB</span> <span class="token variable">$TABLE</span> <span class="token operator">&gt;</span> <span class="token variable">$BACKUP_NAME</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$BACKUP_NAME</span> 备份失败!&quot;</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_22、nginx-访问访问日志按天切割" tabindex="-1"><a class="header-anchor" href="#_22、nginx-访问访问日志按天切割"><span>22、Nginx 访问访问日志按天切割</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">LOG_DIR</span><span class="token operator">=</span>/usr/local/nginx/logs
<span class="token assign-left variable">YESTERDAY_TIME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;yesterday&quot;</span> +%F<span class="token variable">)</span></span>
<span class="token assign-left variable">LOG_MONTH_DIR</span><span class="token operator">=</span><span class="token variable">$LOG_DIR</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&quot;%Y-%m&quot;</span><span class="token variable">)</span></span>
<span class="token assign-left variable">LOG_FILE_LIST</span><span class="token operator">=</span><span class="token string">&quot;default.access.log&quot;</span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">LOG_FILE</span> <span class="token keyword">in</span> <span class="token variable">$LOG_FILE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$LOG_MONTH_DIR</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$LOG_MONTH_DIR</span>
    <span class="token function">mv</span> <span class="token variable">$LOG_DIR</span>/<span class="token variable">$LOG_FILE</span> <span class="token variable">$LOG_MONTH_DIR</span>/<span class="token variable">\${LOG_FILE}</span>_<span class="token variable">\${YESTERDAY_TIME}</span>
<span class="token keyword">done</span>
 
<span class="token function">kill</span> <span class="token parameter variable">-USR1</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /var/run/nginx.pid<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_23、nginx-访问日志分析脚本" tabindex="-1"><a class="header-anchor" href="#_23、nginx-访问日志分析脚本"><span>23、Nginx 访问日志分析脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 日志格式: $remote_addr - $remote_user [$time_local] &quot;$request&quot; $status $body_bytes_sent &quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;</span>
<span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;统计访问最多的10个IP&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$1]++}END{print &quot;UV:&quot;,length(a);for(v in a)print v,a[v]}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k2</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span><span class="token function">head</span> <span class="token parameter variable">-10</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;统计时间段访问最多的IP&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;$4&gt;=&quot;[01/Dec/2018:13:20:25&quot; &amp;&amp; $4&lt;=&quot;[27/Nov/2018:16:20:49&quot;{a[$1]++}END{for(v in a)print v,a[v]}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k2</span> -nr<span class="token operator">|</span><span class="token function">head</span> <span class="token parameter variable">-10</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;统计访问最多的10个页面&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$7]++}END{print &quot;PV:&quot;,length(a);for(v in a){if(a[v]&gt;10)print v,a[v]}}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k2</span> <span class="token parameter variable">-nr</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;统计访问页面状态码数量&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$7&quot; &quot;$9]++}END{for(v in a){if(a[v]&gt;5)print v,a[v]}}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> <span class="token parameter variable">-k3</span> <span class="token parameter variable">-nr</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_24、查看网卡实时流量脚本" tabindex="-1"><a class="header-anchor" href="#_24、查看网卡实时流量脚本"><span>24、查看网卡实时流量脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">NIC</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot; In ------ Out&quot;</span>
<span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">OLD_IN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;$0~&quot;&#39;</span>$NIC<span class="token string">&#39;&quot;{print $2}&#39;</span> /proc/net/dev<span class="token variable">)</span></span>
    <span class="token assign-left variable">OLD_OUT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;$0~&quot;&#39;</span>$NIC<span class="token string">&#39;&quot;{print $10}&#39;</span> /proc/net/dev<span class="token variable">)</span></span>
    <span class="token function">sleep</span> <span class="token number">1</span>
    <span class="token assign-left variable">NEW_IN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span>  <span class="token string">&#39;$0~&quot;&#39;</span>$NIC<span class="token string">&#39;&quot;{print $2}&#39;</span> /proc/net/dev<span class="token variable">)</span></span>
    <span class="token assign-left variable">NEW_OUT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;$0~&quot;&#39;</span>$NIC<span class="token string">&#39;&quot;{print $10}&#39;</span> /proc/net/dev<span class="token variable">)</span></span>
    <span class="token assign-left variable">IN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%.1f%s&quot;</span> &quot;<span class="token punctuation">$((</span><span class="token punctuation">(</span>$NEW_IN-$OLD_IN<span class="token punctuation">)</span>/1024<span class="token variable">)</span></span><span class="token punctuation">)</span><span class="token string">&quot; &quot;</span>KB/s<span class="token string">&quot;)
    OUT=<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%.1f%s&quot;</span> &quot;<span class="token punctuation">$((</span><span class="token punctuation">(</span>$NEW_OUT-$OLD_OUT<span class="token punctuation">)</span>/1024<span class="token variable">)</span></span>)&quot;</span> <span class="token string">&quot;KB/s&quot;</span><span class="token punctuation">)</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$IN</span> <span class="token variable">$OUT</span>&quot;</span>
    <span class="token function">sleep</span> <span class="token number">1</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_25、服务器系统配置初始化脚本" tabindex="-1"><a class="header-anchor" href="#_25、服务器系统配置初始化脚本"><span>25、服务器系统配置初始化脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#/bin/bash</span>
<span class="token comment"># 设置时区并同步时间</span>
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">crontab</span> <span class="token parameter variable">-l</span> <span class="token operator">|</span><span class="token function">grep</span> ntpdate <span class="token operator">&amp;&gt;</span>/dev/null <span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token punctuation">(</span>echo <span class="token string">&quot;* 1 * * * ntpdate time.windows.com &gt;/dev/null 2&gt;&amp;1&quot;</span><span class="token punctuation">;</span><span class="token function">crontab</span> -l<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token function">crontab</span>
<span class="token keyword">fi</span>
 
<span class="token comment"># 禁用selinux</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;/SELINUX/{s/permissive/disabled/}&#39;</span> /etc/selinux/config
 
<span class="token comment"># 关闭防火墙</span>
<span class="token keyword">if</span> <span class="token function">egrep</span> <span class="token string">&quot;7.[0-9]&quot;</span> /etc/redhat-release <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    systemctl stop firewalld
    systemctl disable firewalld
<span class="token keyword">elif</span> <span class="token function">egrep</span> <span class="token string">&quot;6.[0-9]&quot;</span> /etc/redhat-release <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">service</span> iptables stop
    <span class="token function">chkconfig</span> iptables off
<span class="token keyword">fi</span>
 
<span class="token comment"># 历史命令显示操作时间</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> HISTTIMEFORMAT /etc/bashrc<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;export HISTTIMEFORMAT=&quot;%F %T \`whoami\` &quot;&#39;</span> <span class="token operator">&gt;&gt;</span> /etc/bashrc
<span class="token keyword">fi</span>
 
<span class="token comment"># SSH超时时间</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> <span class="token string">&quot;TMOUT=600&quot;</span> /etc/profile <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;export TMOUT=600&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/profile
<span class="token keyword">fi</span>
 
<span class="token comment"># 禁止root远程登录</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/#PermitRootLogin yes/PermitRootLogin no/&#39;</span> /etc/ssh/sshd_config
 
<span class="token comment"># 禁止定时任务向发送邮件</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/^MAILTO=root/MAILTO=&quot;&quot;/&#39;</span> /etc/crontab
 
<span class="token comment"># 设置最大打开文件数</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> <span class="token string">&quot;* soft nofile 65535&quot;</span> /etc/security/limits.conf <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
    * soft nofile 65535
    * hard nofile 65535
    EOF
fi
 
# 系统内核优化
cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_tw_buckets = 20480
net.ipv4.tcp_max_syn_backlog = 20480
net.core.netdev_max_backlog = 262144
net.ipv4.tcp_fin_timeout = 20  
EOF</span>
 
<span class="token comment"># 减少SWAP使用</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">&gt;</span> /proc/sys/vm/swappiness
 
<span class="token comment"># 安装系统性能分析工具及其他</span>
yum <span class="token function">install</span> gcc <span class="token function">make</span> autoconf <span class="token function">vim</span> sysstat net-tools iostat iftop iotp lrzsz <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_26、监控-100-台服务器磁盘利用率脚本" tabindex="-1"><a class="header-anchor" href="#_26、监控-100-台服务器磁盘利用率脚本"><span>26、监控 100 台服务器磁盘利用率脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">HOST_INFO</span><span class="token operator">=</span>host.info
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^[^#]/{print $1}&#39;</span> $HOST_INFO<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $2}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $3}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">TMP_FILE</span><span class="token operator">=</span>/tmp/disk.tmp
    <span class="token function">ssh</span> <span class="token parameter variable">-p</span> <span class="token variable">$PORT</span> <span class="token environment constant">$USER</span>@<span class="token variable">$IP</span> <span class="token string">&#39;df -h&#39;</span> <span class="token operator">&gt;</span> <span class="token variable">$TMP_FILE</span>
    <span class="token assign-left variable">USE_RATE_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;BEGIN{OFS=&quot;=&quot;}/^\\/dev/{print $NF,int($5)}&#39;</span> $TMP_FILE<span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">USE_RATE</span> <span class="token keyword">in</span> <span class="token variable">$USE_RATE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">PART_NAME</span><span class="token operator">=</span><span class="token variable">\${USE_RATE<span class="token operator">%</span>=*}</span>
        <span class="token assign-left variable">USE_RATE</span><span class="token operator">=</span><span class="token variable">\${USE_RATE<span class="token operator">#</span>*=}</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$USE_RATE</span> <span class="token parameter variable">-ge</span> <span class="token number">80</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;Warning: <span class="token variable">$PART_NAME</span> Partition usage <span class="token variable">$USE_RATE</span>%!&quot;</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_27、监控-mysql-主从同步状态是否异常脚本" tabindex="-1"><a class="header-anchor" href="#_27、监控-mysql-主从同步状态是否异常脚本"><span>27、监控 MySQL 主从同步状态是否异常脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash  </span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>root
<span class="token assign-left variable">PASSWD</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">IO_SQL_STATUS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASSWD <span class="token parameter variable">-e</span> <span class="token string">&#39;show slave status\\G&#39;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;/Slave_.*_Running:/{print $1$2}&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable">$IO_SQL_STATUS</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">THREAD_STATUS_NAME</span><span class="token operator">=</span><span class="token variable">\${i<span class="token operator">%</span><span class="token operator">:</span>*}</span>
    <span class="token assign-left variable">THREAD_STATUS</span><span class="token operator">=</span><span class="token variable">\${i<span class="token operator">#</span>*<span class="token operator">:</span>}</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$THREAD_STATUS</span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;Yes&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Error: MySQL Master-Slave <span class="token variable">$THREAD_STATUS_NAME</span> status is <span class="token variable">$THREAD_STATUS</span>!&quot;</span> <span class="token operator">|</span>mail <span class="token parameter variable">-s</span> <span class="token string">&quot;Master-Slave Staus&quot;</span> <span class="token punctuation">[</span>url<span class="token operator">=</span>mailto:xxx@163.com<span class="token punctuation">]</span>xxx@163.com<span class="token punctuation">[</span>/url<span class="token punctuation">]</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_28、目录文件变化监控和实时文件同步" tabindex="-1"><a class="header-anchor" href="#_28、目录文件变化监控和实时文件同步"><span>28、目录文件变化监控和实时文件同步</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
 
<span class="token assign-left variable">MON_DIR</span><span class="token operator">=</span>/opt
inotifywait <span class="token parameter variable">-mqr</span> <span class="token parameter variable">--format</span> %f <span class="token parameter variable">-e</span> create <span class="token variable">$MON_DIR</span> <span class="token operator">|</span><span class="token punctuation">\\</span>
<span class="token keyword">while</span> <span class="token builtin class-name">read</span> files<span class="token punctuation">;</span> <span class="token keyword">do</span>
   <span class="token function">rsync</span> <span class="token parameter variable">-avz</span> /opt /tmp/opt
   <span class="token comment">#echo &quot;$(date +&#39;%F %T&#39;) create $files&quot; | mail -s &quot;dir monitor&quot; [url=mailto:xxx@163.com]xxx@163.com[/url]</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_29、批量创建-100-用户并设置密码脚本" tabindex="-1"><a class="header-anchor" href="#_29、批量创建-100-用户并设置密码脚本"><span>29、批量创建 100 用户并设置密码脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable">$@</span>
<span class="token assign-left variable">USER_FILE</span><span class="token operator">=</span>user.txt
<span class="token keyword">for</span> <span class="token for-or-select variable">USER</span> <span class="token keyword">in</span> <span class="token variable">$USER_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">id</span> <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span> <span class="token operator">|</span>md5sum <span class="token operator">|</span><span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">1</span>-8<span class="token variable">)</span></span>
        <span class="token function">useradd</span> <span class="token environment constant">$USER</span>
        <span class="token builtin class-name">echo</span> <span class="token variable">$PASS</span> <span class="token operator">|</span><span class="token function">passwd</span> <span class="token parameter variable">--stdin</span> <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span>   <span class="token variable">$PASS</span>&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$USER_FILE</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User create successful.&quot;</span>
    <span class="token keyword">else</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User already exists!&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_30、批量检测网站是否异常脚本" tabindex="-1"><a class="header-anchor" href="#_30、批量检测网站是否异常脚本"><span>30、批量检测网站是否异常脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash  </span>
<span class="token assign-left variable">URL_LIST</span><span class="token operator">=</span><span class="token string">&quot;www.baidu.com [url=http://www.ctnrs.com]www.ctnrs.com[/url]&quot;</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">URL</span> <span class="token keyword">in</span> <span class="token variable">$URL_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">FAIL_COUNT</span><span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">HTTP_CODE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-o</span> /dev/null --connect-timeout <span class="token number">3</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-w</span> <span class="token string">&quot;%{http_code}&quot;</span> $URL<span class="token variable">)</span></span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$HTTP_CODE</span> <span class="token parameter variable">-eq</span> <span class="token number">200</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$URL</span> OK&quot;</span>
            <span class="token builtin class-name">break</span>
        <span class="token keyword">else</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$URL</span> retry <span class="token variable">$FAIL_COUNT</span>&quot;</span>
            <span class="token builtin class-name">let</span> FAIL_COUNT++
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$FAIL_COUNT</span> <span class="token parameter variable">-eq</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Warning: <span class="token variable">$URL</span> Access failure!&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_31、批量主机远程执行命令脚本" tabindex="-1"><a class="header-anchor" href="#_31、批量主机远程执行命令脚本"><span>31、批量主机远程执行命令脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">COMMAND</span><span class="token operator">=</span><span class="token variable">$*</span>
<span class="token assign-left variable">HOST_INFO</span><span class="token operator">=</span>host.info
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^[^#]/{print $1}&#39;</span> $HOST_INFO<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $2}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $3}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token parameter variable">-v</span> <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $4}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token function">expect</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;
       spawn ssh -p <span class="token variable">$PORT</span> <span class="token environment constant">$USER</span>@<span class="token variable">$IP</span>
       expect {
          <span class="token entity" title="\\&quot;">\\&quot;</span>(yes/no)<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span>yes<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
          <span class="token entity" title="\\&quot;">\\&quot;</span>password:<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$PASS</span><span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
          <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token environment constant">$USER</span>@*<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$COMMAND</span><span class="token entity" title="\\r">\\r</span> exit<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
       }
    &quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;-------------------&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_32、一键部署-lnmp-网站平台脚本" tabindex="-1"><a class="header-anchor" href="#_32、一键部署-lnmp-网站平台脚本"><span>32、一键部署 LNMP 网站平台脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">NGINX_V</span><span class="token operator">=</span><span class="token number">1.15</span>.6
<span class="token assign-left variable">PHP_V</span><span class="token operator">=</span><span class="token number">5.6</span>.36
<span class="token assign-left variable">TMP_DIR</span><span class="token operator">=</span>/tmp
 
<span class="token assign-left variable">INSTALL_DIR</span><span class="token operator">=</span>/usr/local
 
<span class="token assign-left variable">PWD_C</span><span class="token operator">=</span><span class="token environment constant">$PWD</span>
 
<span class="token builtin class-name">echo</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span>Menu<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;1. Install Nginx&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;2. Install PHP&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;3. Install MySQL&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;4. Deploy LNMP&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;9. Quit&quot;</span>
 
<span class="token keyword">function</span> <span class="token function-name function">command_status_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
                <span class="token builtin class-name">echo</span> <span class="token variable">$1</span>
                <span class="token builtin class-name">exit</span>
        <span class="token keyword">fi</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">install_nginx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin class-name">cd</span> <span class="token variable">$TMP_DIR</span>
    yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc gcc-c++ <span class="token function">make</span> openssl-devel pcre-devel <span class="token function">wget</span>
    <span class="token function">wget</span> <span class="token punctuation">[</span>url<span class="token operator">=</span>http://nginx.org/download/nginx-<span class="token punctuation">]</span>http://nginx.org/download/nginx-<span class="token punctuation">[</span>/url<span class="token punctuation">]</span><span class="token variable">\${NGINX_V}</span>.tar.gz
    <span class="token function">tar</span> zxf nginx-<span class="token variable">\${NGINX_V}</span>.tar.gz
    <span class="token builtin class-name">cd</span> nginx-<span class="token variable">\${NGINX_V}</span>
    ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/nginx <span class="token punctuation">\\</span>
    --with-http_ssl_module <span class="token punctuation">\\</span>
    --with-http_stub_status_module <span class="token punctuation">\\</span>
    --with-stream
    command_status_check <span class="token string">&quot;Nginx - 平台环境检查失败！&quot;</span>
    <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">4</span> 
    command_status_check <span class="token string">&quot;Nginx - 编译失败！&quot;</span>
    <span class="token function">make</span> <span class="token function">install</span>
    command_status_check <span class="token string">&quot;Nginx - 安装失败！&quot;</span>
    <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$INSTALL_DIR</span>/nginx/conf/vhost
    <span class="token builtin class-name">alias</span> <span class="token assign-left variable">cp</span><span class="token operator">=</span>cp <span class="token punctuation">;</span> <span class="token function">cp</span> <span class="token parameter variable">-rf</span> <span class="token variable">$PWD_C</span>/nginx.conf <span class="token variable">$INSTALL_DIR</span>/nginx/conf
    <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/*
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;ok&quot;</span> <span class="token operator">&gt;</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/status.html
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;&lt;?php echo &quot;ok&quot;?&gt;&#39;</span> <span class="token operator">&gt;</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/status.php
    <span class="token variable">$INSTALL_DIR</span>/nginx/sbin/nginx
    command_status_check <span class="token string">&quot;Nginx - 启动失败！&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">install_php</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin class-name">cd</span> <span class="token variable">$TMP_DIR</span>
    yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc gcc-c++ <span class="token function">make</span> gd-devel libxml2-devel <span class="token punctuation">\\</span>
        libcurl-devel libjpeg-devel libpng-devel openssl-devel <span class="token punctuation">\\</span>
        libmcrypt-devel libxslt-devel libtidy-devel
    <span class="token function">wget</span> <span class="token punctuation">[</span>url<span class="token operator">=</span>http://docs.php.net/distributions/php-<span class="token punctuation">]</span>http://docs.php.net/distributions/php-<span class="token punctuation">[</span>/url<span class="token punctuation">]</span><span class="token variable">\${PHP_V}</span>.tar.gz
    <span class="token function">tar</span> zxf php-<span class="token variable">\${PHP_V}</span>.tar.gz
    <span class="token builtin class-name">cd</span> php-<span class="token variable">\${PHP_V}</span>
    ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/php <span class="token punctuation">\\</span>
    --with-config-file-path<span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/php/etc <span class="token punctuation">\\</span>
    --enable-fpm --enable-opcache <span class="token punctuation">\\</span>
    --with-mysql --with-mysqli --with-pdo-mysql <span class="token punctuation">\\</span>
    --with-openssl --with-zlib --with-curl --with-gd <span class="token punctuation">\\</span>
    --with-jpeg-dir --with-png-dir --with-freetype-dir <span class="token punctuation">\\</span>
    --enable-mbstring --enable-hash
    command_status_check <span class="token string">&quot;PHP - 平台环境检查失败！&quot;</span>
    <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">4</span> 
    command_status_check <span class="token string">&quot;PHP - 编译失败！&quot;</span>
    <span class="token function">make</span> <span class="token function">install</span>
    command_status_check <span class="token string">&quot;PHP - 安装失败！&quot;</span>
    <span class="token function">cp</span> php.ini-production <span class="token variable">$INSTALL_DIR</span>/php/etc/php.ini
    <span class="token function">cp</span> sapi/fpm/php-fpm.conf <span class="token variable">$INSTALL_DIR</span>/php/etc/php-fpm.conf
    <span class="token function">cp</span> sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
    <span class="token function">chmod</span> +x /etc/init.d/php-fpm
    /etc/init.d/php-fpm start
    command_status_check <span class="token string">&quot;PHP - 启动失败！&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入编号：&quot;</span> number
<span class="token keyword">case</span> <span class="token variable">$number</span> <span class="token keyword">in</span>
    <span class="token number">1</span><span class="token punctuation">)</span>
        install_nginx<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">2</span><span class="token punctuation">)</span>
        install_php<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">3</span><span class="token punctuation">)</span>
        install_mysql<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">4</span><span class="token punctuation">)</span>
        install_nginx
        install_php
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">9</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_33、一键查看服务器资源利用率" tabindex="-1"><a class="header-anchor" href="#_33、一键查看服务器资源利用率"><span>33、一键查看服务器资源利用率</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token keyword">function</span> <span class="token function-name function">cpu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">NUM</span><span class="token operator">=</span><span class="token number">1</span>
    <span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token variable">$NUM</span> <span class="token parameter variable">-le</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">util</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">vmstat</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print 100-$15&quot;%&quot;}&#39;</span><span class="token variable">\`</span></span>
        <span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">vmstat</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $13&quot;%&quot;}&#39;</span><span class="token variable">\`</span></span>
        <span class="token assign-left variable">sys</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">vmstat</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $14&quot;%&quot;}&#39;</span><span class="token variable">\`</span></span>
        <span class="token assign-left variable">iowait</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">vmstat</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $16&quot;%&quot;}&#39;</span><span class="token variable">\`</span></span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;CPU - 使用率: <span class="token variable">$util</span> , 等待磁盘IO响应使用率: <span class="token variable">$iowait</span>&quot;</span>
        <span class="token builtin class-name">let</span> NUM++
        <span class="token function">sleep</span> <span class="token number">1</span>
    <span class="token keyword">done</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">memory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2)printf &quot;%.1f&quot;,$2/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2) printf &quot;%.1f&quot;,($2-$NF)/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> <span class="token parameter variable">-m</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2) printf &quot;%.1f&quot;,$NF/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;内存 - 总大小: <span class="token variable">\${total}</span>G , 使用: <span class="token variable">\${used}</span>G , 剩余: <span class="token variable">\${available}</span>G&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">disk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">fs</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;/^\\/dev/{print $1}&#39;</span><span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">p</span> <span class="token keyword">in</span> <span class="token variable">$fs</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">mounted</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $NF}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $2}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $3}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">used_percent</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $5}&#39;</span><span class="token variable">)</span></span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;硬盘 - 挂载点: <span class="token variable">$mounted</span> , 总大小: <span class="token variable">$size</span> , 使用: <span class="token variable">$used</span> , 使用率: <span class="token variable">$used_percent</span>&quot;</span>
    <span class="token keyword">done</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">tcp_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">summary</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>ss <span class="token parameter variable">-antp</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{status[$1]++}END{for(i in status) printf i&quot;:&quot;status[i]&quot; &quot;}&#39;</span><span class="token variable">)</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;TCP连接状态 - <span class="token variable">$summary</span>&quot;</span>
<span class="token punctuation">}</span>
 
cpu
memory
disk
tcp_status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_34、找出占用-cpu-内存过高的进程脚本" tabindex="-1"><a class="header-anchor" href="#_34、找出占用-cpu-内存过高的进程脚本"><span>34、找出占用 CPU 内存过高的进程脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-eo</span> user,pid,pcpu,pmem,args <span class="token parameter variable">--sort</span><span class="token operator">=</span>-pcpu  <span class="token operator">|</span><span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">10</span>
 
<span class="token function">ps</span> <span class="token parameter variable">-eo</span> user,pid,pcpu,pmem,args <span class="token parameter variable">--sort</span><span class="token operator">=</span>-pmem  <span class="token operator">|</span><span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_35、自动发布-java-项目-tomcat" tabindex="-1"><a class="header-anchor" href="#_35、自动发布-java-项目-tomcat"><span>35、自动发布 Java 项目（Tomcat）</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
 
<span class="token assign-left variable">TOMCAT_NAME</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token assign-left variable">TOMCAT_DIR</span><span class="token operator">=</span>/usr/local/<span class="token variable">$TOMCAT_NAME</span>
<span class="token assign-left variable">ROOT</span><span class="token operator">=</span><span class="token variable">$TOMCAT_DIR</span>/webapps/ROOT
 
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/backup
<span class="token assign-left variable">WORK_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">PROJECT_NAME</span><span class="token operator">=</span>tomcat-java-demo
 
<span class="token comment"># 拉取代码</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$WORK_DIR</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$PROJECT_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token operator">=</span>https://github.com/lizhenliang/tomcat-java-demo<span class="token punctuation">]</span>https://github.com/lizhenliang/tomcat-java-demo<span class="token punctuation">[</span>/url<span class="token punctuation">]</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
<span class="token keyword">else</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
   <span class="token function">git</span> pull
<span class="token keyword">fi</span>
 
<span class="token comment"># 构建</span>
mvn clean package <span class="token parameter variable">-Dmaven.test.skip</span><span class="token operator">=</span>true
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token builtin class-name">echo</span> <span class="token string">&quot;maven build failure!&quot;</span>
   <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
 
<span class="token comment"># 部署</span>
<span class="token assign-left variable">TOMCAT_PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">&quot;<span class="token variable">$TOMCAT_NAME</span>&quot;</span> <span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;grep|<span class="token variable">$$</span>&quot;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;NR==1{print $2}&#39;</span><span class="token variable">)</span></span>
<span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token variable">$TOMCAT_PID</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$TOMCAT_PID</span>
<span class="token punctuation">[</span> <span class="token parameter variable">-d</span> <span class="token variable">$ROOT</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> <span class="token variable">$ROOT</span> <span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${TOMCAT_NAME}</span>_ROOT<span class="token variable">$DATE</span>
<span class="token function">unzip</span> <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/target/*.war <span class="token parameter variable">-d</span> <span class="token variable">$ROOT</span>
<span class="token variable">$TOMCAT_DIR</span>/bin/startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_36、自动发布-php-项目脚本" tabindex="-1"><a class="header-anchor" href="#_36、自动发布-php-项目脚本"><span>36、自动发布 PHP 项目脚本</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
 
<span class="token assign-left variable">WWWROOT</span><span class="token operator">=</span>/usr/local/nginx/html/<span class="token variable">$1</span>
 
 
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/backup
<span class="token assign-left variable">WORK_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">PROJECT_NAME</span><span class="token operator">=</span>php-demo
 
 
<span class="token comment"># 拉取代码</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$WORK_DIR</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$PROJECT_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token operator">=</span>https://github.com/lizhenliang/php-demo<span class="token punctuation">]</span>https://github.com/lizhenliang/php-demo<span class="token punctuation">[</span>/url<span class="token punctuation">]</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
<span class="token keyword">else</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
   <span class="token function">git</span> pull
<span class="token keyword">fi</span>
 
 
<span class="token comment"># 部署</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$WWWROOT</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$WWWROOT</span>
   <span class="token function">rsync</span> <span class="token parameter variable">-avz</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>.git <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/* <span class="token variable">$WWWROOT</span>
<span class="token keyword">else</span>
   <span class="token function">rsync</span> <span class="token parameter variable">-avz</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>.git <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/* <span class="token variable">$WWWROOT</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,76),t=[l];function i(o,c){return n(),a("div",null,t)}const v=s(p,[["render",i],["__file","实用 shell 脚本.html.vue"]]),d=JSON.parse('{"path":"/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC.html","title":"实用 shell 脚本","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"实用 shell 脚本","excerpt":null,"description":"实用 shell 脚本，建议收藏！","date":"2022-02-15T00:00:00.000Z","category":"Linux","tag":"Linux","article":true,"timeline":true,"icon":"type","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/linux/%E5%AE%9E%E7%94%A8%20shell%20%E8%84%9A%E6%9C%AC.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"实用 shell 脚本"}],["meta",{"property":"og:description","content":"实用 shell 脚本，建议收藏！"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2022-02-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"实用 shell 脚本\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"1、服务器系统配置初始化","slug":"_1、服务器系统配置初始化","link":"#_1、服务器系统配置初始化","children":[]},{"level":2,"title":"2、批量创建多个用户并设置密码","slug":"_2、批量创建多个用户并设置密码","link":"#_2、批量创建多个用户并设置密码","children":[]},{"level":2,"title":"3、一键查看服务器利用率","slug":"_3、一键查看服务器利用率","link":"#_3、一键查看服务器利用率","children":[]},{"level":2,"title":"4、找出占用 CPU 内存过高的进程","slug":"_4、找出占用-cpu-内存过高的进程","link":"#_4、找出占用-cpu-内存过高的进程","children":[]},{"level":2,"title":"5、查看网卡的实时流量","slug":"_5、查看网卡的实时流量","link":"#_5、查看网卡的实时流量","children":[]},{"level":2,"title":"6、监控多台服务器磁盘利用率脚本","slug":"_6、监控多台服务器磁盘利用率脚本","link":"#_6、监控多台服务器磁盘利用率脚本","children":[]},{"level":2,"title":"7、批量检测网站是否异常并邮件通知","slug":"_7、批量检测网站是否异常并邮件通知","link":"#_7、批量检测网站是否异常并邮件通知","children":[]},{"level":2,"title":"8、批量主机远程执行命令脚本","slug":"_8、批量主机远程执行命令脚本","link":"#_8、批量主机远程执行命令脚本","children":[]},{"level":2,"title":"9、一键部署 LNMP 网站平台脚本","slug":"_9、一键部署-lnmp-网站平台脚本","link":"#_9、一键部署-lnmp-网站平台脚本","children":[]},{"level":2,"title":"10、监控 MySQL 主从同步状态是否异常脚本","slug":"_10、监控-mysql-主从同步状态是否异常脚本","link":"#_10、监控-mysql-主从同步状态是否异常脚本","children":[]},{"level":2,"title":"11、MySql 数据库备份脚本","slug":"_11、mysql-数据库备份脚本","link":"#_11、mysql-数据库备份脚本","children":[]},{"level":2,"title":"12、Nginx 访问日志分析","slug":"_12、nginx-访问日志分析","link":"#_12、nginx-访问日志分析","children":[]},{"level":2,"title":"13、Nginx 访问日志自动按天（周、月）切割","slug":"_13、nginx-访问日志自动按天-周、月-切割","link":"#_13、nginx-访问日志自动按天-周、月-切割","children":[]},{"level":2,"title":"14、自动发布 Java 项目（Tomcat）","slug":"_14、自动发布-java-项目-tomcat","link":"#_14、自动发布-java-项目-tomcat","children":[]},{"level":2,"title":"15、自动发布 PHP 项目","slug":"_15、自动发布-php-项目","link":"#_15、自动发布-php-项目","children":[]},{"level":2,"title":"16、DOS 攻击防范（自动屏蔽攻击 IP）","slug":"_16、dos-攻击防范-自动屏蔽攻击-ip","link":"#_16、dos-攻击防范-自动屏蔽攻击-ip","children":[]},{"level":2,"title":"17、目录入侵检测与告警","slug":"_17、目录入侵检测与告警","link":"#_17、目录入侵检测与告警","children":[]},{"level":2,"title":"18、Dos 攻击防范（自动屏蔽攻击 IP）","slug":"_18、dos-攻击防范-自动屏蔽攻击-ip","link":"#_18、dos-攻击防范-自动屏蔽攻击-ip","children":[]},{"level":2,"title":"19、Linux 系统发送告警脚本","slug":"_19、linux-系统发送告警脚本","link":"#_19、linux-系统发送告警脚本","children":[]},{"level":2,"title":"20、MySQL 数据库备份单循环","slug":"_20、mysql-数据库备份单循环","link":"#_20、mysql-数据库备份单循环","children":[]},{"level":2,"title":"21、MySQL 数据库备份多循环","slug":"_21、mysql-数据库备份多循环","link":"#_21、mysql-数据库备份多循环","children":[]},{"level":2,"title":"22、Nginx 访问访问日志按天切割","slug":"_22、nginx-访问访问日志按天切割","link":"#_22、nginx-访问访问日志按天切割","children":[]},{"level":2,"title":"23、Nginx 访问日志分析脚本","slug":"_23、nginx-访问日志分析脚本","link":"#_23、nginx-访问日志分析脚本","children":[]},{"level":2,"title":"24、查看网卡实时流量脚本","slug":"_24、查看网卡实时流量脚本","link":"#_24、查看网卡实时流量脚本","children":[]},{"level":2,"title":"25、服务器系统配置初始化脚本","slug":"_25、服务器系统配置初始化脚本","link":"#_25、服务器系统配置初始化脚本","children":[]},{"level":2,"title":"26、监控 100 台服务器磁盘利用率脚本","slug":"_26、监控-100-台服务器磁盘利用率脚本","link":"#_26、监控-100-台服务器磁盘利用率脚本","children":[]},{"level":2,"title":"27、监控 MySQL 主从同步状态是否异常脚本","slug":"_27、监控-mysql-主从同步状态是否异常脚本","link":"#_27、监控-mysql-主从同步状态是否异常脚本","children":[]},{"level":2,"title":"28、目录文件变化监控和实时文件同步","slug":"_28、目录文件变化监控和实时文件同步","link":"#_28、目录文件变化监控和实时文件同步","children":[]},{"level":2,"title":"29、批量创建 100 用户并设置密码脚本","slug":"_29、批量创建-100-用户并设置密码脚本","link":"#_29、批量创建-100-用户并设置密码脚本","children":[]},{"level":2,"title":"30、批量检测网站是否异常脚本","slug":"_30、批量检测网站是否异常脚本","link":"#_30、批量检测网站是否异常脚本","children":[]},{"level":2,"title":"31、批量主机远程执行命令脚本","slug":"_31、批量主机远程执行命令脚本","link":"#_31、批量主机远程执行命令脚本","children":[]},{"level":2,"title":"32、一键部署 LNMP 网站平台脚本","slug":"_32、一键部署-lnmp-网站平台脚本","link":"#_32、一键部署-lnmp-网站平台脚本","children":[]},{"level":2,"title":"33、一键查看服务器资源利用率","slug":"_33、一键查看服务器资源利用率","link":"#_33、一键查看服务器资源利用率","children":[]},{"level":2,"title":"34、找出占用 CPU 内存过高的进程脚本","slug":"_34、找出占用-cpu-内存过高的进程脚本","link":"#_34、找出占用-cpu-内存过高的进程脚本","children":[]},{"level":2,"title":"35、自动发布 Java 项目（Tomcat）","slug":"_35、自动发布-java-项目-tomcat","link":"#_35、自动发布-java-项目-tomcat","children":[]},{"level":2,"title":"36、自动发布 PHP 项目脚本","slug":"_36、自动发布-php-项目脚本","link":"#_36、自动发布-php-项目脚本","children":[]}],"git":{"createdTime":1647698494000,"updatedTime":1714224756000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2},{"name":"xlc","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":14.47,"words":4341},"filePathRelative":"linux/实用 shell 脚本.md","localizedDate":"2022年2月15日"}');export{v as comp,d as data};
