const e=JSON.parse('{"key":"v-3db67a40","path":"/dev/SpringBoot%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%A7%A3%E5%AF%86%E5%AE%9E%E6%88%98.html","title":"SpringBoot 接口数据加解密实战","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"SpringBoot 接口数据加解密实战","description":"SpringBoot 接口数据加解密实战 需求解析： 服务端、客户端和H5统一拦截加解密，网上有成熟方案，也可以按其他服务中实现的加解密流程来搞； 使用AES放松加密，考虑到H5端存储密钥安全性相对来说会低一些，故分针对H5和安卓、IOS分配两套密钥； 本次涉及客户端和服务端的整体改造，经讨论，新接口统一加 /secret/ 前缀来区分 按本次需求来简单还原问题，定义两个对象，后面用得着， 用户类： @Data public class User { private Integer id; private String name; private UserType userType = UserType.COMMON; @JsonFormat(pattern = \\"yyyy-MM-dd HH:mm:ss\\") private LocalDateTime registerTime; }","date":"2022-07-06T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/SpringBoot%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%A7%A3%E5%AF%86%E5%AE%9E%E6%88%98.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"SpringBoot 接口数据加解密实战"}],["meta",{"property":"og:description","content":"SpringBoot 接口数据加解密实战 需求解析： 服务端、客户端和H5统一拦截加解密，网上有成熟方案，也可以按其他服务中实现的加解密流程来搞； 使用AES放松加密，考虑到H5端存储密钥安全性相对来说会低一些，故分针对H5和安卓、IOS分配两套密钥； 本次涉及客户端和服务端的整体改造，经讨论，新接口统一加 /secret/ 前缀来区分 按本次需求来简单还原问题，定义两个对象，后面用得着， 用户类： @Data public class User { private Integer id; private String name; private UserType userType = UserType.COMMON; @JsonFormat(pattern = \\"yyyy-MM-dd HH:mm:ss\\") private LocalDateTime registerTime; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T09:41:05.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-07-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T09:41:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot 接口数据加解密实战\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T09:41:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[],"git":{"createdTime":1668948234000,"updatedTime":1678873265000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":8.51,"words":2554},"filePathRelative":"dev/SpringBoot接口数据加解密实战.md","localizedDate":"2022年7月6日","excerpt":"<h1> SpringBoot 接口数据加解密实战</h1>\\n<p>需求解析：</p>\\n<ol>\\n<li>服务端、客户端和H5统一拦截加解密，网上有成熟方案，也可以按其他服务中实现的加解密流程来搞；</li>\\n<li>使用AES放松加密，考虑到H5端存储密钥安全性相对来说会低一些，故分针对H5和安卓、IOS分配两套密钥；</li>\\n<li>本次涉及客户端和服务端的整体改造，经讨论，新接口统一加 /secret/ 前缀来区分</li>\\n</ol>\\n<p>按本次需求来简单还原问题，定义两个对象，后面用得着，</p>\\n<p>用户类：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Data</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">User</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> id<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> name<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">UserType</span> userType <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">UserType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">COMMON</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token annotation punctuation\\">@JsonFormat</span><span class=\\"token punctuation\\">(</span>pattern <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"yyyy-MM-dd HH:mm:ss\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">LocalDateTime</span> registerTime<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
