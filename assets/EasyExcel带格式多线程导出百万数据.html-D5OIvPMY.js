import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,d as s,e as n,b as p,a}from"./app-Clq2mtAP.js";const u={},i=a(`<h1 id="easyexcel-带格式多线程导出百万数据" tabindex="-1"><a class="header-anchor" href="#easyexcel-带格式多线程导出百万数据"><span>EasyExcel 带格式多线程导出百万数据</span></a></h1><h2 id="_1-背景说明" tabindex="-1"><a class="header-anchor" href="#_1-背景说明"><span>1. 背景说明</span></a></h2><p>针对明细报表，用户会选择针对当前明细数据进行导出，便于本地或者线下进行处理或者计算等需求。不过一般在这种大数据量的导出任务下，会引发以下问题： 1） 响应时间较慢； 2） 内存资源占用过大，基本上一个大数据量的导出会消耗可视化服务的所有资源，引起内存回收，其它接口无响应； 考虑到单个 excel 文件过大，采用压缩文件流 zip 的方式，一个 excel 只有一个页签，一个页签最多十万条数据，所以少于十万条数据，会导出 excel 文件，而非 zip 压缩文件。另外，这里导出功能的速率不能单以数据条数为量级进行衡量，平常一般一万条数据就是 1M 字节。较为准确的公式如下（借此就可以评估出很多数据导出的文件大小）：</p><blockquote><p>文件大小 1M 字节 = 字段列数 15 个 * 数据条数一万条</p></blockquote><h2 id="_2-方案概述" tabindex="-1"><a class="header-anchor" href="#_2-方案概述"><span>2. 方案概述</span></a></h2><h3 id="_1-大数据量导出问题主要是以下三个地方" tabindex="-1"><a class="header-anchor" href="#_1-大数据量导出问题主要是以下三个地方"><span>（1）大数据量导出问题主要是以下三个地方</span></a></h3><p>1）资源占用 2）内存（也是资源的一个，单独说明） 3）响应时间 针对以上三个问题，大方向考虑的是多线程结合数据流写入的方式。**多线程 **：使用空间换时间，主要是加快接口响应时间，但是这里线程数不宜过多，一味加快响应时间提升线程数，资源占用会非常严重，故会考虑线程池，线程池的线程数为 10； <strong>数据流</strong> ：数据的 IO-读取/写入等操作一般都是通过“数据包”的方式，即将结果数据作为一个整体，这样如果数据量多的话，会非常占用内存，所以采用数据流的方式，而且导出的时候会进行格式设置（单元格合并、背景色、字体样式等），一直使用的是 Alibaba EasyExcel 组件，并且 Alibaba EasyExcel 组件支持数据流的方式读取/写入数据。</p><h3 id="_2-将写入导出-excel-等功能单独分开成一个微服务" tabindex="-1"><a class="header-anchor" href="#_2-将写入导出-excel-等功能单独分开成一个微服务"><span>（2）将写入导出 Excel 等功能单独分开成一个微服务</span></a></h3><p><strong>注意：如果单个服务分配的资源足够的话，可以不用将导出功能与原应用服务拆开，这里可以省略</strong>1）抢占资源 2）由于导出功能内存溢出，如果不做分离独立，整个应用服务也会宕机</p><h3 id="_3-注意" tabindex="-1"><a class="header-anchor" href="#_3-注意"><span>（3）注意</span></a></h3><p>1）多线程下，同一页签的写入不可同步，即 Alibaba EasyExcel 组件的文件写入流 SheetWriter 是异步的； 2）多线程下，每个线程所用的文件写入 SheetWriter 是一个复制，依旧会占用大量内存； 3）微服务拆分时，数据读取和文件写入是在一个线程下的，所以新的微服务也要实现一套数据读取逻辑； 4）压缩文件使用压缩文件流，ZipOutputStream，不需要暂存本地；</p><h3 id="_4-方案设计" tabindex="-1"><a class="header-anchor" href="#_4-方案设计"><span>（4）方案设计</span></a></h3><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/d7cac7fb35ac4281893cb491db958517.png" alt="导出方案" tabindex="0" loading="lazy"><figcaption>导出方案</figcaption></figure><h5 id="标注说明" tabindex="-1"><a class="header-anchor" href="#标注说明"><span>标注说明</span></a></h5><p>1） 阈值可以进行设置，考虑到业务场景以及资源使用，这里阈值数据量为 100w 条，超过一百万会导出空表（而非导出一百万数据） 2） 导出进行多线程，启用最多十个多线程（默认最多一百万条数据，一个 sheet 页十万条数据），每个线程会进行两个动作，查询数据以及数据写入操作，（如果数据量较少，依旧是适用的） 3） 说明图，以 86 万数据为例，也就是说会启用九个文件写入线程，一个文件写入线程生成一个 excel 导出文件； <img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/e9895c6acda54729a964c4d369945356.png" alt="多线程同步" loading="lazy">4） 线程池为队列线程，即后来的线程进入排队等待，队列长度（线程池大小）为 10； 5） 每个文件写入线程会生成最多十个 sheet（默认一个 sheet 页十万数据）写入线程（最后一个文件写入线程可能会少于十个）。 <img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/4cf7654c7e6d4537aeeba3c3a4624d5a.png" alt="写入示例" loading="lazy"></p><h3 id="_5-maven-依赖" tabindex="-1"><a class="header-anchor" href="#_5-maven-依赖"><span>（5）maven 依赖</span></a></h3><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- easyexcel --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>easyexcel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-详细设计" tabindex="-1"><a class="header-anchor" href="#_3-详细设计"><span>3. 详细设计</span></a></h2><p>（1）文件写入多线程，按每个文件十万条数据进行导出，每个文件写入线程生成一个 excel 文件（单页签）； ROW_SIZE：一次查询的数据量，此处设置为 10000 条 ROW_PAGE：一个页签多少次查询，此处设置为 10 次；</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Interger</span> <span class="token constant">ROW_SIZE</span> <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> interger <span class="token constant">ROW_PAGE</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**  
* divide into sheets with 10W data per sheet  
* */</span>
<span class="token keyword">int</span> sheetCount <span class="token operator">=</span> <span class="token punctuation">(</span>rowCount<span class="token operator">/</span> <span class="token punctuation">(</span><span class="token constant">ROW_SIZE</span><span class="token operator">*</span><span class="token constant">ROW_PAGE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>sheetCount<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  threadExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span><span class="token function">sheetWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）sheet 写入多线程，最后一个文件写入线程的最后一个 sheet 写入线程可能不足 1W 条数据；</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 单sheet页写入数</span>
<span class="token keyword">int</span> sheetThreadCount <span class="token operator">=</span> rowCount <span class="token operator">-</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token constant">ROW_SIZE</span><span class="token operator">*</span><span class="token constant">ROW_PAGE</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token constant">ROW_PAGE</span> <span class="token operator">:</span> <span class="token punctuation">(</span>rowCount <span class="token operator">-</span> i<span class="token operator">*</span><span class="token punctuation">(</span><span class="token constant">ROW_SIZE</span><span class="token operator">*</span><span class="token constant">ROW_PAGE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">ROW_SIZE</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token class-name">CountDownLatch</span> threadSignal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span>sheetThreadCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>sheetThreadCount<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  threadExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span><span class="token function">excelWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
threadSignal<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),k={href:"https://so.csdn.net/so/search?q=excelWriter&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},r=a(`<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 获取数据</span>
<span class="token comment">// todo</span>
<span class="token comment">// 数据格式处理</span>
<span class="token class-name">Synchronized</span><span class="token punctuation">(</span>excelWriter<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">WriteSheet</span> writeSheet <span class="token operator">=</span> <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">writerSheet</span><span class="token punctuation">(</span>sheetNo<span class="token punctuation">,</span> <span class="token string">&quot;第&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>sheetNo<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;页数据&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  excelWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>lists<span class="token punctuation">,</span> writeSheet<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),d={href:"https://so.csdn.net/so/search?q=hutool&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> paths <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
<span class="token class-name">FileInputStream</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ins <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name">ZipUtil</span><span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> out<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> paths<span class="token punctuation">,</span> <span class="token class-name">InputStream</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ins<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> outputStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 上传文件到FastDFS  返回上传路径</span>
<span class="token class-name">String</span> path <span class="token operator">=</span> fastWrapper<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token string">&quot;zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> path <span class="token operator">+</span> <span class="token string">&quot;?filename=&quot;</span> <span class="token operator">+</span> fileName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-缓存" tabindex="-1"><a class="header-anchor" href="#_4-缓存"><span>4. 缓存</span></a></h2><p>每次请求是生成一个文件并上传至 FastDFS 服务器上，然后将下载路径返回给前端，有时多个用户频繁下载同一个文件（或者用户短时间内点击同一个下载任务）。针对以上情况，考虑采用缓存，将第一次的数据缓存下来。 ① 请求参数较多，需要根据参数判断是否为同一个下载文件请求； ##：数据集 ID ##：过滤器 ##：数据量 ##：数据集字段（先根据 ID 排序，再进行拼接） ② 设置过期时间（30 分钟），不考虑数据一致性的问题（即数据源数据更改后，再更新缓存）。仅仅是做初步工作，即短时间内，只要符合条件①且时间未过期，就采用同一份数据； ③ 当请求下载的为同一份文件时，只是文件名不同时，依旧采用同一份缓存数据； 注：针对于数据一致性的问题，不对单个数据的内容变更进行考虑，原因是大数据量下，数据是否有变更的判断较为复杂，不现实。这里只判断在相同的请求条件下的总条数。</p><h2 id="_5-可行性验证" tabindex="-1"><a class="header-anchor" href="#_5-可行性验证"><span>5. 可行性验证</span></a></h2><p>（1）单个文件写入下，176 个字段，14140 条数据，excel 大小 15M，响应时间为 14.66s（未报错，未触发异常） <img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/a6e3f3c7cdff4326a30f8a4afe5ae8f1.png" alt="图6-1 多字段的导出验证" loading="lazy"></p><p>（2）单个文件写入下，14 个字段，98 万数据，excel 大小为 96M，响应时间为 42.41s（未报错，未触发异常） <img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/884bfccf766b4b27aaaec31bb99de499.png" alt="图6-2 百万数据量的导出验证" loading="lazy"> （3）拆分微服务下，14 个字段，98 万数据，zip 大小为 104M，平均响应时间为 27.34s（未报错，未触发异常） <img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/f9767a04fff7459eb0e881738ca5952b.png" alt="在这里插入图片描述" loading="lazy"></p><h2 id="_6-代码" tabindex="-1"><a class="header-anchor" href="#_6-代码"><span>6. 代码</span></a></h2><p>文件导出核心代码 TableExport.java</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">exportTable</span><span class="token punctuation">(</span><span class="token class-name">ExportTable</span> exportTable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token class-name">StringBuffer</span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteArrayOutputStream</span> outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuffer</span> sign <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//redis key</span>
        sign<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>exportTable<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
   <span class="token comment">// 用来记录需要为 行 列设置样式</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn<span class="token punctuation">.</span>Font</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sign<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;##&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> fields<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>e<span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">isShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string">&quot;true&quot;</span><span class="token operator">:</span><span class="token string">&quot;false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setFontStyle</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> exportTable<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取表头长度</span>
            <span class="token keyword">int</span> headRow <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token operator">::</span><span class="token function">size</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 数据量超过十万 则不带样式</span>
            <span class="token comment">// 只处理表头：表头合并 表头隐藏 表头冻结</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>rowCount<span class="token operator">*</span>fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token constant">ROW_SIZE</span><span class="token operator">*</span><span class="token number">6.4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;cellStyle&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            sign<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;##&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>exportTable<span class="token punctuation">.</span><span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 数据量超过百万或者数据为空，只返回有表头得单元格</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>rowCount<span class="token operator">==</span><span class="token number">0</span> <span class="token operator">||</span> rowCount<span class="token operator">*</span>fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token constant">ROW_SIZE</span><span class="token operator">*</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span>
                        <span class="token comment">// 这里放入动态头</span>
                        <span class="token punctuation">.</span><span class="token function">head</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token string">&quot;数据&quot;</span><span class="token punctuation">)</span>
                        <span class="token comment">// 传入表头样式</span>
                        <span class="token punctuation">.</span><span class="token function">registerWriteHandler</span><span class="token punctuation">(</span><span class="token class-name">EasyExcelUtils</span><span class="token punctuation">.</span><span class="token function">getStyleStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token comment">// 当然这里数据也可以用 List&lt;List&lt;String&gt;&gt; 去传入</span>
                        <span class="token punctuation">.</span><span class="token function">doWrite</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> outputStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 上传文件到FastDFS  返回上传路径</span>
                <span class="token keyword">return</span> fastWrapper<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token string">&quot;xlsx&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;?filename=&quot;</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> <span class="token string">&quot;.xlsx&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            sign<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;##&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>rowCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> fieldSign <span class="token operator">=</span> fields<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span><span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>e<span class="token operator">-&gt;</span>e<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sign<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;##&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fieldSign<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token doc-comment comment">/**
             * 相同的下载文件请求 直接返回
             * the redis combines with datasetId - filter - size of data - fields
             */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>redisClientImpl<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>sign<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> redisClientImpl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>sign<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token doc-comment comment">/**
             * 分sheet页
             * divide into sheets with 10M data per sheet
             */</span>
            <span class="token keyword">int</span> sheetCount <span class="token operator">=</span> <span class="token punctuation">(</span>rowCount<span class="token operator">/</span> <span class="token punctuation">(</span><span class="token constant">ROW_SIZE</span><span class="token operator">*</span><span class="token constant">ROW_PAGE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> paths <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>sheetCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ins <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">[</span>sheetCount<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token class-name">CountDownLatch</span> threadSignal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span>sheetCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>sheetCount<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> finalI <span class="token operator">=</span> i<span class="token punctuation">;</span>
                <span class="token class-name">String</span> finalTable <span class="token operator">=</span> table<span class="token punctuation">;</span>
                <span class="token class-name">Datasource</span> finalDs <span class="token operator">=</span> ds<span class="token punctuation">;</span>
                <span class="token class-name">String</span> finalOrder <span class="token operator">=</span> order<span class="token punctuation">;</span>
                <span class="token keyword">int</span> finalRowCount <span class="token operator">=</span> rowCount<span class="token punctuation">;</span>
                threadExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                    <span class="token comment">// excel文件流</span>
                    <span class="token class-name">ByteArrayOutputStream</span> singleOutputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">ExcelWriter</span> excelWriter <span class="token operator">=</span> <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>singleOutputStream<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 单sheet页写入数</span>
                    <span class="token keyword">int</span> sheetThreadCount <span class="token operator">=</span> finalI <span class="token operator">==</span> <span class="token punctuation">(</span>sheetCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>finalRowCount <span class="token operator">-</span> finalI <span class="token operator">*</span><span class="token punctuation">(</span><span class="token constant">ROW_SIZE</span><span class="token operator">*</span><span class="token constant">ROW_PAGE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">ROW_SIZE</span><span class="token operator">+</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token constant">ROW_PAGE</span><span class="token punctuation">;</span>
                    <span class="token class-name">CountDownLatch</span> sheetThreadSignal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span>sheetThreadCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>sheetThreadCount<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">int</span> page <span class="token operator">=</span> finalI <span class="token operator">*</span><span class="token constant">ROW_PAGE</span> <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token comment">// 最后一页数据</span>
                        <span class="token keyword">int</span> pageSize <span class="token operator">=</span> j<span class="token operator">==</span><span class="token punctuation">(</span>sheetThreadCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> finalI <span class="token operator">==</span><span class="token punctuation">(</span>sheetCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> finalRowCount <span class="token operator">%</span><span class="token constant">ROW_SIZE</span> <span class="token operator">:</span> <span class="token constant">ROW_SIZE</span><span class="token punctuation">;</span>
                        threadExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                                <span class="token function">writeExcel</span><span class="token punctuation">(</span>dataSetTableRequest<span class="token punctuation">,</span> datasetTable<span class="token punctuation">,</span> finalTable<span class="token punctuation">,</span> qp<span class="token punctuation">,</span>
                                        datasetTableFields<span class="token punctuation">,</span> exportTable<span class="token punctuation">,</span> page<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> finalDs<span class="token punctuation">,</span> datasourceProvider<span class="token punctuation">,</span>
                                        fieldArray<span class="token punctuation">,</span> fields<span class="token punctuation">,</span> head<span class="token punctuation">,</span> map<span class="token punctuation">,</span> headRow<span class="token punctuation">,</span> excelWriter<span class="token punctuation">,</span> mergeIndex<span class="token punctuation">,</span> finalOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                sheetThreadSignal<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        sheetThreadSignal<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// 关闭写入流</span>
                    excelWriter<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    paths<span class="token punctuation">[</span>finalI<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>finalI <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> <span class="token string">&quot;.xlsx&quot;</span><span class="token punctuation">;</span>
                    <span class="token comment">// 单文件</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>sheetCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token comment">// xlsx</span>
                        <span class="token comment">// 将sign存入redis并设置过期时间</span>
                    <span class="token punctuation">}</span>
                    threadSignal<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            threadSignal<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>sheetCount <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">ZipUtil</span><span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">,</span> paths<span class="token punctuation">,</span> ins<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> outputStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 上传文件到FastDFS  返回上传路径</span>
                path<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fastWrapper<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token string">&quot;zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;?filename=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;.zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 将sign存入redis并设置过期时间</span>
                redisClientImpl<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>sign<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">SYS_REDIS_EXPIRE_TIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeExcel</span><span class="token punctuation">(</span><span class="token class-name">ExcelWriter</span> excelWriter<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//数据查询</span>
  <span class="token comment">// todo</span>
  <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>excelWriter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">WriteSheet</span> writeSheet <span class="token operator">=</span> <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">writerSheet</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;第&quot;</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&quot;页数据&quot;</span><span class="token punctuation">)</span>
                            <span class="token comment">// 这里放入动态头</span>
                            <span class="token punctuation">.</span><span class="token function">head</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span>
                            <span class="token comment">//传入样式</span>
                            <span class="token punctuation">.</span><span class="token function">registerWriteHandler</span><span class="token punctuation">(</span><span class="token class-name">EasyExcelUtils</span><span class="token punctuation">.</span><span class="token function">getStyleStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">registerWriteHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellColorSheetWriteHandler</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> headRow<span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">registerWriteHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MergeStrategy</span><span class="token punctuation">(</span>lists<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mergeIndex<span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token comment">// 当然这里数据也可以用 List&lt;List&lt;String&gt;&gt; 去传入</span>
                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    excelWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>lists<span class="token punctuation">,</span> writeSheet<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Excel 导出的文件流样式处理类。 CellColorSheetWriteHandler.java</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">CellData</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">Head</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StyleUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>write<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">CellWriteHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>write<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>holder<span class="token punctuation">.</span></span><span class="token class-name">WriteSheetHolder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>write<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>holder<span class="token punctuation">.</span></span><span class="token class-name">WriteTableHolder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>write<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>style<span class="token punctuation">.</span></span><span class="token class-name">WriteCellStyle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XSSFCellStyle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XSSFColor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XSSFFont</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Color</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicInteger</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Author 菜鸟
 * <span class="token keyword">@description</span> 拦截处理单元格创建
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CellColorSheetWriteHandler</span> <span class="token keyword">implements</span> <span class="token class-name">CellWriteHandler</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 多行表头行号
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> headRow<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 字体
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn<span class="token punctuation">.</span>Font</span> columnFont <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn<span class="token punctuation">.</span>Font</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token class-name">XSSFCellStyle</span> cellStyle <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">XSSFCellStyle</span> <span class="token function">getCellStyle</span><span class="token punctuation">(</span><span class="token class-name">Workbook</span> workbook<span class="token punctuation">,</span> <span class="token class-name">WriteCellStyle</span> contentWriteCellStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cellStyle <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">XSSFCellStyle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>cellStyle <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cellStyle <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">XSSFCellStyle</span><span class="token punctuation">)</span> <span class="token class-name">StyleUtil</span><span class="token punctuation">.</span><span class="token function">buildHeadCellStyle</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> contentWriteCellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> cellStyle<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 字体
     * Map<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Integer,</span> <span class="token attr-name">ExportTable.ExportColumn.Font</span><span class="token punctuation">&gt;</span></span> 当前列的字段样式
     * Map<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Integer,</span> <span class="token attr-name">List&lt;Map&lt;...</span><span class="token punctuation">&gt;</span></span>&gt;&gt; 当前行包含那几列需要设置样式
     * String head：表头；
     * String cell：内容；
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn<span class="token punctuation">.</span>Font</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 有参构造
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">CellColorSheetWriteHandler</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn<span class="token punctuation">.</span>Font</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">,</span> <span class="token keyword">int</span> headRow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>map <span class="token operator">=</span> map<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>headRow <span class="token operator">=</span> headRow<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 在单元上的所有操作完成后调用
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCellDispose</span><span class="token punctuation">(</span><span class="token class-name">WriteSheetHolder</span> writeSheetHolder<span class="token punctuation">,</span> <span class="token class-name">WriteTableHolder</span> writeTableHolder<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CellData</span><span class="token punctuation">&gt;</span></span> cellDataList<span class="token punctuation">,</span> <span class="token class-name">Cell</span> cell<span class="token punctuation">,</span> <span class="token class-name">Head</span> head<span class="token punctuation">,</span> <span class="token class-name">Integer</span> relativeRowIndex<span class="token punctuation">,</span> <span class="token class-name">Boolean</span> isHead<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 当前行的第column列</span>
        <span class="token keyword">int</span> column <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 当前第row行</span>
        <span class="token keyword">int</span> row <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AtomicInteger</span> fixNum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 处理行，表头</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>headRow <span class="token operator">&gt;</span> row <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn<span class="token punctuation">.</span>Font</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fonts <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            fonts<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>e<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>ele <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 获取冻结字段</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> ele<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        fixNum<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// 字段隐藏</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ele<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        writeSheetHolder<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setColumnHidden</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fixNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> row <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                writeSheetHolder<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span>fixNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> headRow<span class="token punctuation">,</span> fixNum<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> headRow<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                writeSheetHolder<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> headRow<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> headRow<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">setStyle</span><span class="token punctuation">(</span>fonts<span class="token punctuation">,</span> row<span class="token punctuation">,</span> column<span class="token punctuation">,</span> cell<span class="token punctuation">,</span> writeSheetHolder<span class="token punctuation">,</span> head<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 处理内容</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>headRow <span class="token operator">&lt;=</span> row <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">&quot;cell&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">&quot;cellStyle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn<span class="token punctuation">.</span>Font</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fonts <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;cell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setStyle</span><span class="token punctuation">(</span>fonts<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> column<span class="token punctuation">,</span> cell<span class="token punctuation">,</span> writeSheetHolder<span class="token punctuation">,</span> head<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ExportTable<span class="token punctuation">.</span>ExportColumn<span class="token punctuation">.</span>Font</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fonts<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> column<span class="token punctuation">,</span> <span class="token class-name">Cell</span> cell<span class="token punctuation">,</span> <span class="token class-name">WriteSheetHolder</span> writeSheetHolder<span class="token punctuation">,</span> <span class="token class-name">Head</span> head<span class="token punctuation">)</span><span class="token punctuation">{</span>
        fonts<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>e<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// 根据单元格获取workbook</span>
                <span class="token class-name">Workbook</span> workbook <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//设置列宽</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    writeSheetHolder<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    writeSheetHolder<span class="token punctuation">.</span><span class="token function">getSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 单元格策略</span>
                <span class="token class-name">WriteCellStyle</span> contentWriteCellStyle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WriteCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 设置垂直居中为居中对齐</span>
                contentWriteCellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span><span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 设置左右对齐方式</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    contentWriteCellStyle<span class="token punctuation">.</span><span class="token function">setHorizontalAlignment</span><span class="token punctuation">(</span><span class="token function">getHorizontalAlignment</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    contentWriteCellStyle<span class="token punctuation">.</span><span class="token function">setHorizontalAlignment</span><span class="token punctuation">(</span><span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>columnFont<span class="token punctuation">)</span> <span class="token operator">||</span> column <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token doc-comment comment">/**
                     * Prevent the creation of a large number of objects
                     * Defects of the EasyExcel tool(巨坑，简直脱发神器）
                     */</span>
                    cellStyle <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">XSSFCellStyle</span><span class="token punctuation">)</span> <span class="token class-name">StyleUtil</span><span class="token punctuation">.</span><span class="token function">buildHeadCellStyle</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> contentWriteCellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 设置单元格背景颜色</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XSSFColor</span><span class="token punctuation">(</span><span class="token function">hex2Color</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> headRow<span class="token punctuation">)</span>
                            cellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 创建字体实例</span>
                    <span class="token class-name">Font</span> font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 设置字体是否加粗</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFontWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFontWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token function">getBold</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFontWeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 设置字体和大小</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFontFamily</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFontFamily</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        font<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFontFamily</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">XSSFFont</span> xssfFont <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">XSSFFont</span><span class="token punctuation">)</span>font<span class="token punctuation">;</span>
                    <span class="token comment">//设置字体颜色</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        xssfFont<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XSSFColor</span><span class="token punctuation">(</span><span class="token function">hex2Color</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>xssfFont<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 记录上一个样式</span>
                    columnFont <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// 设置当前行第column列的样式</span>
                cell<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 设置行高</span>
                cell<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Excel 导出的默认样式设置类。 EasyExcelUtils.java</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">HorizontalCellStyleStrategy</span> <span class="token function">getStyleStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 头的策略</span>
        <span class="token class-name">WriteCellStyle</span> headWriteCellStyle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WriteCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 背景设置为灰色</span>
        headWriteCellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">GREY_25_PERCENT</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WriteFont</span> headWriteFont <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WriteFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headWriteFont<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 字体样式</span>
        headWriteFont<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">&quot;Frozen&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 字体颜色</span>
        headWriteFont<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">BLACK1</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headWriteCellStyle<span class="token punctuation">.</span><span class="token function">setWriteFont</span><span class="token punctuation">(</span>headWriteFont<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 自动换行</span>
        headWriteCellStyle<span class="token punctuation">.</span><span class="token function">setWrapped</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 水平对齐方式(修改默认对齐方式——4.14 版本1.3.2)</span>
        headWriteCellStyle<span class="token punctuation">.</span><span class="token function">setHorizontalAlignment</span><span class="token punctuation">(</span><span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 垂直对齐方式</span>
        headWriteCellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span><span class="token class-name">VerticalAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 内容的策略</span>
        <span class="token class-name">WriteCellStyle</span> contentWriteCellStyle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WriteCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 这里需要指定 FillPatternType 为FillPatternType.SOLID_FOREGROUND 不然无法显示背景颜色.头默认了 FillPatternType所以可以不指定</span>
        <span class="token comment">//        contentWriteCellStyle.setFillPatternType(FillPatternType.SQUARES);</span>
        <span class="token comment">// 背景白色</span>
        contentWriteCellStyle<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span><span class="token class-name">IndexedColors</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 水平对齐方式(修改默认对齐方式——4.14 版本1.3.2)</span>
        contentWriteCellStyle<span class="token punctuation">.</span><span class="token function">setHorizontalAlignment</span><span class="token punctuation">(</span><span class="token class-name">HorizontalAlignment</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WriteFont</span> contentWriteFont <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WriteFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 字体大小</span>
        contentWriteFont<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 字体样式</span>
        contentWriteFont<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">&quot;Calibri&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentWriteCellStyle<span class="token punctuation">.</span><span class="token function">setWriteFont</span><span class="token punctuation">(</span>contentWriteFont<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HorizontalCellStyleStrategy</span><span class="token punctuation">(</span>headWriteCellStyle<span class="token punctuation">,</span> contentWriteCellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Excel 导出合并单元格处理类。 MergeStrategy.class</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span></span><span class="token class-name">Head</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>write<span class="token punctuation">.</span>merge<span class="token punctuation">.</span></span><span class="token class-name">AbstractMergeStrategy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>collections<span class="token punctuation">.</span>map<span class="token punctuation">.</span></span><span class="token class-name">HashedMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">Cell</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">Sheet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">CellRangeAddress</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Author 菜鸡
 * <span class="token keyword">@description</span> 合并单元格策略
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MergeStrategy</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMergeStrategy</span>
<span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 合并的列编号，从0开始
     * 指定的index或自己按字段顺序数
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> mergeCellIndex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 数据集大小，用于区别结束行位置
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> maxRow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">// 禁止无参声明</span>
    <span class="token keyword">private</span> <span class="token class-name">MergeStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">MergeStrategy</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> maxRow<span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> mergeCellIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mergeCellIndex <span class="token operator">=</span> mergeCellIndex<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maxRow <span class="token operator">=</span> maxRow<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">MergeRange</span><span class="token punctuation">&gt;</span></span> lastRow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashedMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">Sheet</span> sheet<span class="token punctuation">,</span> <span class="token class-name">Cell</span> cell<span class="token punctuation">,</span> <span class="token class-name">Head</span> head<span class="token punctuation">,</span> <span class="token class-name">Integer</span> relativeRowIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> currentCellIndex <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 判断该行是否需要合并</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mergeCellIndex<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>currentCellIndex<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> currentCellValue <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getStringCellValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> currentRowIndex <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>lastRow<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>currentCellIndex<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 记录首行起始位置</span>
                lastRow<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>currentCellIndex<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MergeRange</span><span class="token punctuation">(</span>currentCellValue<span class="token punctuation">,</span> currentRowIndex<span class="token punctuation">,</span> currentRowIndex<span class="token punctuation">,</span> currentCellIndex<span class="token punctuation">,</span> currentCellIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//有上行这列的值了，拿来对比.</span>
            <span class="token class-name">MergeRange</span> mergeRange <span class="token operator">=</span> lastRow<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>currentCellIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>mergeRange<span class="token punctuation">.</span>lastValue <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mergeRange<span class="token punctuation">.</span>lastValue<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>currentCellValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 结束的位置触发下合并.</span>
                <span class="token comment">// 同行同列不能合并，会抛异常</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mergeRange<span class="token punctuation">.</span>startRow <span class="token operator">!=</span> mergeRange<span class="token punctuation">.</span>endRow <span class="token operator">||</span> mergeRange<span class="token punctuation">.</span>startCell <span class="token operator">!=</span> mergeRange<span class="token punctuation">.</span>endCell<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegionUnsafe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>mergeRange<span class="token punctuation">.</span>startRow<span class="token punctuation">,</span> mergeRange<span class="token punctuation">.</span>endRow<span class="token punctuation">,</span> mergeRange<span class="token punctuation">.</span>startCell<span class="token punctuation">,</span> mergeRange<span class="token punctuation">.</span>endCell<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 更新当前列起始位置</span>
                lastRow<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>currentCellIndex<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MergeRange</span><span class="token punctuation">(</span>currentCellValue<span class="token punctuation">,</span> currentRowIndex<span class="token punctuation">,</span> currentRowIndex<span class="token punctuation">,</span> currentCellIndex<span class="token punctuation">,</span> currentCellIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 合并行 + 1</span>
            mergeRange<span class="token punctuation">.</span>endRow <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// 结束的位置触发下最后一次没完成的合并</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>relativeRowIndex<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>maxRow <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MergeRange</span> lastMergeRange <span class="token operator">=</span> lastRow<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>currentCellIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 同行同列不能合并，会抛异常</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>lastMergeRange<span class="token punctuation">.</span>startRow <span class="token operator">!=</span> lastMergeRange<span class="token punctuation">.</span>endRow <span class="token operator">||</span> lastMergeRange<span class="token punctuation">.</span>startCell <span class="token operator">!=</span> lastMergeRange<span class="token punctuation">.</span>endCell<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sheet<span class="token punctuation">.</span><span class="token function">addMergedRegionUnsafe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CellRangeAddress</span><span class="token punctuation">(</span>lastMergeRange<span class="token punctuation">.</span>startRow<span class="token punctuation">,</span> lastMergeRange<span class="token punctuation">.</span>endRow<span class="token punctuation">,</span> lastMergeRange<span class="token punctuation">.</span>startCell<span class="token punctuation">,</span> lastMergeRange<span class="token punctuation">.</span>endCell<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">MergeRange</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> startRow<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> endRow<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> startCell<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> endCell<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> lastValue<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MergeRange</span><span class="token punctuation">(</span><span class="token class-name">String</span> lastValue<span class="token punctuation">,</span> <span class="token keyword">int</span> startRow<span class="token punctuation">,</span> <span class="token keyword">int</span> endRow<span class="token punctuation">,</span> <span class="token keyword">int</span> startCell<span class="token punctuation">,</span> <span class="token keyword">int</span> endCell<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>startRow <span class="token operator">=</span> startRow<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>endRow <span class="token operator">=</span> endRow<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>startCell <span class="token operator">=</span> startCell<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>endCell <span class="token operator">=</span> endCell<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lastValue <span class="token operator">=</span> lastValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function v(b,g){const t=o("ExternalLinkIcon");return c(),l("div",null,[i,s("p",null,[n("（3）异步写入 sheet 文件，不同的文件写入线程写入不同的文件，所以只需要保证同一个文件写入线程下不同 sheet 写入线程的"),s("a",k,[n("excelWriter"),p(t)]),n(" 异步即可；")]),r,s("p",null,[n("（4）压缩文件，将多个 excel 压缩成一个 zip，最后上传至 fast dfs，返回前端下载地址，使用"),s("a",d,[n("hutool"),p(t)]),n("封装的 ZipUtil 方法；\\")]),m])}const w=e(u,[["render",v],["__file","EasyExcel带格式多线程导出百万数据.html.vue"]]),h=JSON.parse('{"path":"/dev/EasyExcel%E5%B8%A6%E6%A0%BC%E5%BC%8F%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AF%BC%E5%87%BA%E7%99%BE%E4%B8%87%E6%95%B0%E6%8D%AE.html","title":"EasyExcel带格式多线程导出百万数据","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"EasyExcel带格式多线程导出百万数据","excerpt":null,"description":"EasyExcel 带格式多线程导出百万数据 1. 背景说明 针对明细报表，用户会选择针对当前明细数据进行导出，便于本地或者线下进行处理或者计算等需求。不过一般在这种大数据量的导出任务下，会引发以下问题： 1） 响应时间较慢； 2） 内存资源占用过大，基本上一个大数据量的导出会消耗可视化服务的所有资源，引起内存回收，其它接口无响应； 考虑到单个 exc...","date":"2023-03-16T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/EasyExcel%E5%B8%A6%E6%A0%BC%E5%BC%8F%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AF%BC%E5%87%BA%E7%99%BE%E4%B8%87%E6%95%B0%E6%8D%AE.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"EasyExcel带格式多线程导出百万数据"}],["meta",{"property":"og:description","content":"EasyExcel 带格式多线程导出百万数据 1. 背景说明 针对明细报表，用户会选择针对当前明细数据进行导出，便于本地或者线下进行处理或者计算等需求。不过一般在这种大数据量的导出任务下，会引发以下问题： 1） 响应时间较慢； 2） 内存资源占用过大，基本上一个大数据量的导出会消耗可视化服务的所有资源，引起内存回收，其它接口无响应； 考虑到单个 exc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://bitbucket.org/xlc520/blogasset/raw/main/images3/d7cac7fb35ac4281893cb491db958517.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"EasyExcel带格式多线程导出百万数据\\",\\"image\\":[\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/d7cac7fb35ac4281893cb491db958517.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/e9895c6acda54729a964c4d369945356.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/4cf7654c7e6d4537aeeba3c3a4624d5a.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/a6e3f3c7cdff4326a30f8a4afe5ae8f1.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/884bfccf766b4b27aaaec31bb99de499.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/f9767a04fff7459eb0e881738ca5952b.png\\"],\\"datePublished\\":\\"2023-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"1. 背景说明","slug":"_1-背景说明","link":"#_1-背景说明","children":[]},{"level":2,"title":"2. 方案概述","slug":"_2-方案概述","link":"#_2-方案概述","children":[{"level":3,"title":"（1）大数据量导出问题主要是以下三个地方","slug":"_1-大数据量导出问题主要是以下三个地方","link":"#_1-大数据量导出问题主要是以下三个地方","children":[]},{"level":3,"title":"（2）将写入导出 Excel 等功能单独分开成一个微服务","slug":"_2-将写入导出-excel-等功能单独分开成一个微服务","link":"#_2-将写入导出-excel-等功能单独分开成一个微服务","children":[]},{"level":3,"title":"（3）注意","slug":"_3-注意","link":"#_3-注意","children":[]},{"level":3,"title":"（4）方案设计","slug":"_4-方案设计","link":"#_4-方案设计","children":[]},{"level":3,"title":"（5）maven 依赖","slug":"_5-maven-依赖","link":"#_5-maven-依赖","children":[]}]},{"level":2,"title":"3. 详细设计","slug":"_3-详细设计","link":"#_3-详细设计","children":[]},{"level":2,"title":"4. 缓存","slug":"_4-缓存","link":"#_4-缓存","children":[]},{"level":2,"title":"5. 可行性验证","slug":"_5-可行性验证","link":"#_5-可行性验证","children":[]},{"level":2,"title":"6. 代码","slug":"_6-代码","link":"#_6-代码","children":[]}],"git":{"createdTime":1678870593000,"updatedTime":1714224756000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":5},{"name":"xlc","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":12.65,"words":3796},"filePathRelative":"dev/EasyExcel带格式多线程导出百万数据.md","localizedDate":"2023年3月16日","autoDesc":true}');export{w as comp,h as data};
