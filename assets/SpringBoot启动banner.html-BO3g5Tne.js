import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,a as i,d as p}from"./app-DWXdHMII.js";const l={};function t(r,s){return a(),e("div",null,s[0]||(s[0]=[i('<h1 id="spring-boot-启动默认的-banner" tabindex="-1"><a class="header-anchor" href="#spring-boot-启动默认的-banner"><span>Spring Boot 启动默认的 banner</span></a></h1><p>自定义 banner 只需要在 resource 下新建一个<code>banner.txt</code>文件，将我们需要的 banner 字样放进去，启动的时候就会去读取使用这个文本文件中的 banner。</p><p><a href="./banner.txt">banner.txt</a></p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" data-title="plain" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>                   _ooOoo_</span></span>\n<span class="line"><span>                  o8888888o</span></span>\n<span class="line"><span>                  88&quot; . &quot;88</span></span>\n<span class="line"><span>                  (| -_- |)</span></span>\n<span class="line"><span>                  O\\  =  /O</span></span>\n<span class="line"><span>               ____/`---&#39;\\____</span></span>\n<span class="line"><span>             .&#39;  \\\\|     |//  `.</span></span>\n<span class="line"><span>            /  \\\\|||  :  |||//  \\</span></span>\n<span class="line"><span>           /  _||||| -:- |||||-  \\</span></span>\n<span class="line"><span>           |   | \\\\\\  -  /// |   |</span></span>\n<span class="line"><span>           | \\_|  &#39;&#39;\\---/&#39;&#39;  |   |</span></span>\n<span class="line"><span>           \\  .-\\__  `-`  ___/-. /</span></span>\n<span class="line"><span>         ___`. .&#39;  /--.--\\  `. . __</span></span>\n<span class="line"><span>      .&quot;&quot; &#39;&lt;  `.___\\_&lt;|&gt;_/___.&#39;  &gt;&#39;&quot;&quot;.</span></span>\n<span class="line"><span>     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |</span></span>\n<span class="line"><span>     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /</span></span>\n<span class="line"><span>======`-.____`-.___\\_____/___.-`____.-&#39;======</span></span>\n<span class="line"><span>                   `=---=&#39;</span></span>\n<span class="line"><span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>\n<span class="line"><span>          佛祖保佑       永无BUG</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="控制-banner-样式" tabindex="-1"><a class="header-anchor" href="#控制-banner-样式"><span>控制 banner 样式</span></a></h2><p>Spring 提供了三个枚举类来设定字符的颜色，分别是：</p><p>AnsiColor： 用来设定字符的前景色</p><p>AnsiBackground： 用来设定字符的背景色</p><p>AnsiStyle： 用来控制加粗、斜体、下划线等等。</p><p>使用${AnsiFoo.Bar}来指定样式，当指定样式的时候会有提示的：</p><p><a href="https://bitbucket.org/xlc520/blogasset/raw/main/images3/784924-20170831000838452-507152231.png" target="_blank" rel="noopener noreferrer">image</a></p><p>指定一种试一下，比如下面这种：</p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" data-title="plain" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>${AnsiColor.BRIGHT_YELLOW}</span></span>\n<span class="line"><span>                   _ooOoo_</span></span>\n<span class="line"><span>                  o8888888o</span></span>\n<span class="line"><span>                  88&quot; . &quot;88</span></span>\n<span class="line"><span>                  (| -_- |)</span></span>\n<span class="line"><span>                  O\\  =  /O</span></span>\n<span class="line"><span>               ____/`---&#39;\\____</span></span>\n<span class="line"><span>             .&#39;  \\\\|     |//  `.</span></span>\n<span class="line"><span>            /  \\\\|||  :  |||//  \\</span></span>\n<span class="line"><span>           /  _||||| -:- |||||-  \\</span></span>\n<span class="line"><span>           |   | \\\\\\  -  /// |   |</span></span>\n<span class="line"><span>           | \\_|  &#39;&#39;\\---/&#39;&#39;  |   |</span></span>\n<span class="line"><span>           \\  .-\\__  `-`  ___/-. /</span></span>\n<span class="line"><span>         ___`. .&#39;  /--.--\\  `. . __</span></span>\n<span class="line"><span>      .&quot;&quot; &#39;&lt;  `.___\\_&lt;|&gt;_/___.&#39;  &gt;&#39;&quot;&quot;.</span></span>\n<span class="line"><span>     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |</span></span>\n<span class="line"><span>     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /</span></span>\n<span class="line"><span>======`-.____`-.___\\_____/___.-`____.-&#39;======</span></span>\n<span class="line"><span>                   `=---=&#39;</span></span>\n<span class="line"><span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>\n<span class="line"><span>         佛祖保佑       永无BUG</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="显示应用信息" tabindex="-1"><a class="header-anchor" href="#显示应用信息"><span>显示应用信息</span></a></h2><p>除了上面的指定样式之外，还可以显示一些与应用相关的版本信息：</p><p>${application.version} 与 MANIFEST.MF 文件中相同的版本号，比如 1.5.4.RELEASE</p><p>${application.formatted-version} 格式化过的版本号就是加个 v 然后用括号包起来，比如(v1.5.4.RELEASE)</p>',17),p("p",{"application.title":""},"$",-1),i(`<p>\${spring-boot.version} Spring Boot 的版本</p><p>\${spring-boot.formatted-version} 格式化过的版本</p><h2 id="控制-banner-是否开启-输出位置" tabindex="-1"><a class="header-anchor" href="#控制-banner-是否开启-输出位置"><span>控制 banner 是否开启，输出位置</span></a></h2><p>设置 banner mode 为 OFF 关闭 banner：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> org.cc11001100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.Banner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.springframework.boot.autoconfigure.SpringBootApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> SpringBootStudy002Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> springApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">SpringBootStudy002Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        springApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setBannerMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Banner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">OFF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        springApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(args);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="几个常用的字符画生成网站" tabindex="-1"><a class="header-anchor" href="#几个常用的字符画生成网站"><span>几个常用的字符画生成网站</span></a></h2><p>介绍几个常用的字符画生成网站：</p><p><a href="https://www.bootschool.net/ascii" target="_blank" rel="noopener noreferrer">https://www.bootschool.net/ascii</a></p><p><a href="http://patorjk.com/software/taag/" target="_blank" rel="noopener noreferrer">http://patorjk.com/software/taag/</a></p><p><a href="https://spring-boot-banner-gen.cfapps.io/" target="_blank" rel="noopener noreferrer">https://spring-boot-banner-gen.cfapps.io/</a> 可以将上传图片转为文本形式的字符画，只是感觉风格比较鬼畜</p><p><a href="http://www.degraeve.com/img2txt.php" target="_blank" rel="noopener noreferrer">http://www.degraeve.com/img2txt.php</a> 可以根据在线的图片网址生成字符画，比如可以直接将公司 logo 的地址粘贴进去生成字符画</p><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充"><span>补充</span></a></h2><p>通过将 banner.txt 文件添加到类路径或将 spring.banner.location 属性设置为此类文件的位置，可以更改启动时打印的横幅。如果文件的编码不是 UTF-8，则可以设置 spring.banner.charset 。除了文本文件，您还可以将 banner.gif ， banner.jpg 或 banner.png 图像文件添加到类路径或设置 spring.banner.image.location 属性。图像将转换为 ASCII 艺术表示，并打印在任何文本横幅上方。在 banner.txt 文件中，您可以使用以下任何占位符：</p><p>表 23.1。横幅变量</p><p>变量 描述</p><p>\${application.version} 应用程序的版本号，如 MANIFEST.MF 中声明的那样。例</p><p>如， Implementation-Version: 1.0 打印为 1.0 。</p><p>\${application.formatted-version} 应用程序的版本号，在 MANIFEST.MF 中声明并格式化以显示（用括号括起来并以 v 为前缀）。例如 ( v1.0) 。</p><p>\${spring-boot.version} 您正在使用的 Spring Boot 版本。例如 2.1.1.RELEASE 。</p><p>如果要以编程方式生成横幅，可以使用 SpringApplication.setBanner(…… ) 方法。使用 org.springframework.boot.Banner</p><p>接口并实现您自己的 printBanner() 方法。</p><p>您还可以使用 spring.main.banner-mode 属性来确定是否必须在 System.out （ console ）上打印横幅，发送到配置的记录器（ log ），或者根本不产生横幅（ off ）。</p><p>打印的横幅以下列名称注册为单身 bean：springBootBanner 。</p><p>YAML 将 off 映射到 false ，因此如果要在应用程序中禁用横幅，请务必添加引号，如以下示例所示：</p><p>spring:</p><p>main:</p><p>banner-mode: &quot;off&quot;</p><p>23.3 自定义 SpringApplication</p><p>如果 SpringApplication 默认值不符合您的口味，您可以改为创建本地实例并对其进行自定义。例如，要关闭横幅，您可以写：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[] args) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SpringApplication</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> app </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">MySpringConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setBannerMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Banner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">OFF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(args);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>传递给 SpringApplication 的构造函数参数是 Spring beans 的配置源。在大多数情况下，这些是对 @Configuration 类的引用，</p><p>但它们也可以是对 XML 配置或应扫描的包的引用。</p><p>也可以使用 application.properties 文件配置 SpringApplication 。有关详细信息，请参见第 24 章，外部化配置。</p><p>有关配置选项的完整列表，请参阅 SpringApplication Javadoc。</p><p>23.4 Fluent Builder API</p><p>如果您需要构建 ApplicationContext 层次结构（具有父/子关系的多个上下文）或者您更喜欢使用“流畅”构建器 API，则可以使用 SpringApplicationBuilder 。</p><p>SpringApplicationBuilder 允许您将多个方法调用链接在一起，并包含允许您创建层次结构的 parent 和 child 方法，如以下示例所示：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SpringApplicationBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Parent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">child</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建 ApplicationContext 层次结构时存在一些限制。例如，Web 组件必须包含在子上下文中，并且父/子上下文使用相同</p><p>的 Environment 。有关详细信息，请参阅 SpringApplicationBuilder Javadoc。</p>`,40)]))}const k=n(l,[["render",t],["__file","SpringBoot启动banner.html.vue"]]),o=JSON.parse('{"path":"/dev/SpringBoot%E5%90%AF%E5%8A%A8banner.html","title":"Spring Boot启动的时候默认的banner","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Spring Boot启动的时候默认的banner","excerpt":null,"description":"Spring Boot启动的时候默认的banner是spring的字样","date":"2022-03-02T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"type","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/SpringBoot%E5%90%AF%E5%8A%A8banner.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"Spring Boot启动的时候默认的banner"}],["meta",{"property":"og:description","content":"Spring Boot启动的时候默认的banner是spring的字样"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-03-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Boot启动的时候默认的banner\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"控制 banner 样式","slug":"控制-banner-样式","link":"#控制-banner-样式","children":[]},{"level":2,"title":"显示应用信息","slug":"显示应用信息","link":"#显示应用信息","children":[]},{"level":2,"title":"控制 banner 是否开启，输出位置","slug":"控制-banner-是否开启-输出位置","link":"#控制-banner-是否开启-输出位置","children":[]},{"level":2,"title":"几个常用的字符画生成网站","slug":"几个常用的字符画生成网站","link":"#几个常用的字符画生成网站","children":[]},{"level":2,"title":"补充","slug":"补充","link":"#补充","children":[]}],"git":{"createdTime":1647698494000,"updatedTime":1714224756000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":5},{"name":"xlc","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":4.14,"words":1243},"filePathRelative":"dev/SpringBoot启动banner.md","localizedDate":"2022年3月2日","excerpt":"\\n<p>自定义 banner 只需要在 resource 下新建一个<code>banner.txt</code>文件，将我们需要的 banner 字样放进去，启动的时候就会去读取使用这个文本文件中的\\nbanner。</p>"}');export{k as comp,o as data};
