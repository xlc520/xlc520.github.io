const n=JSON.parse('{"key":"v-7277d541","path":"/dev/SpringBoot%E5%86%85%E7%BD%AE%E5%B7%A5%E5%85%B7%E7%B1%BB.html","title":"SpringBoot 内置工具类","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"SpringBoot 内置工具类","description":"SpringBoot 内置工具类","date":"2022-05-01T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/SpringBoot%E5%86%85%E7%BD%AE%E5%B7%A5%E5%85%B7%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"SpringBoot 内置工具类"}],["meta",{"property":"og:description","content":"SpringBoot 内置工具类"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T09:41:05.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T09:41:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot 内置工具类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T09:41:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"断言","slug":"断言","link":"#断言","children":[]},{"level":2,"title":"对象、数组、集合","slug":"对象、数组、集合","link":"#对象、数组、集合","children":[{"level":3,"title":"ObjectUtils","slug":"objectutils","link":"#objectutils","children":[]},{"level":3,"title":"StringUtils","slug":"stringutils","link":"#stringutils","children":[]},{"level":3,"title":"CollectionUtils","slug":"collectionutils","link":"#collectionutils","children":[]}]},{"level":2,"title":"文件、资源、IO 流","slug":"文件、资源、io-流","link":"#文件、资源、io-流","children":[{"level":3,"title":"FileCopyUtils","slug":"filecopyutils","link":"#filecopyutils","children":[]},{"level":3,"title":"ResourceUtils","slug":"resourceutils","link":"#resourceutils","children":[]},{"level":3,"title":"StreamUtils","slug":"streamutils","link":"#streamutils","children":[]}]},{"level":2,"title":"反射、AOP","slug":"反射、aop","link":"#反射、aop","children":[{"level":3,"title":"ReflectionUtils","slug":"reflectionutils","link":"#reflectionutils","children":[]},{"level":3,"title":"AopUtils","slug":"aoputils","link":"#aoputils","children":[]},{"level":3,"title":"AopContext","slug":"aopcontext","link":"#aopcontext","children":[]}]}],"git":{"createdTime":1668948234000,"updatedTime":1678873265000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":8.63,"words":2589},"filePathRelative":"dev/SpringBoot内置工具类.md","localizedDate":"2022年5月1日","excerpt":"<h1> SpringBoot 内置工具类</h1>\\n<h2> 断言</h2>\\n<ol>\\n<li>\\n<p>断言是一个逻辑判断，用于检查不应该发生的情况</p>\\n</li>\\n<li>\\n<p>Assert 关键字在 JDK1.4 中引入，可通过 JVM 参数<code>-enableassertions</code>开启</p>\\n</li>\\n<li>\\n<p>SpringBoot 中提供了 Assert 断言工具类，通常用于数据合法性检查</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 要求参数 object 必须为非空（Not Null），否则抛出异常，不予放行</span>\\n<span class=\\"token comment\\">// 参数 message 参数用于定制异常信息。</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">notNull</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> object<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> message<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 要求参数必须空（Null），否则抛出异常，不予『放行』。</span>\\n<span class=\\"token comment\\">// 和 notNull() 方法断言规则相反</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">isNull</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> object<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> message<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 要求参数必须为真（True），否则抛出异常，不予『放行』。</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">isTrue</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">boolean</span> expression<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> message<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 要求参数（List/Set）必须非空（Not Empty），否则抛出异常，不予放行</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">notEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Collection</span> collection<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> message<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 要求参数（String）必须有长度（即，Not Empty），否则抛出异常，不予放行</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">hasLength</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> text<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> message<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 要求参数（String）必须有内容（即，Not Blank），否则抛出异常，不予放行</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">hasText</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> text<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> message<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 要求参数是指定类型的实例，否则抛出异常，不予放行</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">isInstanceOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Class</span> type<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span> obj<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> message<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 要求参数 `subType` 必须是参数 superType 的子类或实现类，否则抛出异常，不予放行</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">isAssignable</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Class</span> superType<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Class</span> subType<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> message<span class=\\"token punctuation\\">)</span>\\n复制代码\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>"}');export{n as data};
