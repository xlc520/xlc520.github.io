import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as c,c as i,b as e,d as a,e as r,a as p}from"./app-e33eb8d4.js";const l={},o=p(`<h1 id="linux发送udp-tcp包最简单方法-netcat" tabindex="-1"><a class="header-anchor" href="#linux发送udp-tcp包最简单方法-netcat" aria-hidden="true">#</a> Linux发送udp/tcp包最简单方法-netcat</h1><p>由于测试需要，需要从一台linux向另一台建立连接，并发送tcp/udp包。觉得用python写个client/server脚本有点麻烦，于是想找一个命令直接发送，一搜就搜到了netcat</p><h2 id="网络拓扑" tabindex="-1"><a class="header-anchor" href="#网络拓扑" aria-hidden="true">#</a> 网络拓扑</h2><figure><img src="https://static.xlc520.tk/blogImage/a2ae9f6f67a64c6587f07caffddca26b.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="服务器" tabindex="-1"><a class="header-anchor" href="#服务器" aria-hidden="true">#</a> 服务器</h2><p>先在机器B上进行netcat服务器端的配置，配置使其监听机器B的6901端口，输入以下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">nc</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">-n</span> <span class="token parameter variable">-l</span> <span class="token number">192.168</span>.0.4 <span class="token number">6901</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里的参数解释如下：</p><ul><li>-v 显示详细输出</li><li>-n 只使用数字的地址，不用DNS域名解析</li><li>-l 使用监听模式</li></ul><p>显示出第二行 Listening on... 的时候就说明监听成功啦</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Listening on <span class="token punctuation">[</span><span class="token number">192.168</span>.0.4<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">6901</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h2><p>在服务器端开启成功后，我们在机器A上进行客户端的链接，使其链接到机器B的6901端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">nc</span> <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.0.4 <span class="token number">6901</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按下回车后应该可以看到如下输出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Connection to <span class="token number">192.168</span>.0.4 <span class="token number">6901</span> port <span class="token punctuation">[</span>tcp/*<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>同时在机器B的终端上会显示：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Connection from <span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.3</span> <span class="token number">33446</span> received<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="后记" tabindex="-1"><a class="header-anchor" href="#后记" aria-hidden="true">#</a> 后记</h2><p>到这里A和B两台机器其实已经建立了tcp链接，也发过tcp包了。如果想要建立udp链接，则需要使用 -u 参数即可。建立链接之后，可以在任一机器终端输入文字并按回车，文字也会马上出现在另一台机器的终端上，比如你可以在A上输入：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>hello<span class="token punctuation">,</span> I am A. Who are you ?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,21),d={href:"https://github.com/openbsd/src/blob/master/usr.bin/nc/netcat.c",target:"_blank",rel:"noopener noreferrer"};function u(h,m){const n=t("ExternalLinkIcon");return c(),i("div",null,[o,e("p",null,[a("B的终端就会收到并展示这句话，有点互联网早期聊天的感觉。只要通过netcat这个小小的、简单的命令，就可以做到相互通话，操作系统提供的socket网络编程接口功不可没。打算有空去看看"),e("a",d,[a("netcat的源码"),r(n)]),a("，从简单的命令接触socket编程")])])}const g=s(l,[["render",u],["__file","Linux发送tcp包最简单方法-netcat.html.vue"]]);export{g as default};
