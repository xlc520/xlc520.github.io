import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as i,c as t,b as n,d as e,e as d,a}from"./app-6ab5d115.js";const c={},l=a(`<h1 id="wsl-问题" tabindex="-1"><a class="header-anchor" href="#wsl-问题" aria-hidden="true">#</a> WSL 问题</h1><h2 id="一、error-response-from-daemon-open-pipe-docker-engine-windows" tabindex="-1"><a class="header-anchor" href="#一、error-response-from-daemon-open-pipe-docker-engine-windows" aria-hidden="true">#</a> 一、Error response from daemon:<code> open \\\\.\\pipe\\docker_engine_windows</code></h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker config ls 

Error response from daemon: open \\\\.\\pipe\\docker_engine_windows: The system cannot find the file specified.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第一种解决方法" tabindex="-1"><a class="header-anchor" href="#第一种解决方法" aria-hidden="true">#</a> 第一种解决方法：</h3><p>Try running the below commands in the Powershell and start the docker</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Net stop com.docker.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>And then</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Net start com.docker.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="第二种" tabindex="-1"><a class="header-anchor" href="#第二种" aria-hidden="true">#</a> 第二种：</h3>`,9),p={href:"https://twitter.com/jflh",target:"_blank",rel:"noopener noreferrer"},u=a(`<ul><li><p>Fire up a console as Administrator</p></li><li><p>Run <code>cd &#39;C:\\Program Files\\Docker\\Docker\\resources\\&#39;</code></p><p>Run <code>.\\dockerd.exe -G docker-users --config-file c:\\programdata\\docker\\config\\daemon.json --register-service</code></p></li><li><p>Run <code>start-service docker</code></p></li></ul><p>Now this did not work for me - trying to register the docker service raised an error that the service already existed. However I was able to work out a slight alternative to this which did seem to work for me:</p><ul><li>Fire up a console as Administrator</li><li>Run <code>stop-service docker</code></li><li>Run <code>cd &#39;C:\\Program Files\\Docker\\Docker\\resources\\&#39;</code></li><li>Run \`\`.\\dockerd.exe --unregister-service\`</li><li>Reboot the computer</li><li>Run \`\`.\\dockerd.exe -G docker-users --config-file c:\\programdata\\docker\\config\\daemon.json --register-service\`</li><li>Reboot the computer</li><li>Restart Docker Desktop</li><li>Put Docker Desktop back into Windows Containers mode</li></ul><p>Having done this, I was able to start my containers again, and I could see that the &quot;missing&quot; named pipe had now appeared.</p><p>Docker do suggest you might need to change the Docker Engine config in</p><p><code>c:\\programdata\\docker\\config\\daemon.json</code></p><p>to</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;experimental&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hosts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;npipe:////./pipe/docker_engine_windows&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>But I didn&#39;t find this necessary for my machines - which perhaps makes sense because the software was clearly looking for that pipe originally, so it shouldn&#39;t need to be told to?</p><h3 id="第三种" tabindex="-1"><a class="header-anchor" href="#第三种" aria-hidden="true">#</a> 第三种：</h3><p>Try add Optional Feature - Container and Hyper-V to windows.<br> In Windows 11:<br> Apps → Optional features → More Windows features → Check Containers and Hyper-V and click OK</p><p>or try run:</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Enable-WindowsOptionalFeature</span> <span class="token operator">-</span>Online <span class="token operator">-</span>FeatureName containers –All
<span class="token function">Enable-WindowsOptionalFeature</span> <span class="token operator">-</span>Online <span class="token operator">-</span>FeatureName Microsoft-Hyper-V –All
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function h(m,g){const s=r("ExternalLinkIcon");return i(),t("div",null,[l,n("p",null,[e("Alongside the googling I tried asking about this on Sitecore Slack's Docker channel. And "),n("a",p,[e("Jeff L'Heureux"),d(s)]),e(" from Sitecore suggested that they'd had dealings with Docker Support over a related issue, and had been given a potential fix. And this one didn't involve any uninstalling. The steps he relayed are:")]),u])}const f=o(c,[["render",h],["__file","WSL1版本问题.html.vue"]]);export{f as default};
