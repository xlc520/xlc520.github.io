const e=JSON.parse('{"key":"v-948fe668","path":"/study/vue3_quick_study/chapter2/2_interface.html","title":"接口","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"接口","description":"2. 接口 TypeScript 的核心原则之一是对值所具有的结构进行类型检查。我们使用接口（Interfaces）来定义对象的类型。接口是对象的状态(属性)和行为(方法)的抽象(描述) 接口初探 需求: 创建人的对象, 需要对人的属性进行一定的约束 id是number类型, 必须有, 只读的 name是string类型, 必须有 age是number类型, 必须有 sex是string类型, 可以没有","date":"2022-07-23T00:00:00.000Z","category":"Vue","tag":"Vue","article":true,"dateline":true,"icon":"vue","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/study/vue3_quick_study/chapter2/2_interface.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"接口"}],["meta",{"property":"og:description","content":"2. 接口 TypeScript 的核心原则之一是对值所具有的结构进行类型检查。我们使用接口（Interfaces）来定义对象的类型。接口是对象的状态(属性)和行为(方法)的抽象(描述) 接口初探 需求: 创建人的对象, 需要对人的属性进行一定的约束 id是number类型, 必须有, 只读的 name是string类型, 必须有 age是number类型, 必须有 sex是string类型, 可以没有"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T09:41:05.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T09:41:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接口\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T09:41:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"接口初探","slug":"接口初探","link":"#接口初探","children":[]},{"level":2,"title":"可选属性","slug":"可选属性","link":"#可选属性","children":[]},{"level":2,"title":"只读属性","slug":"只读属性","link":"#只读属性","children":[{"level":3,"title":"readonly vs const","slug":"readonly-vs-const","link":"#readonly-vs-const","children":[]}]},{"level":2,"title":"函数类型","slug":"函数类型","link":"#函数类型","children":[]},{"level":2,"title":"类类型","slug":"类类型","link":"#类类型","children":[{"level":3,"title":"类实现接口","slug":"类实现接口","link":"#类实现接口","children":[]}]},{"level":2,"title":"一个类可以实现多个接口","slug":"一个类可以实现多个接口","link":"#一个类可以实现多个接口","children":[]},{"level":2,"title":"接口继承接口","slug":"接口继承接口","link":"#接口继承接口","children":[]}],"git":{"createdTime":1668948234000,"updatedTime":1678873265000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":3.66,"words":1097},"filePathRelative":"study/vue3_quick_study/chapter2/2_interface.md","localizedDate":"2022年7月23日","excerpt":"<h1> 2. 接口</h1>\\n<p>TypeScript 的核心原则之一是对值所具有的结构进行类型检查。我们使用接口（Interfaces）来定义对象的类型。<code>接口是对象的状态(属性)和行为(方法)的抽象(描述)</code></p>\\n<h2> 接口初探</h2>\\n<p>需求: 创建人的对象, 需要对人的属性进行一定的约束</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>id是number类型, 必须有, 只读的\\nname是string类型, 必须有\\nage是number类型, 必须有\\nsex是string类型, 可以没有\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
