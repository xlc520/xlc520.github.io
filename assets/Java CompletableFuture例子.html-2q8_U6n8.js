const e=JSON.parse('{"key":"v-34967d70","path":"/dev/Java%20CompletableFuture%E4%BE%8B%E5%AD%90.html","title":"Java CompletableFuture例子","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Java CompletableFuture例子","description":"Java CompletableFuture例子 既然CompletableFuture类实现了CompletionStage接口，首先我们需要理解这个接口的契约。它代表了一个特定的计算的阶段，可以同步或者异步的被完成。你可以把它看成一个计算流水线上的一个单元，最终会产生一个最终结果，这意味着几个CompletionStage可以串联起来，一个完成的阶段可以触发下一阶段的执行，接着触发下一次，接着……","date":"2023-07-18T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/Java%20CompletableFuture%E4%BE%8B%E5%AD%90.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"Java CompletableFuture例子"}],["meta",{"property":"og:description","content":"Java CompletableFuture例子 既然CompletableFuture类实现了CompletionStage接口，首先我们需要理解这个接口的契约。它代表了一个特定的计算的阶段，可以同步或者异步的被完成。你可以把它看成一个计算流水线上的一个单元，最终会产生一个最终结果，这意味着几个CompletionStage可以串联起来，一个完成的阶段可以触发下一阶段的执行，接着触发下一次，接着……"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T15:10:28.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-07-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T15:10:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java CompletableFuture例子\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-01T15:10:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[],"git":{"createdTime":1690902628000,"updatedTime":1690902628000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":10.06,"words":3019},"filePathRelative":"dev/Java CompletableFuture例子.md","localizedDate":"2023年7月18日","excerpt":"<h1> Java CompletableFuture例子</h1>\\n<p>既然<code>CompletableFuture</code>类实现了<code>CompletionStage</code>接口，首先我们需要理解这个接口的契约。它代表了一个特定的计算的阶段，可以同步或者异步的被完成。你可以把它看成一个计算流水线上的一个单元，最终会产生一个最终结果，这意味着几个<code>CompletionStage</code>可以串联起来，一个完成的阶段可以触发下一阶段的执行，接着触发下一次，接着……</p>","autoDesc":true}');export{e as data};
