const e=JSON.parse('{"key":"v-a2ddb01c","path":"/dev/Java8Stream%E4%B9%8Bcollect().html","title":"Java 8 Stream 之 collect()","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Java 8 Stream 之 collect()","description":"Java 8 Stream 之 collect() 前言 本身我是一个比较偏向少使用Stream的人，因为调试比较不方便。 但是, 不得不说，stream确实会给我们编码带来便捷。 所以还是忍不住想分享一些奇技淫巧。 正文 Stream流 其实操作分三大块 ： 创建 处理 收集 我今天想分享的是 收集 这part的玩法。 img","date":"2022-11-21T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/Java8Stream%E4%B9%8Bcollect().html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"Java 8 Stream 之 collect()"}],["meta",{"property":"og:description","content":"Java 8 Stream 之 collect() 前言 本身我是一个比较偏向少使用Stream的人，因为调试比较不方便。 但是, 不得不说，stream确实会给我们编码带来便捷。 所以还是忍不住想分享一些奇技淫巧。 正文 Stream流 其实操作分三大块 ： 创建 处理 收集 我今天想分享的是 收集 这part的玩法。 img"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-22T03:29:32.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-11-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-22T03:29:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 8 Stream 之 collect()\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-22T03:29:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"第一个小玩法","slug":"第一个小玩法","link":"#第一个小玩法","children":[]},{"level":2,"title":"将集合通过Stream.collect() 转换成其他集合/数组：","slug":"将集合通过stream-collect-转换成其他集合-数组","link":"#将集合通过stream-collect-转换成其他集合-数组","children":[]},{"level":2,"title":"第二个小玩法","slug":"第二个小玩法","link":"#第二个小玩法","children":[]},{"level":2,"title":"聚合（求和、最小、最大、平均值、分组）","slug":"聚合-求和、最小、最大、平均值、分组","link":"#聚合-求和、最小、最大、平均值、分组","children":[{"level":3,"title":"找出年龄最大：","slug":"找出年龄最大","link":"#找出年龄最大","children":[]},{"level":3,"title":"找出年龄最小：","slug":"找出年龄最小","link":"#找出年龄最小","children":[]},{"level":3,"title":"求平均值：","slug":"求平均值","link":"#求平均值","children":[]},{"level":3,"title":"求和：","slug":"求和","link":"#求和","children":[]},{"level":3,"title":"统计数量：","slug":"统计数量","link":"#统计数量","children":[]},{"level":3,"title":"简单分组：","slug":"简单分组","link":"#简单分组","children":[]},{"level":3,"title":"多级复杂分组：","slug":"多级复杂分组","link":"#多级复杂分组","children":[]}]}],"git":{"createdTime":1668948234000,"updatedTime":1692674972000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":6}]},"readingTime":{"minutes":2.49,"words":746},"filePathRelative":"dev/Java8Stream之collect().md","localizedDate":"2022年11月21日","excerpt":"<h1> Java 8 Stream 之 collect()</h1>\\n<h1> 前言</h1>\\n<p>本身我是一个比较偏向少使用Stream的人，因为调试比较不方便。</p>\\n<p>但是, 不得不说，stream确实会给我们编码带来便捷。</p>\\n<p>所以还是忍不住想分享一些奇技淫巧。</p>\\n<h1> 正文</h1>\\n<p>Stream流 其实操作分三大块 ：</p>\\n<p>创建<br>\\n处理<br>\\n收集</p>\\n<p>我今天想分享的是 收集 这part的玩法。</p>\\n<figure><img src=\\"https://static.xlc520.tk/blogImage/3426558c692f4273921554c6c043e41b.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>","autoDesc":true}');export{e as data};
