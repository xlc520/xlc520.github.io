const l=JSON.parse('{"key":"v-0c09d80a","path":"/dev/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE.html","title":"Spring 面试63问","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Spring 面试63问","description":"Spring 面试63问","date":"2022-02-13T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"type","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/Spring%20%E9%9D%A2%E8%AF%9563%E9%97%AE.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"Spring 面试63问"}],["meta",{"property":"og:description","content":"Spring 面试63问"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T15:10:28.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-02-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T15:10:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring 面试63问\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-01T15:10:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"Sping原理","slug":"sping原理","link":"#sping原理","children":[]},{"level":2,"title":"Spring 特点","slug":"spring-特点","link":"#spring-特点","children":[]},{"level":2,"title":"Spring 框架优缺点","slug":"spring-框架优缺点","link":"#spring-框架优缺点","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]}]},{"level":2,"title":"Spring 框架中都用到了哪些设计模式","slug":"spring-框架中都用到了哪些设计模式","link":"#spring-框架中都用到了哪些设计模式","children":[]},{"level":2,"title":"Spring核心组件","slug":"spring核心组件","link":"#spring核心组件","children":[]},{"level":2,"title":"Spring 控制反转（IOC）","slug":"spring-控制反转-ioc","link":"#spring-控制反转-ioc","children":[{"level":3,"title":"控制反转（IOC）概念","slug":"控制反转-ioc-概念","link":"#控制反转-ioc-概念","children":[]},{"level":3,"title":"Spring 容器高层视图","slug":"spring-容器高层视图","link":"#spring-容器高层视图","children":[]}]},{"level":2,"title":"IOC 容器实现","slug":"ioc-容器实现","link":"#ioc-容器实现","children":[{"level":3,"title":"BeanFactory-框架基础设施","slug":"beanfactory-框架基础设施","link":"#beanfactory-框架基础设施","children":[]}]},{"level":2,"title":"ApplicationContext 面向开发应用","slug":"applicationcontext-面向开发应用","link":"#applicationcontext-面向开发应用","children":[]},{"level":2,"title":"BeanFactory 和 ApplicationContext有什么区别？","slug":"beanfactory-和-applicationcontext有什么区别","link":"#beanfactory-和-applicationcontext有什么区别","children":[{"level":3,"title":"依赖关系","slug":"依赖关系","link":"#依赖关系","children":[]},{"level":3,"title":"加载方式","slug":"加载方式","link":"#加载方式","children":[]},{"level":3,"title":"创建方式","slug":"创建方式","link":"#创建方式","children":[]},{"level":3,"title":"注册方式","slug":"注册方式","link":"#注册方式","children":[]},{"level":3,"title":"ApplicationContext通常的实现","slug":"applicationcontext通常的实现","link":"#applicationcontext通常的实现","children":[]}]},{"level":2,"title":"Spring的依赖注入","slug":"spring的依赖注入","link":"#spring的依赖注入","children":[{"level":3,"title":"依赖注入的基本原则","slug":"依赖注入的基本原则","link":"#依赖注入的基本原则","children":[]}]},{"level":2,"title":"构造器依赖注入和 Setter方法注入的区别","slug":"构造器依赖注入和-setter方法注入的区别","link":"#构造器依赖注入和-setter方法注入的区别","children":[]},{"level":2,"title":"WebApplication 体系架构","slug":"webapplication-体系架构","link":"#webapplication-体系架构","children":[]},{"level":2,"title":"Spring Bean 定义","slug":"spring-bean-定义","link":"#spring-bean-定义","children":[]},{"level":2,"title":"Spring Bean 作用域","slug":"spring-bean-作用域","link":"#spring-bean-作用域","children":[]},{"level":2,"title":"Spring处理线程并发问题","slug":"spring处理线程并发问题","link":"#spring处理线程并发问题","children":[]},{"level":2,"title":"Spring Bean 生命周期","slug":"spring-bean-生命周期","link":"#spring-bean-生命周期","children":[]},{"level":2,"title":"bean生命周期方法","slug":"bean生命周期方法","link":"#bean生命周期方法","children":[]},{"level":2,"title":"什么是Spring的内部bean？什么是Spring inner beans？","slug":"什么是spring的内部bean-什么是spring-inner-beans","link":"#什么是spring的内部bean-什么是spring-inner-beans","children":[]},{"level":2,"title":"5 种不同方式的自动装配","slug":"_5-种不同方式的自动装配","link":"#_5-种不同方式的自动装配","children":[]},{"level":2,"title":"Spring 中注入一个 Java Collection","slug":"spring-中注入一个-java-collection","link":"#spring-中注入一个-java-collection","children":[]},{"level":2,"title":"使用@Autowired注解自动装配的过程","slug":"使用-autowired注解自动装配的过程","link":"#使用-autowired注解自动装配的过程","children":[]},{"level":2,"title":"Spring AOP","slug":"spring-aop","link":"#spring-aop","children":[]},{"level":2,"title":"AOP原理","slug":"aop原理","link":"#aop原理","children":[]},{"level":2,"title":"AOP 核心概念","slug":"aop-核心概念","link":"#aop-核心概念","children":[]},{"level":2,"title":"Spring 中的代理","slug":"spring-中的代理","link":"#spring-中的代理","children":[]},{"level":2,"title":"AOP 实现方式","slug":"aop-实现方式","link":"#aop-实现方式","children":[]},{"level":2,"title":"AOP 两种代理方式","slug":"aop-两种代理方式","link":"#aop-两种代理方式","children":[]},{"level":2,"title":"JDK 动态接口代理","slug":"jdk-动态接口代理","link":"#jdk-动态接口代理","children":[]},{"level":2,"title":"CGLib 动态代理","slug":"cglib-动态代理","link":"#cglib-动态代理","children":[]},{"level":2,"title":"Spring在运行时通知对象","slug":"spring在运行时通知对象","link":"#spring在运行时通知对象","children":[]},{"level":2,"title":"Spring只支持方法级别的连接点","slug":"spring只支持方法级别的连接点","link":"#spring只支持方法级别的连接点","children":[]},{"level":2,"title":"Spring通知类型","slug":"spring通知类型","link":"#spring通知类型","children":[{"level":3,"title":"同一个aspect，不同advice的执行顺序：","slug":"同一个aspect-不同advice的执行顺序","link":"#同一个aspect-不同advice的执行顺序","children":[]}]},{"level":2,"title":"Spring MVC","slug":"spring-mvc","link":"#spring-mvc","children":[]},{"level":2,"title":"Spring MVC 原理","slug":"spring-mvc-原理","link":"#spring-mvc-原理","children":[]},{"level":2,"title":"Spring DATA","slug":"spring-data","link":"#spring-data","children":[]},{"level":2,"title":"Spring ORM理解","slug":"spring-orm理解","link":"#spring-orm理解","children":[]},{"level":2,"title":"Spring DAO 的支持","slug":"spring-dao-的支持","link":"#spring-dao-的支持","children":[]},{"level":2,"title":"Spring JDBC API","slug":"spring-jdbc-api","link":"#spring-jdbc-api","children":[]},{"level":2,"title":"JdbcTemplate是什么","slug":"jdbctemplate是什么","link":"#jdbctemplate是什么","children":[]},{"level":2,"title":"使用Spring通过什么方式访问Hibernate？","slug":"使用spring通过什么方式访问hibernate","link":"#使用spring通过什么方式访问hibernate","children":[]},{"level":2,"title":"Spring 支持的 ORM","slug":"spring-支持的-orm","link":"#spring-支持的-orm","children":[]},{"level":2,"title":"Spring 支持的事务管理类型","slug":"spring-支持的事务管理类型","link":"#spring-支持的事务管理类型","children":[]},{"level":2,"title":"Spring 框架的事务管理有哪些优点？","slug":"spring-框架的事务管理有哪些优点","link":"#spring-框架的事务管理有哪些优点","children":[]},{"level":2,"title":"你更倾向用那种事务管理类型？","slug":"你更倾向用那种事务管理类型","link":"#你更倾向用那种事务管理类型","children":[]},{"level":2,"title":"Spring常用注解","slug":"spring常用注解","link":"#spring常用注解","children":[{"level":3,"title":"声明bean的注解","slug":"声明bean的注解","link":"#声明bean的注解","children":[]}]},{"level":2,"title":"@Value注解","slug":"value注解","link":"#value注解","children":[]},{"level":2,"title":"环境切换","slug":"环境切换","link":"#环境切换","children":[]},{"level":2,"title":"定时任务相关","slug":"定时任务相关","link":"#定时任务相关","children":[]},{"level":2,"title":"@Enable 注解说明","slug":"enable-注解说明","link":"#enable-注解说明","children":[]},{"level":2,"title":"测试相关注解","slug":"测试相关注解","link":"#测试相关注解","children":[]},{"level":2,"title":"SpringMVC部分","slug":"springmvc部分","link":"#springmvc部分","children":[]}],"git":{"createdTime":1668948234000,"updatedTime":1690902628000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":4}]},"readingTime":{"minutes":37.43,"words":11229},"filePathRelative":"dev/Spring 面试63问.md","localizedDate":"2022年2月13日","excerpt":"<h1> Spring 面试63问</h1>\\n<h2> Sping原理</h2>\\n<p>Spring是一个轻量级Java开发框架，最早有Rod Johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE/JavaEE full-stack（一站式）轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于应用程序的开发。</p>"}');export{l as data};
