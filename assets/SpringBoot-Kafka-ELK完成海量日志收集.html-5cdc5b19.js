import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,b as n,d as c,e as l,a as s}from"./app-6ab5d115.js";const i={},u=s(`<h1 id="springboot-kafka-elk-完成海量日志收集" tabindex="-1"><a class="header-anchor" href="#springboot-kafka-elk-完成海量日志收集" aria-hidden="true">#</a> SpringBoot-Kafka-ELK 完成海量日志收集</h1><p>整体流程大概如下：</p><figure><img src="https://static.xlc520.tk/blogImage/640-16577076343400.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><h3 id="服务器准备" tabindex="-1"><a class="header-anchor" href="#服务器准备" aria-hidden="true">#</a> 服务器准备</h3><p>在这先列出各服务器节点，方便同学们在下文中对照节点查看相应内容</p><figure><img src="https://static.xlc520.tk/blogImage/640-16577076343401.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><h3 id="springboot项目准备" tabindex="-1"><a class="header-anchor" href="#springboot项目准备" aria-hidden="true">#</a> SpringBoot项目准备</h3><p>引入log4j2替换SpringBoot默认log，demo项目结构如下：</p><figure><img src="https://static.xlc520.tk/blogImage/image-20220713182137039.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><p><strong>pom</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--  排除spring-boot-starter-logging --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> 
 <span class="token comment">&lt;!-- log4j2 --&gt;</span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-log4j2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> 
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.lmax<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>disruptor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>log4j2.xml</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Configuration</span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INFO<span class="token punctuation">&quot;</span></span> <span class="token attr-name">schema</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Log4J-V2.0.xsd<span class="token punctuation">&quot;</span></span> <span class="token attr-name">monitorInterval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>600<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOG_HOME<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>logs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE_NAME<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>collector<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>patternLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>[%d{yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZZ}] [%level{length=5}] [%thread-%tid] [%logger] [%X{hostName}] [%X{ip}] [%X{applicationName}] [%F,%L,%C,%M] [%m] ## &#39;%ex&#39;%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Appenders</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Console</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CONSOLE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SYSTEM_OUT<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${patternLayout}<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Console</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RollingRandomAccessFile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>appAppender<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fileName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${LOG_HOME}/app-\${FILE_NAME}.log<span class="token punctuation">&quot;</span></span> <span class="token attr-name">filePattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${LOG_HOME}/app-\${FILE_NAME}-%d{yyyy-MM-dd}-%i.log<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${patternLayout}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Policies</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TimeBasedTriggeringPolicy</span> <span class="token attr-name">interval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SizeBasedTriggeringPolicy</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500MB<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Policies</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DefaultRolloverStrategy</span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>         
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RollingRandomAccessFile</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RollingRandomAccessFile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorAppender<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fileName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${LOG_HOME}/error-\${FILE_NAME}.log<span class="token punctuation">&quot;</span></span> <span class="token attr-name">filePattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${LOG_HOME}/error-\${FILE_NAME}-%d{yyyy-MM-dd}-%i.log<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${patternLayout}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Filters</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onMatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ACCEPT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onMismatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DENY<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Filters</span><span class="token punctuation">&gt;</span></span>              
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Policies</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TimeBasedTriggeringPolicy</span> <span class="token attr-name">interval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SizeBasedTriggeringPolicy</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500MB<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Policies</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DefaultRolloverStrategy</span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>         
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RollingRandomAccessFile</span><span class="token punctuation">&gt;</span></span>            
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Appenders</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Loggers</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 业务相关 异步logger --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AsyncLogger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.bfxy.*<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">includeLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>appAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AsyncLogger</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AsyncLogger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.bfxy.*<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">includeLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AsyncLogger</span><span class="token punctuation">&gt;</span></span>       
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Appender-Ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CONSOLE<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Appender-Ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>appAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>errorAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Root</span><span class="token punctuation">&gt;</span></span>         
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Loggers</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>IndexController</strong></p><p>测试Controller，用以打印日志进行调试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">{</span>

 <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/index&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">InputMDC</span><span class="token punctuation">.</span><span class="token function">putMDC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;我是一条info日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;我是一条warn日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;我是一条error日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token string">&quot;idx&quot;</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>


 <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/err&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">err</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">InputMDC</span><span class="token punctuation">.</span><span class="token function">putMDC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
   <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;算术异常&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token string">&quot;err&quot;</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>InputMDC</strong></p><p>用以获取log中的<code>[%X{hostName}]</code>、<code>[%X{ip}]</code>、<code>[%X{applicationName}]</code>三个字段值</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InputMDC</span> <span class="token keyword">implements</span> <span class="token class-name">EnvironmentAware</span> <span class="token punctuation">{</span>

 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Environment</span> environment<span class="token punctuation">;</span>
 
 <span class="token annotation punctuation">@Override</span>
 <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEnvironment</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">InputMDC</span><span class="token punctuation">.</span>environment <span class="token operator">=</span> environment<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">putMDC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token constant">MDC</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;hostName&quot;</span><span class="token punctuation">,</span> <span class="token class-name">NetUtil</span><span class="token punctuation">.</span><span class="token function">getLocalHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token constant">MDC</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token class-name">NetUtil</span><span class="token punctuation">.</span><span class="token function">getLocalIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token constant">MDC</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;applicationName&quot;</span><span class="token punctuation">,</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;spring.application.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>NetUtil</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NetUtil</span> <span class="token punctuation">{</span>   
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">normalizeAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> address<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blocks <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;[:]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>blocks<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>address <span class="token operator">+</span> <span class="token string">&quot; is invalid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">String</span> host <span class="token operator">=</span> blocks<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> port <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>blocks<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   port <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>blocks<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
   address <span class="token operator">+=</span> <span class="token string">&quot;:&quot;</span><span class="token operator">+</span>port<span class="token punctuation">;</span> <span class="token comment">//use default 80</span>
  <span class="token punctuation">}</span> 
  <span class="token class-name">String</span> serverAddr <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s:%d&quot;</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> serverAddr<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getLocalAddress</span><span class="token punctuation">(</span><span class="token class-name">String</span> address<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blocks <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;[:]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>blocks<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>address <span class="token operator">+</span> <span class="token string">&quot; is invalid address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> 
  <span class="token class-name">String</span> host <span class="token operator">=</span> blocks<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> port <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>blocks<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s:%d&quot;</span><span class="token punctuation">,</span><span class="token class-name">NetUtil</span><span class="token punctuation">.</span><span class="token function">getLocalIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> address<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">matchedIndex</span><span class="token punctuation">(</span><span class="token class-name">String</span> ip<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prefix<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>prefix<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">String</span> p <span class="token operator">=</span> prefix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//*, assumed to be IP</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ip<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;127.&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span>
       ip<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;10.&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> 
       ip<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;172.&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span>
       ip<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;192.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> i<span class="token punctuation">;</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ip<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">}</span> 
  <span class="token punctuation">}</span>
  
  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getLocalIp</span><span class="token punctuation">(</span><span class="token class-name">String</span> ipPreference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>ipPreference <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   ipPreference <span class="token operator">=</span> <span class="token string">&quot;*&gt;10&gt;172&gt;192&gt;127&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prefix <span class="token operator">=</span> ipPreference<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;[&gt; ]+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
   <span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;[0-9]+\\\\.[0-9]+\\\\.[0-9]+\\\\.[0-9]+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NetworkInterface</span><span class="token punctuation">&gt;</span></span> interfaces <span class="token operator">=</span> <span class="token class-name">NetworkInterface</span><span class="token punctuation">.</span><span class="token function">getNetworkInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> matchedIp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span> matchedIdx <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">while</span> <span class="token punctuation">(</span>interfaces<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">NetworkInterface</span> ni <span class="token operator">=</span> interfaces<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InetAddress</span><span class="token punctuation">&gt;</span></span> en <span class="token operator">=</span> ni<span class="token punctuation">.</span><span class="token function">getInetAddresses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">while</span> <span class="token punctuation">(</span>en<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token class-name">InetAddress</span> addr <span class="token operator">=</span> en<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">String</span> ip <span class="token operator">=</span> addr<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
     <span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">matchedIndex</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> prefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>idx <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>matchedIdx <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       matchedIdx <span class="token operator">=</span> idx<span class="token punctuation">;</span>
       matchedIp <span class="token operator">=</span> ip<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span>matchedIdx<span class="token operator">&gt;</span>idx<span class="token punctuation">)</span><span class="token punctuation">{</span>
        matchedIdx <span class="token operator">=</span> idx<span class="token punctuation">;</span>
        matchedIp <span class="token operator">=</span> ip<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
     <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span> 
   <span class="token punctuation">}</span> 
   <span class="token keyword">if</span><span class="token punctuation">(</span>matchedIp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> matchedIp<span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
   <span class="token keyword">return</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getLocalIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getLocalIp</span><span class="token punctuation">(</span><span class="token string">&quot;*&gt;10&gt;172&gt;192&gt;127&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">remoteAddress</span><span class="token punctuation">(</span><span class="token class-name">SocketChannel</span> channel<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">SocketAddress</span> addr <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRemoteSocketAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">localAddress</span><span class="token punctuation">(</span><span class="token class-name">SocketChannel</span> channel<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">SocketAddress</span> addr <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLocalSocketAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> addr<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span> res<span class="token operator">:</span> res<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">RuntimeMXBean</span> runtime <span class="token operator">=</span> <span class="token class-name">ManagementFactory</span><span class="token punctuation">.</span><span class="token function">getRuntimeMXBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> runtime<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getLocalHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownHostException</span> uhe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> host <span class="token operator">=</span> uhe<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>host <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> colon <span class="token operator">=</span> host<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>colon <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> host<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> colon<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token string">&quot;UnknownHost&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动项目，访问<code>/index</code>和<code>/ero</code>接口，可以看到项目中生成了<code>app-collector.log</code>和<code>error-collector.log</code>两个日志文件</p><figure><img src="https://static.xlc520.tk/blogImage/image-20220713182234947.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><p>我们将Springboot服务部署在192.168.11.31这台机器上。</p><h3 id="kafka安装和启用" tabindex="-1"><a class="header-anchor" href="#kafka安装和启用" aria-hidden="true">#</a> Kafka安装和启用</h3><p>kafka下载地址：</p>`,26),k={href:"http://kafka.apache.org/downloads.html",target:"_blank",rel:"noopener noreferrer"},r=s(`<p>kafka安装步骤：首先kafka安装需要依赖与zookeeper，所以小伙伴们先准备好zookeeper环境（三个节点即可），然后我们来一起构建kafka broker。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 解压命令：</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> kafka_2.12-2.1.0.tgz <span class="token parameter variable">-C</span> /usr/local/
<span class="token comment">## 改名命令：</span>
<span class="token function">mv</span> kafka_2.12-2.1.0/ kafka_2.12
<span class="token comment">## 进入解压后的目录，修改server.properties文件：</span>
<span class="token function">vim</span> /usr/local/kafka_2.12/config/server.properties
<span class="token comment">## 修改配置：</span>
<span class="token assign-left variable">broker.id</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">9092</span>
<span class="token assign-left variable">host.name</span><span class="token operator">=</span><span class="token number">192.168</span>.11.51
<span class="token assign-left variable">advertised.host.name</span><span class="token operator">=</span><span class="token number">192.168</span>.11.51
<span class="token assign-left variable">log.dirs</span><span class="token operator">=</span>/usr/local/kafka_2.12/kafka-logs
<span class="token assign-left variable">num.partitions</span><span class="token operator">=</span><span class="token number">2</span>
<span class="token assign-left variable">zookeeper.connect</span><span class="token operator">=</span><span class="token number">192.168</span>.11.111:2181,192.168.11.112:2181,192.168.11.113:2181

<span class="token comment">## 建立日志文件夹：</span>
<span class="token function">mkdir</span> /usr/local/kafka_2.12/kafka-logs

<span class="token comment">##启动kafka：</span>
/usr/local/kafka_2.12/bin/kafka-server-start.sh /usr/local/kafka_2.12/config/server.properties <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建两个topic</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 创建topic</span>
kafka-topics.sh <span class="token parameter variable">--zookeeper</span> <span class="token number">192.168</span>.11.111:2181 <span class="token parameter variable">--create</span> <span class="token parameter variable">--topic</span> app-log-collector <span class="token parameter variable">--partitions</span> <span class="token number">1</span>  --replication-factor <span class="token number">1</span>
kafka-topics.sh <span class="token parameter variable">--zookeeper</span> <span class="token number">192.168</span>.11.111:2181 <span class="token parameter variable">--create</span> <span class="token parameter variable">--topic</span> error-log-collector <span class="token parameter variable">--partitions</span> <span class="token number">1</span>  --replication-factor <span class="token number">1</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以查看一下topic情况</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kafka-topics.sh <span class="token parameter variable">--zookeeper</span> <span class="token number">192.168</span>.11.111:2181 <span class="token parameter variable">--topic</span> app-log-test <span class="token parameter variable">--describe</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到已经成功启用了<code>app-log-collector</code>和<code>error-log-collector</code>两个topic</p><h3 id="filebeat安装和启用" tabindex="-1"><a class="header-anchor" href="#filebeat安装和启用" aria-hidden="true">#</a> filebeat安装和启用</h3><p><strong>filebeat下载</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/software
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> filebeat-6.6.0-linux-x86_64.tar.gz <span class="token parameter variable">-C</span> /usr/local/
<span class="token builtin class-name">cd</span> /usr/local
<span class="token function">mv</span> filebeat-6.6.0-linux-x86_64/ filebeat-6.6.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置filebeat，可以参考下方yml配置文件</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>vim /usr/local/filebeat<span class="token punctuation">-</span>5.6.2/filebeat.yml
<span class="token comment">###################### Filebeat Configuration Example #########################</span>
<span class="token key atrule">filebeat.prospectors</span><span class="token punctuation">:</span>

<span class="token punctuation">-</span> <span class="token key atrule">input_type</span><span class="token punctuation">:</span> log

  <span class="token key atrule">paths</span><span class="token punctuation">:</span>
    <span class="token comment">## app-服务名称.log, 为什么写死，防止发生轮转抓取历史数据</span>
    <span class="token punctuation">-</span> /usr/local/logs/app<span class="token punctuation">-</span>collector.log
  <span class="token comment">#定义写入 ES 时的 _type 值</span>
  <span class="token key atrule">document_type</span><span class="token punctuation">:</span> <span class="token string">&quot;app-log&quot;</span>
  <span class="token key atrule">multiline</span><span class="token punctuation">:</span>
    <span class="token comment">#pattern: &#39;^\\s*(\\d{4}|\\d{2})\\-(\\d{2}|[a-zA-Z]{3})\\-(\\d{2}|\\d{4})&#39;   # 指定匹配的表达式（匹配以 2017-11-15 08:04:23:889 时间格式开头的字符串）</span>
    <span class="token key atrule">pattern</span><span class="token punctuation">:</span> <span class="token string">&#39;^\\[&#39;</span>                              <span class="token comment"># 指定匹配的表达式（匹配以 &quot;{ 开头的字符串）</span>
    <span class="token key atrule">negate</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>                                <span class="token comment"># 是否匹配到</span>
    <span class="token key atrule">match</span><span class="token punctuation">:</span> after                                <span class="token comment"># 合并到上一行的末尾</span>
    <span class="token key atrule">max_lines</span><span class="token punctuation">:</span> <span class="token number">2000</span>                             <span class="token comment"># 最大的行数</span>
    <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 2s                                 <span class="token comment"># 如果在规定时间没有新的日志事件就不等待后面的日志</span>
  <span class="token key atrule">fields</span><span class="token punctuation">:</span>
    <span class="token key atrule">logbiz</span><span class="token punctuation">:</span> collector
    <span class="token key atrule">logtopic</span><span class="token punctuation">:</span> app<span class="token punctuation">-</span>log<span class="token punctuation">-</span>collector   <span class="token comment">## 按服务划分用作kafka topic</span>
    <span class="token key atrule">evn</span><span class="token punctuation">:</span> dev

<span class="token punctuation">-</span> <span class="token key atrule">input_type</span><span class="token punctuation">:</span> log

  <span class="token key atrule">paths</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> /usr/local/logs/error<span class="token punctuation">-</span>collector.log
  <span class="token key atrule">document_type</span><span class="token punctuation">:</span> <span class="token string">&quot;error-log&quot;</span>
  <span class="token key atrule">multiline</span><span class="token punctuation">:</span>
    <span class="token comment">#pattern: &#39;^\\s*(\\d{4}|\\d{2})\\-(\\d{2}|[a-zA-Z]{3})\\-(\\d{2}|\\d{4})&#39;   # 指定匹配的表达式（匹配以 2017-11-15 08:04:23:889 时间格式开头的字符串）</span>
    <span class="token key atrule">pattern</span><span class="token punctuation">:</span> <span class="token string">&#39;^\\[&#39;</span>                              <span class="token comment"># 指定匹配的表达式（匹配以 &quot;{ 开头的字符串）</span>
    <span class="token key atrule">negate</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>                                <span class="token comment"># 是否匹配到</span>
    <span class="token key atrule">match</span><span class="token punctuation">:</span> after                                <span class="token comment"># 合并到上一行的末尾</span>
    <span class="token key atrule">max_lines</span><span class="token punctuation">:</span> <span class="token number">2000</span>                             <span class="token comment"># 最大的行数</span>
    <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 2s                                 <span class="token comment"># 如果在规定时间没有新的日志事件就不等待后面的日志</span>
  <span class="token key atrule">fields</span><span class="token punctuation">:</span>
    <span class="token key atrule">logbiz</span><span class="token punctuation">:</span> collector
    <span class="token key atrule">logtopic</span><span class="token punctuation">:</span> error<span class="token punctuation">-</span>log<span class="token punctuation">-</span>collector   <span class="token comment">## 按服务划分用作kafka topic</span>
    <span class="token key atrule">evn</span><span class="token punctuation">:</span> dev
    
<span class="token key atrule">output.kafka</span><span class="token punctuation">:</span>
  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;192.168.11.51:9092&quot;</span><span class="token punctuation">]</span>
  <span class="token key atrule">topic</span><span class="token punctuation">:</span> <span class="token string">&#39;%{[fields.logtopic]}&#39;</span>
  <span class="token key atrule">partition.hash</span><span class="token punctuation">:</span>
    <span class="token key atrule">reachable_only</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">compression</span><span class="token punctuation">:</span> gzip
  <span class="token key atrule">max_message_bytes</span><span class="token punctuation">:</span> <span class="token number">1000000</span>
  <span class="token key atrule">required_acks</span><span class="token punctuation">:</span> <span class="token number">1</span>
<span class="token key atrule">logging.to_files</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>filebeat启动：</strong></p><p>检查配置是否正确</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/filebeat-6.6.0
./filebeat <span class="token parameter variable">-c</span> filebeat.yml <span class="token parameter variable">-configtest</span>
<span class="token comment">## Config OK</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动filebeat</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/filebeat-6.6.0/filebeat <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>检查是否启动成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> filebeat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到filebeat已经启动成功</p><figure><img src="https://static.xlc520.tk/blogImage/image-20220713182332234.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><p>然后我们访问192.168.11.31:8001/index和192.168.11.31:8001/err，再查看kafka的logs文件，可以看到已经生成了app-log-collector-0和error-log-collector-0文件，说明filebeat已经帮我们把数据收集好放到了kafka上。</p><h3 id="logstash安装" tabindex="-1"><a class="header-anchor" href="#logstash安装" aria-hidden="true">#</a> logstash安装</h3><p>我们在logstash的安装目录下新建一个文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> scrpit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后cd进该文件，创建一个<code>logstash-script.conf</code>文件</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">cd</span> <span class="token value attr-value">scrpit</span>
<span class="token key attr-name">vim</span> <span class="token value attr-value">logstash-script.conf</span>
<span class="token comment">## multiline 插件也可以用于其他类似的堆栈式信息，比如 linux 的内核日志。</span>
<span class="token key attr-name">input</span> <span class="token value attr-value">{</span>
<span class="token key attr-name">  kafka</span> <span class="token value attr-value">{</span>
<span class="token comment">    ## app-log-服务名称</span>
<span class="token key attr-name">    topics_pattern</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;app-log-.*&quot;</span>
<span class="token key attr-name">    bootstrap_servers</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;192.168.11.51:9092&quot;</span>
<span class="token key attr-name"> codec</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; json</span>
<span class="token key attr-name"> consumer_threads</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; 1 ## 增加consumer的并行消费线程数</span>
<span class="token key attr-name"> decorate_events</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; true</span>
<span class="token comment">    #auto_offset_rest =&gt; &quot;latest&quot;</span>
<span class="token key attr-name"> group_id</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;app-log-group&quot;</span>
   }
   
<span class="token key attr-name">   kafka</span> <span class="token value attr-value">{</span>
<span class="token comment">    ## error-log-服务名称</span>
<span class="token key attr-name">    topics_pattern</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;error-log-.*&quot;</span>
<span class="token key attr-name">    bootstrap_servers</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;192.168.11.51:9092&quot;</span>
<span class="token key attr-name"> codec</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; json</span>
<span class="token key attr-name"> consumer_threads</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; 1</span>
<span class="token key attr-name"> decorate_events</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; true</span>
<span class="token comment">    #auto_offset_rest =&gt; &quot;latest&quot;</span>
<span class="token key attr-name"> group_id</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;error-log-group&quot;</span>
   }
   
}

<span class="token key attr-name">filter</span> <span class="token value attr-value">{</span>
  
<span class="token comment">  ## 时区转换</span>
<span class="token key attr-name">  ruby</span> <span class="token value attr-value">{</span>
<span class="token key attr-name"> code</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;event.set(&#39;index_time&#39;,event.timestamp.time.localtime.strftime(&#39;%Y.%m.%d&#39;))&quot;</span>
  }

<span class="token key attr-name">  if</span> <span class="token value attr-value">&quot;app-log&quot; in [fields][logtopic]{</span>
<span class="token key attr-name">    grok</span> <span class="token value attr-value">{</span>
<span class="token comment">        ## 表达式,这里对应的是Springboot输出的日志格式</span>
<span class="token key attr-name">        match</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; [&quot;message&quot;, &quot;\\[%{NOTSPACE:currentDateTime}\\] \\[%{NOTSPACE:level}\\] \\[%{NOTSPACE:thread-id}\\] \\[%{NOTSPACE:class}\\] \\[%{DATA:hostName}\\] \\[%{DATA:ip}\\] \\[%{DATA:applicationName}\\] \\[%{DATA:location}\\] \\[%{DATA:messageInfo}\\] ## (\\&#39;\\&#39;|%{QUOTEDSTRING:throwable})&quot;]</span>
    }
  }

<span class="token key attr-name">  if</span> <span class="token value attr-value">&quot;error-log&quot; in [fields][logtopic]{</span>
<span class="token key attr-name">    grok</span> <span class="token value attr-value">{</span>
<span class="token comment">        ## 表达式</span>
<span class="token key attr-name">        match</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; [&quot;message&quot;, &quot;\\[%{NOTSPACE:currentDateTime}\\] \\[%{NOTSPACE:level}\\] \\[%{NOTSPACE:thread-id}\\] \\[%{NOTSPACE:class}\\] \\[%{DATA:hostName}\\] \\[%{DATA:ip}\\] \\[%{DATA:applicationName}\\] \\[%{DATA:location}\\] \\[%{DATA:messageInfo}\\] ## (\\&#39;\\&#39;|%{QUOTEDSTRING:throwable})&quot;]</span>
    }
  }
  
}

<span class="token comment">## 测试输出到控制台：</span>
<span class="token key attr-name">output</span> <span class="token value attr-value">{</span>
<span class="token key attr-name">  stdout</span> <span class="token value attr-value">{ codec =&gt; rubydebug }</span>
}


<span class="token comment">## elasticsearch：</span>
<span class="token key attr-name">output</span> <span class="token value attr-value">{</span>

<span class="token key attr-name">  if</span> <span class="token value attr-value">&quot;app-log&quot; in [fields][logtopic]{</span>
<span class="token comment"> ## es插件</span>
<span class="token key attr-name"> elasticsearch</span> <span class="token value attr-value">{</span>
<span class="token comment">       # es服务地址</span>
<span class="token key attr-name">        hosts</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; [&quot;192.168.11.35:9200&quot;]</span>
<span class="token comment">        # 用户名密码      </span>
<span class="token key attr-name">        user</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;elastic&quot;</span>
<span class="token key attr-name">        password</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;123456&quot;</span>
<span class="token comment">        ## 索引名，+ 号开头的，就会自动认为后面是时间格式：</span>
<span class="token comment">        ## javalog-app-service-2019.01.23 </span>
<span class="token key attr-name">        index</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;app-log-%{[fields][logbiz]}-%{index_time}&quot;</span>
<span class="token comment">        # 是否嗅探集群ip：一般设置true；http://192.168.11.35:9200/_nodes/http?pretty</span>
<span class="token comment">        # 通过嗅探机制进行es集群负载均衡发日志消息</span>
<span class="token key attr-name">        sniffing</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; true</span>
<span class="token comment">        # logstash默认自带一个mapping模板，进行模板覆盖</span>
<span class="token key attr-name">        template_overwrite</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; true</span>
<span class="token key attr-name">    }</span> 
  }
  
<span class="token key attr-name">  if</span> <span class="token value attr-value">&quot;error-log&quot; in [fields][logtopic]{</span>
<span class="token key attr-name"> elasticsearch</span> <span class="token value attr-value">{</span>
<span class="token key attr-name">        hosts</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; [&quot;192.168.11.35:9200&quot;]    </span>
<span class="token key attr-name">        user</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;elastic&quot;</span>
<span class="token key attr-name">        password</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;123456&quot;</span>
<span class="token key attr-name">        index</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; &quot;error-log-%{[fields][logbiz]}-%{index_time}&quot;</span>
<span class="token key attr-name">        sniffing</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; true</span>
<span class="token key attr-name">        template_overwrite</span> <span class="token punctuation">=</span><span class="token value attr-value">&gt; true</span>
<span class="token key attr-name">    }</span> 
  }
  

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动logstash</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/logstash-6.6.0/bin/logstash <span class="token parameter variable">-f</span> /usr/local/logstash-6.6.0/script/logstash-script.conf <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待启动成功，我们再次访问<code>192.168.11.31:8001/err</code></p><p>可以看到控制台开始打印日志</p><figure><img src="https://static.xlc520.tk/blogImage/640-16577076343402.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><h3 id="elasticsearch与kibana" tabindex="-1"><a class="header-anchor" href="#elasticsearch与kibana" aria-hidden="true">#</a> ElasticSearch与Kibana</h3><figure><img src="https://static.xlc520.tk/blogImage/640-16577076343403.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><p>ES和Kibana的搭建之前没写过博客，网上资料也比较多，大家可以自行搜索。</p><p>搭建完成后，访问Kibana的管理页面<code>192.168.11.35:5601</code>，选择Management -&gt; Kinaba - Index Patterns</p><figure><img src="https://static.xlc520.tk/blogImage/640-16577076343404.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><p>然后Create index pattern</p><ul><li>index pattern 输入 <code>app-log-*</code></li><li>Time Filter field name 选择 currentDateTime</li></ul><p>这样我们就成功创建了索引。</p><p>我们再次访问<code>192.168.11.31:8001/err</code>，这个时候就可以看到我们已经命中了一条log信息</p><figure><img src="https://static.xlc520.tk/blogImage/640-16577076343405.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><p>里面展示了日志的全量信息</p><figure><img src="https://static.xlc520.tk/blogImage/640-16577076343406.png" alt="SpringBoot+Kafka+ELK" tabindex="0" loading="lazy"><figcaption>SpringBoot+Kafka+ELK</figcaption></figure><p>到这里，我们完整的日志收集及可视化就搭建完成了！</p>`,45);function d(v,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("blockquote",null,[n("p",null,[n("a",k,[c("http://kafka.apache.org/downloads.html"),l(a)])])]),r])}const f=t(i,[["render",d],["__file","SpringBoot-Kafka-ELK完成海量日志收集.html.vue"]]);export{f as default};
