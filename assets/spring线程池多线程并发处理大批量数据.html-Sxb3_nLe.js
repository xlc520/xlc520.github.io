const e=JSON.parse('{"key":"v-47449e3c","path":"/dev/spring%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86%E5%A4%A7%E6%89%B9%E9%87%8F%E6%95%B0%E6%8D%AE.html","title":"Spring线程池多线程并发处理大批量数据，解决IO效率问题","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Spring线程池多线程并发处理大批量数据，解决IO效率问题","description":"Spring线程池多线程并发处理大批量数据，解决IO效率问题 首先，叙述一下当前面临的问题所在。当前系统通过接口调用其他系统的数据，返回的数据达到10万级，然后将这批数据插入到oracle数据库。怎样尽可能提高这一过程的效率？ 大致从两个时间节点来优化： 一个节点是优化接口之间调用的响应速度，可以项目之间使用集群，实现负载均衡。接口拿到数据后可以暂存到...","date":"2022-05-20T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/spring%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86%E5%A4%A7%E6%89%B9%E9%87%8F%E6%95%B0%E6%8D%AE.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"Spring线程池多线程并发处理大批量数据，解决IO效率问题"}],["meta",{"property":"og:description","content":"Spring线程池多线程并发处理大批量数据，解决IO效率问题 首先，叙述一下当前面临的问题所在。当前系统通过接口调用其他系统的数据，返回的数据达到10万级，然后将这批数据插入到oracle数据库。怎样尽可能提高这一过程的效率？ 大致从两个时间节点来优化： 一个节点是优化接口之间调用的响应速度，可以项目之间使用集群，实现负载均衡。接口拿到数据后可以暂存到..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T09:41:05.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-05-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T09:41:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring线程池多线程并发处理大批量数据，解决IO效率问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T09:41:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"大致从两个时间节点来优化：","slug":"大致从两个时间节点来优化","link":"#大致从两个时间节点来优化","children":[]},{"level":2,"title":"两个方案：","slug":"两个方案","link":"#两个方案","children":[{"level":3,"title":"方案一：新建几个线程，交给线程池管理","slug":"方案一-新建几个线程-交给线程池管理","link":"#方案一-新建几个线程-交给线程池管理","children":[]},{"level":3,"title":"方案二：只定义线程的数量，线程的新建管理都交给线程池","slug":"方案二-只定义线程的数量-线程的新建管理都交给线程池","link":"#方案二-只定义线程的数量-线程的新建管理都交给线程池","children":[]}]}],"git":{"createdTime":1668948234000,"updatedTime":1678873265000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":5.43,"words":1628},"filePathRelative":"dev/spring线程池多线程并发处理大批量数据.md","localizedDate":"2022年5月20日","excerpt":"\\n<p>首先，叙述一下当前面临的问题所在。当前系统通过接口调用其他系统的数据，返回的数据达到10万级，然后将这批数据插入到oracle数据库。怎样尽可能提高这一过程的效率？</p>\\n<h2>大致从两个时间节点来优化：</h2>","autoDesc":true}');export{e as data};
