import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,b as n,d as s,e as t,a as p}from"./app-CXNU22eb.js";const i={},u=p('<h1 id="springboot-超大文件上传" tabindex="-1"><a class="header-anchor" href="#springboot-超大文件上传"><span>SpringBoot 超大文件上传</span></a></h1><h2 id="一-秒传" tabindex="-1"><a class="header-anchor" href="#一-秒传"><span><strong>一. 秒传</strong></span></a></h2><h3 id="_1、什么是秒传" tabindex="-1"><a class="header-anchor" href="#_1、什么是秒传"><span>1、什么是秒传</span></a></h3><p>通俗的说，你把要上传的东西上传，服务器会先做<strong>MD5</strong>校验，如果服务器上有一样的东西，它就直接给你个新地址，其实你下载的都是服务器上的同一个文件，想要不秒传，其实只要让 <strong>MD5</strong>改变，就是对文件本身做一下修改（改名字不行），例如一个文本文件，你多加几个字，MD5 就变了，就不会秒传了。</p><h3 id="_2、本文实现的秒传核心逻辑" tabindex="-1"><a class="header-anchor" href="#_2、本文实现的秒传核心逻辑"><span>2、本文实现的秒传核心逻辑</span></a></h3><ul><li>利用 redis 的 set 方法存放文件上传状态，其中 key 为文件上传的 md5，value 为是否上传完成的标志位。</li><li>当标志位 true 为上传已经完成，此时如果有相同文件上传，则进入秒传逻辑。如果标志位为 false，则说明还没上传完成，此时需要在调用 set 的方法，保存块号文件记录的路径，其中 key 为上传文件 md5 加一个固定前缀，value 为块号文件记录路径</li></ul><h2 id="二-分片上传" tabindex="-1"><a class="header-anchor" href="#二-分片上传"><span><strong>二. 分片上传</strong></span></a></h2><h3 id="_1、什么是分片上传" tabindex="-1"><a class="header-anchor" href="#_1、什么是分片上传"><span>1、什么是分片上传</span></a></h3><p>分片上传，就是将所要上传的文件，按照一定的大小，将整个文件分隔成多个数据块（我们称之为 Part）来进行分别上传，上传完之后再由服务端对所有上传的文件进行汇总整合成原始的文件。</p><h3 id="_2、分片上传的场景" tabindex="-1"><a class="header-anchor" href="#_2、分片上传的场景"><span>2、分片上传的场景</span></a></h3><ul><li>大文件上传</li><li>网络环境环境不好，存在需要重传风险的场景</li></ul><h2 id="三-断点续传" tabindex="-1"><a class="header-anchor" href="#三-断点续传"><span><strong>三. 断点续传</strong></span></a></h2><h3 id="_1、什么是断点续传" tabindex="-1"><a class="header-anchor" href="#_1、什么是断点续传"><span>1、什么是断点续传</span></a></h3><p>断点续传是在下载或上传时，将下载或上传任务（一个文件或一个压缩包）人为的划分为几个部分，每一个部分采用一个线程进行上传或下载，如果碰到网络故障，可以从已经上传或下载的部分开始继续上传或者下载未完成的部分，而没有必要从头开始上传或者下载。本文的断点续传主要是针对断点上传场景。</p><h4 id="_2、应用场景" tabindex="-1"><a class="header-anchor" href="#_2、应用场景"><span>2、应用场景</span></a></h4><p>断点续传可以看成是分片上传的一个衍生，因此可以使用分片上传的场景，都可以使用断点续传。</p><h4 id="_3、实现断点续传的核心逻辑" tabindex="-1"><a class="header-anchor" href="#_3、实现断点续传的核心逻辑"><span>3、实现断点续传的核心逻辑</span></a></h4><p>在分片上传的过程中，如果因为系统崩溃或者网络中断等异常因素导致上传中断，这时候客户端需要记录上传的进度。在之后支持再次上传时，可以继续从上次上传中断的地方进行继续上传。</p><p>为了避免客户端在上传之后的进度数据被删除而导致重新开始从头上传的问题，服务端也可以提供相应的接口便于客户端对已经上传的分片数据进行查询，从而使客户端知道已经上传的分片数据，从而从下一个分片数据开始继续上传。</p><h4 id="_4、实现流程步骤" tabindex="-1"><a class="header-anchor" href="#_4、实现流程步骤"><span>4、实现流程步骤</span></a></h4><p><strong>a、方案一，常规步骤</strong></p><ul><li>将需要上传的文件按照一定的分割规则，分割成相同大小的数据块；</li><li>初始化一个分片上传任务，返回本次分片上传唯一标识；</li><li>按照一定的策略（串行或并行）发送各个分片数据块；</li><li>发送完成后，服务端根据判断数据上传是否完整，如果完整，则进行数据块合成得到原始文件。</li></ul><p><strong>b、方案二、本文实现的步骤</strong></p><ul><li>前端（客户端）需要根据固定大小对文件进行分片，请求后端（服务端）时要带上分片序号和大小</li><li>服务端创建 conf 文件用来记录分块位置，conf 文件长度为总分片数，每上传一个分块即向 conf 文件中写入一个 127，那么没上传的位置就是默认的 0,已上传的就是<code>Byte.MAX_VALUE</code> 127（这步是实现断点续传和秒传的核心步骤）</li><li>服务器按照请求数据中给的分片序号和每片分块大小（分片大小是固定且一样的）算出开始位置，与读取到的文件片段数据，写入文件。</li></ul><h4 id="_5、分片上传-断点上传代码实现" tabindex="-1"><a class="header-anchor" href="#_5、分片上传-断点上传代码实现"><span>5、分片上传/断点上传代码实现</span></a></h4><p>前端采用百度提供的 webuploader 的插件，进行分片。因本文主要介绍服务端代码实现，webuploader 如何进行分片，具体实现可以查看如下链接:</p>',26),k={href:"http://fex.baidu.com/webuploader/getting-started.html",target:"_blank",rel:"noopener noreferrer"},r=n("p",null,[s("后端用两种方式实现文件写入，一种是用"),n("strong",null,"RandomAccessFile"),s("，如果对"),n("strong",null,"RandomAccessFile"),s("不熟悉的朋友，可以查看如下链接:")],-1),d={href:"https://blog.csdn.net/dimudan2015/article/details/81910690",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[s("另一种是使用"),n("strong",null,"MappedByteBuffer"),s("，对"),n("strong",null,"MappedByteBuffer"),s("不熟悉的朋友，可以查看如下链接进行了解:")],-1),v={href:"https://www.jianshu.com/p/f90866dcbffc",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="四-后端进行写入操作的核心代码" tabindex="-1"><a class="header-anchor" href="#四-后端进行写入操作的核心代码"><span><strong>四. 后端进行写入操作的核心代码</strong></span></a></h2><h3 id="_1、randomaccessfile-实现方式" tabindex="-1"><a class="header-anchor" href="#_1、randomaccessfile-实现方式"><span>1、RandomAccessFile 实现方式</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@UploadMode</span><span class="token punctuation">(</span>mode <span class="token operator">=</span> <span class="token class-name">UploadModeEnum</span><span class="token punctuation">.</span><span class="token constant">RANDOM_ACCESS</span><span class="token punctuation">)</span>    
<span class="token annotation punctuation">@Slf4j</span>    
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomAccessUploadStrategy</span> <span class="token keyword">extends</span> <span class="token class-name">SliceUploadTemplate</span> <span class="token punctuation">{</span>    
    
  <span class="token annotation punctuation">@Autowired</span>    
  <span class="token keyword">private</span> <span class="token class-name">FilePathUtil</span> filePathUtil<span class="token punctuation">;</span>    
    
  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${upload.chunkSize}&quot;</span><span class="token punctuation">)</span>    
  <span class="token keyword">private</span> <span class="token keyword">long</span> defaultChunkSize<span class="token punctuation">;</span>    
    
  <span class="token annotation punctuation">@Override</span>    
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">FileUploadRequestDTO</span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    <span class="token class-name">RandomAccessFile</span> accessTmpFile <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    
    <span class="token keyword">try</span> <span class="token punctuation">{</span>    
      <span class="token class-name">String</span> uploadDirPath <span class="token operator">=</span> filePathUtil<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token class-name">File</span> tmpFile <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">createTmpFile</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      accessTmpFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span>tmpFile<span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token comment">//这个必须与前端设定的值一致    </span>
      <span class="token keyword">long</span> chunkSize <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getChunkSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> defaultChunkSize <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>    
          <span class="token operator">:</span> param<span class="token punctuation">.</span><span class="token function">getChunkSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">long</span> offset <span class="token operator">=</span> chunkSize <span class="token operator">*</span> param<span class="token punctuation">.</span><span class="token function">getChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token comment">//定位到该分片的偏移量    </span>
      accessTmpFile<span class="token punctuation">.</span><span class="token function">seek</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token comment">//写入该分片数据    </span>
      accessTmpFile<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">boolean</span> isOk <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">checkAndSetUploadProgress</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span> uploadDirPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">return</span> isOk<span class="token punctuation">;</span>    
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
      log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>    
      <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>accessTmpFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>    
   <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>    
    
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、mappedbytebuffer-实现方式" tabindex="-1"><a class="header-anchor" href="#_2、mappedbytebuffer-实现方式"><span>2、MappedByteBuffer 实现方式</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@UploadMode</span><span class="token punctuation">(</span>mode <span class="token operator">=</span> <span class="token class-name">UploadModeEnum</span><span class="token punctuation">.</span><span class="token constant">MAPPED_BYTEBUFFER</span><span class="token punctuation">)</span>    
<span class="token annotation punctuation">@Slf4j</span>    
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MappedByteBufferUploadStrategy</span> <span class="token keyword">extends</span> <span class="token class-name">SliceUploadTemplate</span> <span class="token punctuation">{</span>    
    
  <span class="token annotation punctuation">@Autowired</span>    
  <span class="token keyword">private</span> <span class="token class-name">FilePathUtil</span> filePathUtil<span class="token punctuation">;</span>    
    
  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${upload.chunkSize}&quot;</span><span class="token punctuation">)</span>    
  <span class="token keyword">private</span> <span class="token keyword">long</span> defaultChunkSize<span class="token punctuation">;</span>    
    
  <span class="token annotation punctuation">@Override</span>    
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">FileUploadRequestDTO</span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    
    <span class="token class-name">RandomAccessFile</span> tempRaf <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    
    <span class="token class-name">FileChannel</span> fileChannel <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    
    <span class="token class-name">MappedByteBuffer</span> mappedByteBuffer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    
    <span class="token keyword">try</span> <span class="token punctuation">{</span>    
      <span class="token class-name">String</span> uploadDirPath <span class="token operator">=</span> filePathUtil<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token class-name">File</span> tmpFile <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">createTmpFile</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      tempRaf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span>tmpFile<span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      fileChannel <span class="token operator">=</span> tempRaf<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    
      <span class="token keyword">long</span> chunkSize <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getChunkSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> defaultChunkSize <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>    
          <span class="token operator">:</span> param<span class="token punctuation">.</span><span class="token function">getChunkSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token comment">//写入该分片数据    </span>
      <span class="token keyword">long</span> offset <span class="token operator">=</span> chunkSize <span class="token operator">*</span> param<span class="token punctuation">.</span><span class="token function">getChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fileData <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      mappedByteBuffer <span class="token operator">=</span> fileChannel    
<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span><span class="token constant">READ_WRITE</span><span class="token punctuation">,</span> offset<span class="token punctuation">,</span> fileData<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      mappedByteBuffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>fileData<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">boolean</span> isOk <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">checkAndSetUploadProgress</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span> uploadDirPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">return</span> isOk<span class="token punctuation">;</span>    
    
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
      log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>    
    
      <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">freedMappedByteBuffer</span><span class="token punctuation">(</span>mappedByteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>fileChannel<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>tempRaf<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    
    <span class="token punctuation">}</span>    
    
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>    
    
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、文件操作核心模板类代码" tabindex="-1"><a class="header-anchor" href="#_3、文件操作核心模板类代码"><span>3、文件操作核心模板类代码</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>    
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">SliceUploadTemplate</span> <span class="token keyword">implements</span> <span class="token class-name">SliceUploadStrategy</span> <span class="token punctuation">{</span>    
    
  <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">boolean</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">FileUploadRequestDTO</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    
  <span class="token keyword">protected</span> <span class="token class-name">File</span> <span class="token function">createTmpFile</span><span class="token punctuation">(</span><span class="token class-name">FileUploadRequestDTO</span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    
    <span class="token class-name">FilePathUtil</span> filePathUtil <span class="token operator">=</span> <span class="token class-name">SpringContextHolder</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">FilePathUtil</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    param<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">withoutHeadAndTailDiagonal</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token class-name">String</span> fileName <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token class-name">String</span> uploadDirPath <span class="token operator">=</span> filePathUtil<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token class-name">String</span> tempFileName <span class="token operator">=</span> fileName <span class="token operator">+</span> <span class="token string">&quot;_tmp&quot;</span><span class="token punctuation">;</span>    
    <span class="token class-name">File</span> tmpDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>uploadDirPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token class-name">File</span> tmpFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>uploadDirPath<span class="token punctuation">,</span> tempFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tmpDir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
      tmpDir<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>    
    <span class="token keyword">return</span> tmpFile<span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>    
    
  <span class="token annotation punctuation">@Override</span>    
  <span class="token keyword">public</span> <span class="token class-name">FileUploadDTO</span> <span class="token function">sliceUpload</span><span class="token punctuation">(</span><span class="token class-name">FileUploadRequestDTO</span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    
    <span class="token keyword">boolean</span> isOk <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isOk<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
      <span class="token class-name">File</span> tmpFile <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createTmpFile</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token class-name">FileUploadDTO</span> fileUploadDTO <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">saveAndFileUploadDTO</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tmpFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">return</span> fileUploadDTO<span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>    
    <span class="token class-name">String</span> md5 <span class="token operator">=</span> <span class="token class-name">FileMD5Util</span><span class="token punctuation">.</span><span class="token function">getFileMD5</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> md5<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token keyword">return</span> <span class="token class-name">FileUploadDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chunkMd5Info</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>    
    
  <span class="token doc-comment comment">/**    
   * 检查并修改文件上传进度    
   */</span>    
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">checkAndSetUploadProgress</span><span class="token punctuation">(</span><span class="token class-name">FileUploadRequestDTO</span> param<span class="token punctuation">,</span> <span class="token class-name">String</span> uploadDirPath<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    
    <span class="token class-name">String</span> fileName <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token class-name">File</span> confFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>uploadDirPath<span class="token punctuation">,</span> fileName <span class="token operator">+</span> <span class="token string">&quot;.conf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token keyword">byte</span> isComplete <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    
    <span class="token class-name">RandomAccessFile</span> accessConfFile <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    
    <span class="token keyword">try</span> <span class="token punctuation">{</span>    
      accessConfFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span>confFile<span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token comment">//把该分段标记为 true 表示完成    </span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;set part &quot;</span> <span class="token operator">+</span> param<span class="token punctuation">.</span><span class="token function">getChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; complete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token comment">//创建conf文件文件长度为总分片数，每上传一个分块即向conf文件中写入一个127，那么没上传的位置就是默认0,已上传的就是Byte.MAX_VALUE 127    </span>
      accessConfFile<span class="token punctuation">.</span><span class="token function">setLength</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      accessConfFile<span class="token punctuation">.</span><span class="token function">seek</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      accessConfFile<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Byte</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    
      <span class="token comment">//completeList 检查是否全部完成,如果数组里是否全部都是127(全部分片都成功上传)    </span>
      <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> completeList <span class="token operator">=</span> <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">readFileToByteArray</span><span class="token punctuation">(</span>confFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      isComplete <span class="token operator">=</span> <span class="token class-name">Byte</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>    
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> completeList<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> isComplete <span class="token operator">==</span> <span class="token class-name">Byte</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
        <span class="token comment">//与运算, 如果有部分没有完成则 isComplete 不是 Byte.MAX_VALUE    </span>
        isComplete <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>isComplete <span class="token operator">&amp;</span> completeList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;check part &quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot; complete?:&quot;</span> <span class="token operator">+</span> completeList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token punctuation">}</span>    
    
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
      log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>    
      <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>accessConfFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>    
 <span class="token keyword">boolean</span> isOk <span class="token operator">=</span> <span class="token function">setUploadProgress2Redis</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span> uploadDirPath<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> confFile<span class="token punctuation">,</span> isComplete<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token keyword">return</span> isOk<span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>    
    
  <span class="token doc-comment comment">/**    
   * 把上传进度信息存进redis    
   */</span>    
  <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">setUploadProgress2Redis</span><span class="token punctuation">(</span><span class="token class-name">FileUploadRequestDTO</span> param<span class="token punctuation">,</span> <span class="token class-name">String</span> uploadDirPath<span class="token punctuation">,</span>    
      <span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">File</span> confFile<span class="token punctuation">,</span> <span class="token keyword">byte</span> isComplete<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    
    <span class="token class-name">RedisUtil</span> redisUtil <span class="token operator">=</span> <span class="token class-name">SpringContextHolder</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">RedisUtil</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isComplete <span class="token operator">==</span> <span class="token class-name">Byte</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
      redisUtil<span class="token punctuation">.</span><span class="token function">hset</span><span class="token punctuation">(</span><span class="token class-name">FileConstant</span><span class="token punctuation">.</span><span class="token constant">FILE_UPLOAD_STATUS</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      redisUtil<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token class-name">FileConstant</span><span class="token punctuation">.</span><span class="token constant">FILE_MD5_KEY</span> <span class="token operator">+</span> param<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      confFile<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>redisUtil<span class="token punctuation">.</span><span class="token function">hHasKey</span><span class="token punctuation">(</span><span class="token class-name">FileConstant</span><span class="token punctuation">.</span><span class="token constant">FILE_UPLOAD_STATUS</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
        redisUtil<span class="token punctuation">.</span><span class="token function">hset</span><span class="token punctuation">(</span><span class="token class-name">FileConstant</span><span class="token punctuation">.</span><span class="token constant">FILE_UPLOAD_STATUS</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
        redisUtil<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">FileConstant</span><span class="token punctuation">.</span><span class="token constant">FILE_MD5_KEY</span> <span class="token operator">+</span> param<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    
            uploadDirPath <span class="token operator">+</span> <span class="token class-name">FileConstant</span><span class="token punctuation">.</span><span class="token constant">FILE_SEPARATORCHAR</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> <span class="token string">&quot;.conf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token punctuation">}</span>    
    
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>    
  <span class="token punctuation">}</span>    
<span class="token doc-comment comment">/**    
   * 保存文件操作    
   */</span>    
  <span class="token keyword">public</span> <span class="token class-name">FileUploadDTO</span> <span class="token function">saveAndFileUploadDTO</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">File</span> tmpFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    
    <span class="token class-name">FileUploadDTO</span> fileUploadDTO <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    
    
    <span class="token keyword">try</span> <span class="token punctuation">{</span>    
    
      fileUploadDTO <span class="token operator">=</span> <span class="token function">renameFile</span><span class="token punctuation">(</span>tmpFile<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">if</span> <span class="token punctuation">(</span>fileUploadDTO<span class="token punctuation">.</span><span class="token function">isUploadComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
        <span class="token class-name">System</span><span class="token punctuation">.</span>out    
            <span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;upload complete !!&quot;</span> <span class="token operator">+</span> fileUploadDTO<span class="token punctuation">.</span><span class="token function">isUploadComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; name=&quot;</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>    
        <span class="token comment">//TODO 保存文件信息到数据库    </span>
    
      <span class="token punctuation">}</span>    
    
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
      log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>    
    
    <span class="token punctuation">}</span>    
    <span class="token keyword">return</span> fileUploadDTO<span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>    
<span class="token doc-comment comment">/**    
   * 文件重命名    
   *    
   * <span class="token keyword">@param</span> <span class="token parameter">toBeRenamed</span> 将要修改名字的文件    
   * <span class="token keyword">@param</span> <span class="token parameter">toFileNewName</span> 新的名字    
   */</span>    
  <span class="token keyword">private</span> <span class="token class-name">FileUploadDTO</span> <span class="token function">renameFile</span><span class="token punctuation">(</span><span class="token class-name">File</span> toBeRenamed<span class="token punctuation">,</span> <span class="token class-name">String</span> toFileNewName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    <span class="token comment">//检查要重命名的文件是否存在，是否是文件    </span>
    <span class="token class-name">FileUploadDTO</span> fileUploadDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileUploadDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>toBeRenamed<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> toBeRenamed<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;File does not exist: {}&quot;</span><span class="token punctuation">,</span> toBeRenamed<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      fileUploadDTO<span class="token punctuation">.</span><span class="token function">setUploadComplete</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
      <span class="token keyword">return</span> fileUploadDTO<span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>    
    <span class="token class-name">String</span> ext <span class="token operator">=</span> <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">getExtension</span><span class="token punctuation">(</span>toFileNewName<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token class-name">String</span> p <span class="token operator">=</span> toBeRenamed<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token class-name">String</span> filePath <span class="token operator">=</span> p <span class="token operator">+</span> <span class="token class-name">FileConstant</span><span class="token punctuation">.</span><span class="token constant">FILE_SEPARATORCHAR</span> <span class="token operator">+</span> toFileNewName<span class="token punctuation">;</span>    
    <span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token comment">//修改文件名    </span>
    <span class="token keyword">boolean</span> uploadFlag <span class="token operator">=</span> toBeRenamed<span class="token punctuation">.</span><span class="token function">renameTo</span><span class="token punctuation">(</span>newFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    
    fileUploadDTO<span class="token punctuation">.</span><span class="token function">setMtime</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">getCurrentTimeStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    fileUploadDTO<span class="token punctuation">.</span><span class="token function">setUploadComplete</span><span class="token punctuation">(</span>uploadFlag<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    fileUploadDTO<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    fileUploadDTO<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>newFile<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    fileUploadDTO<span class="token punctuation">.</span><span class="token function">setFileExt</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    fileUploadDTO<span class="token punctuation">.</span><span class="token function">setFileId</span><span class="token punctuation">(</span>toFileNewName<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    
    <span class="token keyword">return</span> fileUploadDTO<span class="token punctuation">;</span>    
  <span class="token punctuation">}</span>    
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五-总结" tabindex="-1"><a class="header-anchor" href="#五-总结"><span><strong>五. 总结</strong></span></a></h2><p>在实现分片上传的过程，需要前端和后端配合，比如前后端的上传块号的文件大小，前后端必须得要一致，否则上传就会有问题。其次文件相关操作正常都是要搭建一个文件服务器的，比如使用 <strong>fastdfs</strong>、<strong>hdfs</strong>等。</p><p>本示例代码在电脑配置为 4 核内存 8G 情况下，上传 24G 大小的文件，上传时间需要 30 多分钟，主要时间耗费在前端的<strong>md5</strong> 值计算，后端写入的速度还是比较快。</p>`,10);function f(h,g){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[n("em",null,[n("a",k,[s("http://fex.baidu.com/webuploader/getting-started.html"),t(a)])])])]),r,n("ul",null,[n("li",null,[n("em",null,[n("a",d,[s("https://blog.csdn.net/dimudan2015/article/details/81910690"),t(a)])])])]),m,n("ul",null,[n("li",null,[n("em",null,[n("a",v,[s("https://www.jianshu.com/p/f90866dcbffc"),t(a)])])])]),b])}const F=e(i,[["render",f],["__file","SpringBoot超大文件上传.html.vue"]]),_=JSON.parse('{"path":"/dev/SpringBoot%E8%B6%85%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.html","title":"SpringBoot超大文件上传","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"SpringBoot超大文件上传","excerpt":null,"description":"SpringBoot 超大文件上传 一. 秒传 1、什么是秒传 通俗的说，你把要上传的东西上传，服务器会先做MD5校验，如果服务器上有一样的东西，它就直接给你个新地址，其实你下载的都是服务器上的同一个文件，想要不秒传，其实只要让 MD5改变，就是对文件本身做一下修改（改名字不行），例如一个文本文件，你多加几个字，MD5 就变了，就不会秒传了。 2、本文...","date":"2022-11-22T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/SpringBoot%E8%B6%85%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"SpringBoot超大文件上传"}],["meta",{"property":"og:description","content":"SpringBoot 超大文件上传 一. 秒传 1、什么是秒传 通俗的说，你把要上传的东西上传，服务器会先做MD5校验，如果服务器上有一样的东西，它就直接给你个新地址，其实你下载的都是服务器上的同一个文件，想要不秒传，其实只要让 MD5改变，就是对文件本身做一下修改（改名字不行），例如一个文本文件，你多加几个字，MD5 就变了，就不会秒传了。 2、本文..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-11-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot超大文件上传\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"一. 秒传","slug":"一-秒传","link":"#一-秒传","children":[{"level":3,"title":"1、什么是秒传","slug":"_1、什么是秒传","link":"#_1、什么是秒传","children":[]},{"level":3,"title":"2、本文实现的秒传核心逻辑","slug":"_2、本文实现的秒传核心逻辑","link":"#_2、本文实现的秒传核心逻辑","children":[]}]},{"level":2,"title":"二. 分片上传","slug":"二-分片上传","link":"#二-分片上传","children":[{"level":3,"title":"1、什么是分片上传","slug":"_1、什么是分片上传","link":"#_1、什么是分片上传","children":[]},{"level":3,"title":"2、分片上传的场景","slug":"_2、分片上传的场景","link":"#_2、分片上传的场景","children":[]}]},{"level":2,"title":"三. 断点续传","slug":"三-断点续传","link":"#三-断点续传","children":[{"level":3,"title":"1、什么是断点续传","slug":"_1、什么是断点续传","link":"#_1、什么是断点续传","children":[]}]},{"level":2,"title":"四. 后端进行写入操作的核心代码","slug":"四-后端进行写入操作的核心代码","link":"#四-后端进行写入操作的核心代码","children":[{"level":3,"title":"1、RandomAccessFile 实现方式","slug":"_1、randomaccessfile-实现方式","link":"#_1、randomaccessfile-实现方式","children":[]},{"level":3,"title":"2、MappedByteBuffer 实现方式","slug":"_2、mappedbytebuffer-实现方式","link":"#_2、mappedbytebuffer-实现方式","children":[]},{"level":3,"title":"3、文件操作核心模板类代码","slug":"_3、文件操作核心模板类代码","link":"#_3、文件操作核心模板类代码","children":[]}]},{"level":2,"title":"五. 总结","slug":"五-总结","link":"#五-总结","children":[]}],"git":{"createdTime":1668945069000,"updatedTime":1714224756000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2},{"name":"xlc","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":7.27,"words":2182},"filePathRelative":"dev/SpringBoot超大文件上传.md","localizedDate":"2022年11月22日","autoDesc":true}');export{F as comp,_ as data};
