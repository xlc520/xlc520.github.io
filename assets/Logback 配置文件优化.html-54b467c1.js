import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c,b as n,d as a,e as o,a as l}from"./app-21243f18.js";const i={},u=l(`<h1 id="logback-配置文件优化" tabindex="-1"><a class="header-anchor" href="#logback-配置文件优化" aria-hidden="true">#</a> Logback 配置文件优化</h1><p><strong>01、通过阅读本篇文章将了解到</strong></p><ul><li>1.日志输出到文件并根据<code>LEVEL</code>级别将日志分类保存到不同文件</li><li>2.通过异步输出日志减少磁盘<code>IO</code>提高性能</li><li>3.异步输出日志的原理</li></ul><h3 id="_02、配置文件logback-spring-xml" tabindex="-1"><a class="header-anchor" href="#_02、配置文件logback-spring-xml" aria-hidden="true">#</a> 02、配置文件logback-spring.xml</h3><p><code>SpringBoot</code>工程自带<code>logback</code>和<code>slf4j</code>的依赖，所以重点放在编写配置文件上，需要引入什么依赖，日志依赖冲突统统都不需要我们管了。<code>logback</code>框架会默认加载<code>classpath</code>下命名为<code>logback-spring</code>或<code>logback</code>的配置文件。将所有日志都存储在一个文件中文件大小也随着应用的运行越来越大并且不好排查问题，正确的做法应该是将<code>error</code>日志和其他日志分开，并且不同级别的日志根据时间段进行记录存储。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logback.properties<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CONSOLE-LOG<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.PatternLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>[%d{yyyy-MM-dd&#39; &#39;HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--获取比info级别高(包括info级别)但除error级别的日志--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INFO-LOG<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.filter.LevelFilter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">&gt;</span></span>ERROR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMatch</span><span class="token punctuation">&gt;</span></span>DENY<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMatch</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMismatch</span><span class="token punctuation">&gt;</span></span>ACCEPT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMismatch</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>[%d{yyyy-MM-dd&#39; &#39;HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!--滚动策略--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--路径--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>\${LOG_INFO_HOME}//%d.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxHistory</span><span class="token punctuation">&gt;</span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxHistory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ERROR-LOG<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.filter.ThresholdFilter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">&gt;</span></span>ERROR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>[%d{yyyy-MM-dd&#39; &#39;HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--滚动策略--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--路径--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>\${LOG_ERROR_HOME}//%d.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxHistory</span><span class="token punctuation">&gt;</span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxHistory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CONSOLE-LOG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INFO-LOG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ERROR-LOG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>部分标签说明</p><p><code>&lt;root&gt;</code>标签，必填标签，用来指定最基础的日志输出级别</p><ul><li><code>&lt;appender-ref&gt;</code>标签，添加<code>append</code></li></ul><p><code>&lt;append&gt;</code>标签，通过使用该标签指定日志的收集策略</p><ul><li><code>name</code>属性指定<code>appender</code>命名</li><li><code>class</code>属性指定输出策略，通常有两种，控制台输出和文件输出，文件输出就是将日志进行一个持久化。<code>ConsoleAppender</code>将日志输出到控制台</li></ul><p><code>&lt;filter&gt;</code>标签，通过使用该标签指定过滤策略</p><ul><li><code>&lt;level&gt;</code>标签指定过滤的类型</li></ul><p><code>&lt;encoder&gt;</code>标签，使用该标签下的<code>&lt;pattern&gt;</code>标签指定日志输出格式。</p><p><code>&lt;rollingPolicy&gt;</code>标签指定收集策略，比如基于时间进行收集</p><ul><li><code>&lt;fileNamePattern&gt;</code>标签指定生成日志保存地址 通过这样配置已经实现了分类分天手机日志的目标了</li></ul><figure><img src="https://static.xlc520.tk/blogImage/640-16556915204025.jpeg" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h3 id="_03、logback-高级特性异步输出日志" tabindex="-1"><a class="header-anchor" href="#_03、logback-高级特性异步输出日志" aria-hidden="true">#</a> 03、logback 高级特性异步输出日志</h3><p>之前的日志配置方式是基于同步的，每次日志输出到文件都会进行一次磁盘IO。采用异步写日志的方式而不让此次写日志发生磁盘IO，阻塞线程从而造成不必要的性能损耗。异步输出日志的方式很简单，添加一个基于异步写日志的<code>appender</code>，并指向原先配置的<code>appender</code>即可</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token comment">&lt;!-- 异步输出 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ASYNC-INFO<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.AsyncAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>discardingThreshold</span><span class="token punctuation">&gt;</span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>discardingThreshold</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>queueSize</span><span class="token punctuation">&gt;</span></span>256<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>queueSize</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 添加附加的appender,最多只能添加一个 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>INFO-LOG<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ASYNC-ERROR<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.AsyncAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>discardingThreshold</span><span class="token punctuation">&gt;</span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>discardingThreshold</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>queueSize</span><span class="token punctuation">&gt;</span></span>256<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>queueSize</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 添加附加的appender,最多只能添加一个 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ERROR-LOG<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_04、异步输出日志性能测试" tabindex="-1"><a class="header-anchor" href="#_04、异步输出日志性能测试" aria-hidden="true">#</a> 04、异步输出日志性能测试</h3><p>既然能提高性能的话，必须进行一次测试比对，同步和异步输出日志性能到底能提升多少倍？</p><h3 id="_05、服务器硬件" tabindex="-1"><a class="header-anchor" href="#_05、服务器硬件" aria-hidden="true">#</a> 05、服务器硬件</h3><ul><li><code>CPU</code> 六核</li><li>内存 8G</li></ul><h3 id="_06、测试工具" tabindex="-1"><a class="header-anchor" href="#_06、测试工具" aria-hidden="true">#</a> 06、测试工具</h3><ul><li>Apache Jmeter</li></ul><h3 id="_07、同步输出日志" tabindex="-1"><a class="header-anchor" href="#_07、同步输出日志" aria-hidden="true">#</a> 07、同步输出日志</h3><ul><li>线程数：100</li><li><code>Ramp-Up Loop</code>(可以理解为启动线程所用时间) ：0 可以理解为100个线程同时启用</li><li>测试结果</li></ul><figure><img src="https://static.xlc520.tk/blogImage/640-16556915204021.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>重点关注指标 Throughput【TPS】 吞吐量：系统在单位时间内处理请求的数量，在同步输出日志中 TPS 为 44.2/sec</p><h3 id="_08、异步输出日志" tabindex="-1"><a class="header-anchor" href="#_08、异步输出日志" aria-hidden="true">#</a> 08、异步输出日志</h3><ul><li>线程数 100</li><li><code>Ramp-Up Loop</code>：0</li><li>测试结果</li></ul><figure><img src="https://static.xlc520.tk/blogImage/640-16556915204022.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>TPS 为 497.5/sec ， 性能提升了10多倍！！！</p><h3 id="_09、异步日志输出原理" tabindex="-1"><a class="header-anchor" href="#_09、异步日志输出原理" aria-hidden="true">#</a> 09、异步日志输出原理</h3><p>从<code>logback</code>框架下的<code>Logger.info</code>方法开始追踪。一路的方法调用路径如下图所示：</p><figure><img src="https://static.xlc520.tk/blogImage/640-16556915204023.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>异步输出日志中最关键的就是配置文件中<code>ch.qos.logback.classic\`\`AsyncAppenderBase\`\`append</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//来自阿里大佬的《LeetCode刷题答案》pdf新鲜出炉
//年末面试必备！大家可以关注公众号TJ君，回复LeetCode领取。

protected void append(E eventObject) {
        if(!this.isQueueBelowDiscardingThreshold() || !this.isDiscardable(eventObject)) {
            this.preprocess(eventObject);
            this.put(eventObject);
        }
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过队列情况判断是否需要丢弃日志，不丢弃的话将它放到阻塞队列中，通过查看代码，这个阻塞队列为<code>ArrayBlockingQueueu</code>，默认大小为256，可以通过配置文件进行修改。<code>Logger.info(...)</code>到<code>append(...)</code>就结束了，只做了将日志塞入到阻塞队列的事，然后继续执行<code>Logger.info(...)</code>下面的语句了。在<code>AsyncAppenderBase</code>类中定义了一个<code>Worker</code>线程，<code>run</code>方法中的关键部分代码如下:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>E e = parent.blockingQueue.take();
aai.appendLoopOnAppenders(e);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>从阻塞队列中取出一个日志，并调用<code>AppenderAttachableImpl</code>类中的<code>appendLoopOnAppenders</code>方法维护一个<code>Append</code>列表。<code>Worker</code>线程中调用方法过程主要如下图：</p><figure><img src="https://static.xlc520.tk/blogImage/640-16556915204024.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>最主要的两个方法就是<code>encode\`\`write\`\`encode</code></p>`,44),d={href:"https://juejin.cn/post/6844903909920604174",target:"_blank",rel:"noopener noreferrer"};function k(r,g){const s=p("ExternalLinkIcon");return e(),c("div",null,[u,n("p",null,[a("来源："),n("a",d,[a("https://juejin.cn/post/6844903909920604174"),o(s)])])])}const b=t(i,[["render",k],["__file","Logback 配置文件优化.html.vue"]]);export{b as default};
