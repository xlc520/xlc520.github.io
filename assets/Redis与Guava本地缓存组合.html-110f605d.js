const e=JSON.parse('{"key":"v-9b54dbf2","path":"/dev/Redis%E4%B8%8EGuava%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E7%BB%84%E5%90%88.html","title":"Redis与Guava本地缓存组合","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Redis与Guava本地缓存组合","description":"Redis与Guava本地缓存组合 Redis与本地缓存组合 前言 我们开发中经常用到Redis作为缓存，将高频数据放在Redis中能够提高业务性能，降低MySQL等关系型数据库压力，甚至一些系统使用Redis进行数据持久化，Redis松散的文档结构非常适合业务系统开发，在精确查询，数据统计业务有着很大的优势。但是高频数据流处理系统中，Redis的压力也会很大，同时I/0开销才是耗时的主要原因，这时候为了降低Redis读写压力我们可以用到本地缓存，Guava为我们提供了优秀的本地缓存API，包含了过期策略等等，编码难度低，个人非常推荐。","date":"2023-01-24T00:00:00.000Z","category":"Java","tag":["Java","Redis","Guava"],"article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/Redis%E4%B8%8EGuava%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98%E7%BB%84%E5%90%88.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"Redis与Guava本地缓存组合"}],["meta",{"property":"og:description","content":"Redis与Guava本地缓存组合 Redis与本地缓存组合 前言 我们开发中经常用到Redis作为缓存，将高频数据放在Redis中能够提高业务性能，降低MySQL等关系型数据库压力，甚至一些系统使用Redis进行数据持久化，Redis松散的文档结构非常适合业务系统开发，在精确查询，数据统计业务有着很大的优势。但是高频数据流处理系统中，Redis的压力也会很大，同时I/0开销才是耗时的主要原因，这时候为了降低Redis读写压力我们可以用到本地缓存，Guava为我们提供了优秀的本地缓存API，包含了过期策略等等，编码难度低，个人非常推荐。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T15:10:28.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:tag","content":"Guava"}],["meta",{"property":"article:published_time","content":"2023-01-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T15:10:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis与Guava本地缓存组合\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-01T15:10:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"设计示例","slug":"设计示例","link":"#设计示例","children":[]},{"level":2,"title":"Redis懒加载缓存","slug":"redis懒加载缓存","link":"#redis懒加载缓存","children":[{"level":3,"title":"流程图","slug":"流程图","link":"#流程图","children":[]},{"level":3,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[]},{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"Redis结合本地缓存","slug":"redis结合本地缓存","link":"#redis结合本地缓存","children":[{"level":3,"title":"流程图","slug":"流程图-1","link":"#流程图-1","children":[]},{"level":3,"title":"业务场景","slug":"业务场景","link":"#业务场景","children":[]},{"level":3,"title":"代码示例","slug":"代码示例-1","link":"#代码示例-1","children":[]},{"level":3,"title":"优点","slug":"优点-1","link":"#优点-1","children":[]},{"level":3,"title":"缺点","slug":"缺点-1","link":"#缺点-1","children":[]},{"level":3,"title":"总结","slug":"总结-1","link":"#总结-1","children":[]}]},{"level":2,"title":"后记","slug":"后记","link":"#后记","children":[]}],"git":{"createdTime":1674630842000,"updatedTime":1690902628000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":3}]},"readingTime":{"minutes":6.51,"words":1952},"filePathRelative":"dev/Redis与Guava本地缓存组合.md","localizedDate":"2023年1月24日","excerpt":"<h1> Redis与Guava本地缓存组合</h1>\\n<figure><img src=\\"https://static.linch.eu.org/blogImage/98d8c80f6ae24256832ae271c74d81f2tplv-k3u1fbpfcp-zoom-crop-mark3024302430241702.webp\\" alt=\\"Redis与本地缓存组合\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>Redis与本地缓存组合</figcaption></figure>\\n<h2> 前言</h2>\\n<ul>\\n<li>我们开发中经常用到Redis作为缓存，将高频数据放在Redis中能够提高业务性能，降低MySQL等关系型数据库压力，甚至一些系统使用Redis进行数据持久化，Redis松散的文档结构非常适合业务系统开发，在精确查询，数据统计业务有着很大的优势。但是高频数据流处理系统中，Redis的压力也会很大，同时I/0开销才是耗时的主要原因，这时候为了降低Redis读写压力我们可以用到本地缓存，Guava为我们提供了优秀的本地缓存API，包含了过期策略等等，编码难度低，个人非常推荐。</li>\\n</ul>","autoDesc":true}');export{e as data};
