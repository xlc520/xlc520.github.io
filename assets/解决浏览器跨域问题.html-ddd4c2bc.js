import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,a as t}from"./app-4a6db5be.js";const i={},n=t(`<h1 id="解决浏览器跨域问题" tabindex="-1"><a class="header-anchor" href="#解决浏览器跨域问题" aria-hidden="true">#</a> 解决浏览器跨域问题</h1><p>使用谷歌打开，报了如下跨域问题</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>Access to XMLHttpRequest at &#39;http://***:19196/OpenDevice&amp;t=0.8008294784459418&#39; from origin &#39;http://**.cn&#39; has been blocked by CORS policy: The request client is not a secure context and the resource is in more-private address space \`local\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>刚开始想着是代码出现了问题，但是我用360浏览器发现正常使用，没有出现跨域问题，于是查了相关资料，最终发现是升级了谷歌浏览器后配置出现了问题。</p><p>解决方法如下</p><p>进入谷歌浏览器，在网址栏输入下方路径访问</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>chrome://flags/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接着输入下方关键词查询</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>Block insecure private network requests
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询后，修改为“Disabled”，并Relaunch重新启动下，点击后会自动重启浏览器。</p><p>重启后，就解决了此跨域问题。</p>`,11),l=[n];function r(c,d){return a(),s("div",null,l)}const m=e(i,[["render",r],["__file","解决浏览器跨域问题.html.vue"]]);export{m as default};
