import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as t,a as e}from"./app-4a6db5be.js";const o={},p=e('<h1 id="_4-composition-api-vs-option-api" tabindex="-1"><a class="header-anchor" href="#_4-composition-api-vs-option-api" aria-hidden="true">#</a> 4. Composition API VS Option API</h1><h2 id="_1-option-api的问题" tabindex="-1"><a class="header-anchor" href="#_1-option-api的问题" aria-hidden="true">#</a> 1) Option API的问题</h2><ul><li>在传统的Vue OptionsAPI中，新增或者修改一个需求，就需要分别在data，methods，computed里修改 ，滚动条反复上下移动</li></ul><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f84e4e2c02424d9a99862ade0a2e4114~tplv-k3u1fbpfcp-watermark.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5ac7e20d1784887a826f6360768a368~tplv-k3u1fbpfcp-watermark.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_2-使用compisition-api" tabindex="-1"><a class="header-anchor" href="#_2-使用compisition-api" aria-hidden="true">#</a> 2) 使用Compisition API</h2><p>我们可以更加优雅的组织我们的代码，函数。让相关功能的代码更加有序的组织在一起</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc0be8211fc54b6c941c036791ba4efe~tplv-k3u1fbpfcp-watermark.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cc55165c0e34069a75fe36f8712eb80~tplv-k3u1fbpfcp-watermark.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2c421e5392504ecc94c222057dba338a~tplv-k3u1fbpfcp-watermark.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',10),c=[p];function n(f,r){return a(),t("div",null,c)}const g=i(o,[["render",n],["__file","04_Composition VS Option.html.vue"]]);export{g as default};
