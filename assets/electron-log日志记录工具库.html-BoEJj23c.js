import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as r,b as i,n as o,g as c,r as n,a as d}from"./app-DDjfOKh-.js";const p={};function h(g,e){const l=n("VPBanner"),a=n("Share");return t(),r("div",null,[i(l,o(c({title:"electron-log日志记录工具库",content:"electron-log日志记录工具库",logo:null,color:"var(--banner-text)",background:"rgba(217, 244, 208, 0.5)",actions:[{text:"electron-log日志记录工具库",link:"/js/electron-log日志记录工具库"}]})),null,16),e[0]||(e[0]=d(`<h1 id="electron-log日志记录工具库" tabindex="-1"><a class="header-anchor" href="#electron-log日志记录工具库"><span>electron-log日志记录工具库</span></a></h1><h1 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h1><p>在开发 Electron 应用时，一个可靠的日志记录系统至关重要。它不仅能帮助我们追踪应用运行状态，还能在调试和故障排查时提供宝贵的信息。今天，我们要介绍的是 <code>electron-log</code>，这是一个专为 Electron 应用设计的简单而强大的日志记录模块。</p><h1 id="基本信息" tabindex="-1"><a class="header-anchor" href="#基本信息"><span>基本信息</span></a></h1><ul><li><strong>Github</strong>：https://github.com/megahertz/electron-log</li><li><strong>Stars</strong>：1.3k</li><li><strong>类别</strong>：日志工具</li></ul><h1 id="什么是-electron-log" tabindex="-1"><a class="header-anchor" href="#什么是-electron-log"><span>什么是 electron-log？</span></a></h1><p>electron-log 是一个简单易用的日志记录模块，专为 Electron、Node.js 和 NW.js 应用设计。它没有复杂的配置，也不依赖任何外部库，可以轻松集成到你的项目中。electron-log 默认将日志写入特定位置，确保你能方便地查看和管理应用日志。</p><h1 id="主要特点" tabindex="-1"><a class="header-anchor" href="#主要特点"><span>主要特点</span></a></h1><ul><li><strong>跨平台支持</strong>：适用于 Linux、macOS 和 Windows 系统。</li><li><strong>简单集成</strong>：无需复杂配置，易于在项目中使用。</li><li><strong>多进程支持</strong>：可在主进程和渲染进程中使用。</li><li><strong>灵活的传输选项</strong>：支持控制台、文件、IPC 和远程日志记录。</li><li><strong>自定义选项</strong>：可以自定义日志格式、级别和存储位置。</li></ul><h1 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h1><ul><li><strong>应用调试</strong>：在开发过程中记录关键信息，方便调试。</li><li><strong>错误追踪</strong>：捕获并记录未处理的错误和被拒绝的 Promise。</li><li><strong>用户行为分析</strong>：记录用户操作和应用状态，用于分析和改进。</li><li><strong>性能监控</strong>：记录应用性能指标，帮助优化应用。</li></ul><h1 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手"><span>快速上手</span></a></h1><p>要在你的 Electron 项目中使用 electron-log，只需以下简单步骤：</p><ol><li>安装 electron-log</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm install electron-log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>在主进程中使用</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>import log from &#39;electron-log/main&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 初始化日志记录器（可选，用于渲染进程）</span></span>
<span class="line"><span>log.initialize();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>log.info(&#39;来自主进程的日志&#39;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>在渲染进程中使用</li></ol><p>如果使用打包工具：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>import log from &#39;electron-log/renderer&#39;;</span></span>
<span class="line"><span>log.info(&#39;来自渲染进程的日志&#39;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>不使用打包工具时，可以使用全局变量 <code>__electronLog</code>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>__electronLog.info(&#39;来自渲染进程的日志&#39;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>自定义日志级别和格式</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>log.transports.file.level = &#39;info&#39;;</span></span>
<span class="line"><span>log.transports.file.format = &#39;[{y}-{m}-{d} {h}:{i}:{s}.{ms}] [{level}] {text}&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>捕获未处理的错误</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>log.errorHandler.startCatching();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h1><p>electron-log 是一个功能强大且易于使用的日志记录工具，特别适合 Electron 应用开发。它提供了灵活的配置选项，让你可以根据需求自定义日志记录行为。无论是在开发阶段的调试，还是在生产环境中的错误追踪，electron-log 都能为你提供可靠的支持。</p>`,28)),i(a,{colorful:"",service:"email,qq,qzone,qrcode,weibo,telegram,twitter"})])}const u=s(p,[["render",h],["__file","electron-log日志记录工具库.html.vue"]]),v=JSON.parse('{"path":"/js/electron-log%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%B7%A5%E5%85%B7%E5%BA%93.html","title":"electron-log日志记录工具库","lang":"zh-CN","frontmatter":{"title":"electron-log日志记录工具库","excerpt":null,"description":"electron-log日志记录工具库","date":"2024-10-11T00:00:00.000Z","category":"js","tag":"js","author":"xlc520","article":true,"timeline":true,"icon":"javascript","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/js/electron-log%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%B7%A5%E5%85%B7%E5%BA%93.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"electron-log日志记录工具库"}],["meta",{"property":"og:description","content":"electron-log日志记录工具库"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-15T14:38:03.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:published_time","content":"2024-10-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-15T14:38:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"electron-log日志记录工具库\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-15T14:38:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[],"git":{"createdTime":1731681483000,"updatedTime":1731681483000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":2.52,"words":756},"filePathRelative":"js/electron-log日志记录工具库.md","localizedDate":"2024年10月11日","excerpt":""}');export{u as comp,v as data};
