import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,a as t}from"./app-DWXdHMII.js";const h={};function l(n,i){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="清理-docker-镜像" tabindex="-1"><a class="header-anchor" href="#清理-docker-镜像"><span>清理 Docker 镜像</span></a></h1><p>在日常开发和维护工作中，Docker 镜像管理是一件既繁复又必要的工作。镜像积累如山，不仅占用宝贵的磁盘空间，还可能给我们的工作带来不便。今天，就让我带大家深入了解如何高效清理 Docker 镜像，保持我们的开发环境干净整洁。</p><h3 id="_1-查看镜像并评估" tabindex="-1"><a class="header-anchor" href="#_1-查看镜像并评估"><span>1.查看镜像并评估</span></a></h3><p>首先，我们需要知道自己的“战场”：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>-a</code> 参数会列出所有镜像，包括中间层镜像。检查一下这些镜像，评估哪些是必要的，哪些是可以删除的。</p><h3 id="_2-删除指定镜像" tabindex="-1"><a class="header-anchor" href="#_2-删除指定镜像"><span>2.删除指定镜像</span></a></h3><p>对于不再需要的镜像，我们可以使用它们的 ID、仓库名或标签来删除：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [镜像ID或仓库名:标签]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-批量删除无用镜像" tabindex="-1"><a class="header-anchor" href="#_3-批量删除无用镜像"><span>3.批量删除无用镜像</span></a></h3><p>清理所有悬挂（即无标签）镜像，这些通常是构建过程中留下的：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prune</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>加上 <code>-a</code> 参数，可以删除所有未被容器引用的镜像：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prune</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-清理特定时间前的镜像" tabindex="-1"><a class="header-anchor" href="#_4-清理特定时间前的镜像"><span>4.清理特定时间前的镜像</span></a></h3><p>当我们需要清理一定时间之前的镜像时，可以使用过滤器：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prune</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --filter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;until=168h&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>上面的命令会删除所有创建时间超过 168 小时（7 天）的镜像。</p><h3 id="_5-按照大小排序" tabindex="-1"><a class="header-anchor" href="#_5-按照大小排序"><span>5.按照大小排序</span></a></h3><p>有时候，我们想优先删除体积较大的镜像来快速释放空间：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --format</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{{.Size}}\\t{{.Repository}}:{{.Tag}}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -hr</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样我们可以直观地看到哪些镜像占用空间较大，然后手动删除。</p><h3 id="_6-使用脚本自动化" tabindex="-1"><a class="header-anchor" href="#_6-使用脚本自动化"><span>6.使用脚本自动化</span></a></h3><p>如果有一系列复杂的清理规则，我们可以编写一个简单的脚本来自动化这个过程。比如：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 清理所有未使用的镜像和容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> system</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prune</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -af</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除所有1.0版本开头的镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;1.0&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $3}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xargs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-定时自动清理" tabindex="-1"><a class="header-anchor" href="#_7-定时自动清理"><span>7.定时自动清理</span></a></h3><p>利用 cron 定时任务，可以设定周期性清理工作：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 每天凌晨两点执行清理</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /path/to/your/script.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-删除特定模式的镜像" tabindex="-1"><a class="header-anchor" href="#_8-删除特定模式的镜像"><span>8.删除特定模式的镜像</span></a></h3><p>对于复杂的模式匹配，我们可以使用更精细的 grep 命令：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;仓库名.*1.0&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $3}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xargs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>记得替换 &#39;仓库名&#39; 为你的实际仓库名。</p>`,32)]))}const d=s(h,[["render",l],["__file","清理Docker镜像.html.vue"]]),p=JSON.parse('{"path":"/dev/%E6%B8%85%E7%90%86Docker%E9%95%9C%E5%83%8F.html","title":"清理Docker镜像","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"清理Docker镜像","excerpt":null,"description":"清理 Docker 镜像 在日常开发和维护工作中，Docker 镜像管理是一件既繁复又必要的工作。镜像积累如山，不仅占用宝贵的磁盘空间，还可能给我们的工作带来不便。今天，就让我带大家深入了解如何高效清理 Docker 镜像，保持我们的开发环境干净整洁。 1.查看镜像并评估 首先，我们需要知道自己的“战场”： -a 参数会列出所有镜像，包括中间层镜像。检...","date":"2023-11-29T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/%E6%B8%85%E7%90%86Docker%E9%95%9C%E5%83%8F.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"清理Docker镜像"}],["meta",{"property":"og:description","content":"清理 Docker 镜像 在日常开发和维护工作中，Docker 镜像管理是一件既繁复又必要的工作。镜像积累如山，不仅占用宝贵的磁盘空间，还可能给我们的工作带来不便。今天，就让我带大家深入了解如何高效清理 Docker 镜像，保持我们的开发环境干净整洁。 1.查看镜像并评估 首先，我们需要知道自己的“战场”： -a 参数会列出所有镜像，包括中间层镜像。检..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-11-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"清理Docker镜像\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":3,"title":"1.查看镜像并评估","slug":"_1-查看镜像并评估","link":"#_1-查看镜像并评估","children":[]},{"level":3,"title":"2.删除指定镜像","slug":"_2-删除指定镜像","link":"#_2-删除指定镜像","children":[]},{"level":3,"title":"3.批量删除无用镜像","slug":"_3-批量删除无用镜像","link":"#_3-批量删除无用镜像","children":[]},{"level":3,"title":"4.清理特定时间前的镜像","slug":"_4-清理特定时间前的镜像","link":"#_4-清理特定时间前的镜像","children":[]},{"level":3,"title":"5.按照大小排序","slug":"_5-按照大小排序","link":"#_5-按照大小排序","children":[]},{"level":3,"title":"6.使用脚本自动化","slug":"_6-使用脚本自动化","link":"#_6-使用脚本自动化","children":[]},{"level":3,"title":"7.定时自动清理","slug":"_7-定时自动清理","link":"#_7-定时自动清理","children":[]},{"level":3,"title":"8.删除特定模式的镜像","slug":"_8-删除特定模式的镜像","link":"#_8-删除特定模式的镜像","children":[]}],"git":{"createdTime":1701949796000,"updatedTime":1714224756000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":2.06,"words":618},"filePathRelative":"dev/清理Docker镜像.md","localizedDate":"2023年11月29日","excerpt":"\\n<p>在日常开发和维护工作中，Docker 镜像管理是一件既繁复又必要的工作。镜像积累如山，不仅占用宝贵的磁盘空间，还可能给我们的工作带来不便。今天，就让我带大家深入了解如何高效清理\\nDocker 镜像，保持我们的开发环境干净整洁。</p>","autoDesc":true}');export{d as comp,p as data};
