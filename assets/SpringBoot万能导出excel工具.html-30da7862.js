const t=JSON.parse('{"key":"v-c806807e","path":"/dev/SpringBoot%E4%B8%87%E8%83%BD%E5%AF%BC%E5%87%BAexcel%E5%B7%A5%E5%85%B7.html","title":"SpringBoot万能导出excel工具","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"SpringBoot万能导出excel工具","description":"SpringBoot万能导出excel工具 类是不确定的 ，User ？Student ? District ? 不确定。 但是呢我们封装出来的函数，要足够支撑不同的类，我们自动去读取遍历list ，然后导出生成文件。 核心的思路是什么 ？ 其实就还是利用csv文件的内容格式本质 ，看这两幅图 ： 图片","date":"2023-02-25T00:00:00.000Z","category":"Java","tag":["Java","SpringBoot"],"article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/SpringBoot%E4%B8%87%E8%83%BD%E5%AF%BC%E5%87%BAexcel%E5%B7%A5%E5%85%B7.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"SpringBoot万能导出excel工具"}],["meta",{"property":"og:description","content":"SpringBoot万能导出excel工具 类是不确定的 ，User ？Student ? District ? 不确定。 但是呢我们封装出来的函数，要足够支撑不同的类，我们自动去读取遍历list ，然后导出生成文件。 核心的思路是什么 ？ 其实就还是利用csv文件的内容格式本质 ，看这两幅图 ： 图片"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-22T03:29:32.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:published_time","content":"2023-02-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-22T03:29:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot万能导出excel工具\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-22T03:29:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"核心的思路是什么 ？","slug":"核心的思路是什么","link":"#核心的思路是什么","children":[]},{"level":2,"title":"1.依赖","slug":"_1-依赖","link":"#_1-依赖","children":[]},{"level":2,"title":"2. 核心的工具类，函数我都封装好了","slug":"_2-核心的工具类-函数我都封装好了","link":"#_2-核心的工具类-函数我都封装好了","children":[{"level":3,"title":"代码注意点（各种小封装）：","slug":"代码注意点-各种小封装","link":"#代码注意点-各种小封装","children":[]},{"level":3,"title":"测试代码：","slug":"测试代码","link":"#测试代码","children":[]}]},{"level":2,"title":"扩展","slug":"扩展","link":"#扩展","children":[]}],"git":{"createdTime":1677398552000,"updatedTime":1692674972000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":5}]},"readingTime":{"minutes":4.89,"words":1467},"filePathRelative":"dev/SpringBoot万能导出excel工具.md","localizedDate":"2023年2月25日","excerpt":"<h1> SpringBoot万能导出excel工具</h1>\\n<blockquote>\\n<p>类是不确定的 ，User ？Student ?  District ?  不确定。</p>\\n<p>但是呢我们封装出来的函数，要足够支撑不同的类，我们自动去读取遍历list ，然后导出生成文件。</p>\\n</blockquote>\\n<h2> <strong>核心的思路是什么 ？</strong></h2>\\n<p>其实就还是利用csv文件的内容格式本质 ，看这两幅图 ：</p>\\n<figure><img src=\\"https://static.xlc520.tk/blogImage/640-1677318316796-0.png\\" alt=\\"图片\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>图片</figcaption></figure>","autoDesc":true}');export{t as data};
