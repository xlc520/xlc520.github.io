const n=JSON.parse(`{"key":"v-16e4cf3e","path":"/study/vue3_quick_study/chapter4/03_%E6%89%8B%E5%86%99%E7%BB%84%E5%90%88API.html","title":"手写组合API","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"手写组合API","description":"3. 手写组合API 1) shallowReactive 与 reactive 2) shallowRef 与 ref 3) shallowReadonly 与 readonly 4) isRef, isReactive 与 isReadonly ","date":"2022-08-01T00:00:00.000Z","category":"Vue","tag":"Vue","article":true,"dateline":true,"icon":"vue","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/study/vue3_quick_study/chapter4/03_%E6%89%8B%E5%86%99%E7%BB%84%E5%90%88API.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"手写组合API"}],["meta",{"property":"og:description","content":"3. 手写组合API 1) shallowReactive 与 reactive 2) shallowRef 与 ref 3) shallowReadonly 与 readonly 4) isRef, isReactive 与 isReadonly "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T09:41:05.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2022-08-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T09:41:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手写组合API\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T09:41:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"1) shallowReactive 与 reactive","slug":"_1-shallowreactive-与-reactive","link":"#_1-shallowreactive-与-reactive","children":[]},{"level":2,"title":"2) shallowRef 与 ref","slug":"_2-shallowref-与-ref","link":"#_2-shallowref-与-ref","children":[]},{"level":2,"title":"3) shallowReadonly 与 readonly","slug":"_3-shallowreadonly-与-readonly","link":"#_3-shallowreadonly-与-readonly","children":[]},{"level":2,"title":"4) isRef, isReactive 与 isReadonly","slug":"_4-isref-isreactive-与-isreadonly","link":"#_4-isref-isreactive-与-isreadonly","children":[]}],"git":{"createdTime":1668948234000,"updatedTime":1678873265000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":2.13,"words":640},"filePathRelative":"study/vue3_quick_study/chapter4/03_手写组合API.md","localizedDate":"2022年8月1日","excerpt":"\\n<h2>1) shallowReactive 与 reactive</h2>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> reactiveHandler <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">get</span> <span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>key<span class=\\"token operator\\">===</span><span class=\\"token string\\">'_is_reactive'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span>\\n\\n    <span class=\\"token keyword\\">return</span> Reflect<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n\\n  <span class=\\"token function\\">set</span> <span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">,</span> value<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> result <span class=\\"token operator\\">=</span> Reflect<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">,</span> value<span class=\\"token punctuation\\">)</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'数据已更新, 去更新界面'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> result\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n\\n  <span class=\\"token function\\">deleteProperty</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">target<span class=\\"token punctuation\\">,</span> key</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> result <span class=\\"token operator\\">=</span> Reflect<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">deleteProperty</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'数据已删除, 去更新界面'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> result\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">/* \\n自定义shallowReactive\\n*/</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">shallowReactive</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">obj</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Proxy</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">,</span> reactiveHandler<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">/* \\n自定义reactive\\n*/</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">reactive</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">target</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>target <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token keyword\\">typeof</span> target<span class=\\"token operator\\">===</span><span class=\\"token string\\">'object'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>target <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">// 数组</span>\\n      target<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">item<span class=\\"token punctuation\\">,</span> index</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        target<span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">reactive</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">// 对象</span>\\n      Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">keys</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">key</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        target<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">reactive</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">const</span> proxy <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Proxy</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">,</span> reactiveHandler<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> proxy\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">return</span> target\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n<span class=\\"token comment\\">/* 测试自定义shallowReactive */</span>\\n<span class=\\"token keyword\\">const</span> proxy <span class=\\"token operator\\">=</span> <span class=\\"token function\\">shallowReactive</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">a</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">b</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">3</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\nproxy<span class=\\"token punctuation\\">.</span>a <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token literal-property property\\">b</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// 劫持到了</span>\\nproxy<span class=\\"token punctuation\\">.</span>a<span class=\\"token punctuation\\">.</span>b <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span> <span class=\\"token comment\\">// 没有劫持到</span>\\n\\n\\n<span class=\\"token comment\\">/* 测试自定义reactive */</span>\\n<span class=\\"token keyword\\">const</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">a</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'abc'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">b</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">{</span><span class=\\"token literal-property property\\">x</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">c</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span><span class=\\"token literal-property property\\">x</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">11</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">const</span> proxy <span class=\\"token operator\\">=</span> <span class=\\"token function\\">reactive</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>proxy<span class=\\"token punctuation\\">)</span>\\nproxy<span class=\\"token punctuation\\">.</span>b<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">+=</span> <span class=\\"token number\\">1</span>\\nproxy<span class=\\"token punctuation\\">.</span>c<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+=</span> <span class=\\"token number\\">1</span>\\n</code></pre></div>","autoDesc":true}`);export{n as data};
