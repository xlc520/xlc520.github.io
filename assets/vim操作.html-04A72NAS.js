import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,a as t}from"./app-BRQZ0-Iq.js";const l={},g=t(`<h1 id="vim操作" tabindex="-1"><a class="header-anchor" href="#vim操作"><span><code>vim</code>操作</span></a></h1><p>本教程并不是单纯的<code>vim</code>操作介绍，更多的是与<code>Intellj Idea</code>进行配合。需要同时具备<code>Intellj Idea</code>和<code>vim</code>使用基础的同学学习。</p><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1 简介</span></a></h2><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-0.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="_2-安装" tabindex="-1"><a class="header-anchor" href="#_2-安装"><span>2 安装</span></a></h2><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-1.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>在<code>Intellj Idea</code>中 安装以下三个插件</p><ul><li><p><code>IdeaVim</code></p></li><li><p><code>IdeaVim-EasyMotion</code></p></li><li><p><code>IdeaVimExtension</code></p></li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-2.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>发现图标像上面一样编程一个小方块的时候 就代表插件安装成功</p><h2 id="_3-vim" tabindex="-1"><a class="header-anchor" href="#_3-vim"><span>3 Vim</span></a></h2><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-3.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-4.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>根据我自己的经验总结下来从原生编辑器过度到<code>Vim</code>最不习惯的当属方向键的移动从原本的 方向键变成了<code>hjkl</code></p><p><strong>这个其实没有太多好说的 就是需要克服这一关。多练就行。（下图为 Gif 演示）</strong></p><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-5.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h3 id="练习二-复制-粘贴" tabindex="-1"><a class="header-anchor" href="#练习二-复制-粘贴"><span><strong>练习二：复制 &amp; 粘贴</strong></span></a></h3><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-6.png" alt="图片" loading="lazy"></span></a></h3><p><code>CV</code>大法好，毕竟大家有时候自嘲都是<code>C V</code>工程师 😈 所以 复制 粘贴 还是需要在第一时间学会，这样才能更好的<code>coding</code>💩。</p><ul><li><code>yy</code>复制当前行</li><li><code>p</code>粘贴</li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-7.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h3 id="练习三-在学多一点点" tabindex="-1"><a class="header-anchor" href="#练习三-在学多一点点"><span><strong>练习三：在学多一点点</strong></span></a></h3><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-8.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>在学习一些其他的命令 提交效率。</p><p>y p f h c i</p><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-9.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h4 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span></span></a></h4><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-10.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-11.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>GIF 中步骤如下：</p><ol><li><code>V</code>进入内容选择模式</li><li><code>kkk</code>向上移动 3 行，并进行选中</li><li><code>d</code>删除选中部分</li></ol><h4 id="块级删除「常用」di-da" tabindex="-1"><a class="header-anchor" href="#块级删除「常用」di-da"><span>块级删除「常用」di* da</span></a></h4><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-12.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>di&quot;\`删除\`&quot;\`内的内容，个人感觉这个还是非常常用了。也是初步在效率上优于传统的 intellj idea 的操作方式。如果想要删除之后马上进入插入模式 可以使用\`ci&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-13.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>di(\`删除\`(\`内的内容，如果想要删除之后马上进入插入模式 可以使用\`ci(
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-14.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-15.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-16.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>a</code>在光标之后，进入插入模式</li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-17.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>i</code>在光标之前，进入插入模式</li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-18.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>o</code>在本行之后新增一行，并进入插入模式</li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-19.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>A</code>在本行结尾，进入插入模式</li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-20.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>I</code>在本行开头，进入插入模式</li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-21.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>O</code>在本行之前新增一行，并进入插入模式</li></ul><h3 id="练习四-jump" tabindex="-1"><a class="header-anchor" href="#练习四-jump"><span><strong>练习四：jump</strong></span></a></h3><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-22.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-23.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-24.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>[n]f{word}\`\`f</code>用来查找在<strong>当前行</strong>当前光标后是否存在某个字符<code>{word}</code>如果存在则将光标移动过去。</li><li>如果将这里的 f 改为 F 则是反向查找</li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-25.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>$ | ^\`\`$</code>跳转到行尾<code>^</code>跳转到行首</li></ul><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-26.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><code>%</code>括号匹配跳转<code>() [] {}</code></li></ul><h3 id="练习五-学习一些通用场景" tabindex="-1"><a class="header-anchor" href="#练习五-学习一些通用场景"><span><strong>练习五 学习一些通用场景</strong></span></a></h3><p>其他的比较好用的命令</p><ul><li><code>zo | zc</code></li><li><code>dt{char}</code></li></ul><h2 id="_4-配置" tabindex="-1"><a class="header-anchor" href="#_4-配置"><span>4 配置</span></a></h2><p>在安装了 Vim 之后，其实官方只是给我们了一个基本的架子，能够实现 Vim 的基本操作。如果你想要用的更加顺手，那么你需要对 Vim 进行自己的个性化配置。这是一张白纸，它会被书写成什么样子由你自己决定。</p><p>如何对 Idea 中的 Vim 模块进行配置</p><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062589-27.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>在右下角点击 Vim 图标，然后点击<strong>Open ~/.ideavimrc</strong></p><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062589-28.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062589-29.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062589-30.gif" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>上图中 gif 中演示的就是通过 调用<code>RenameElement</code>Action 重命名变量。</p><p>初步的介绍完<code>Intellj Idea</code>的<code>action</code>之后，下面分享我自己目前在用的几个比较常用的配置，通过快捷键 调用<code>action</code></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>&quot;jk退出insert模式
inoremap jk &lt;ESC&gt;

let mapleader = &#39;\\&lt;space&gt;&#39;
&quot;Idea action 配置
&quot; 重命令元素
nnoremap &lt;Leader&gt;re :action RenameElement&lt;CR&gt;
nnoremap &lt;Leader&gt;gi :action GotoImplementation&lt;CR&gt;
nnoremap &lt;Leader&gt;im :action ImplementMethods&lt;CR&gt;
nnoremap &lt;Leader&gt;rv :action IntroduceVariable&lt;CR&gt;
nnoremap &lt;Leader&gt;cr :action CopyReference&lt;CR&gt;
nnoremap &lt;Leader&gt;em :action ExtractMethod&lt;CR&gt;
nnoremap &lt;Leader&gt;sw :action SurroundWith&lt;CR&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>action list<code>Intellj Idea</code>中只是的所有的<code>action</code>列表</p>`,74),n=[g];function o(s,c){return a(),e("div",null,n)}const p=i(l,[["render",o],["__file","vim操作.html.vue"]]),m=JSON.parse('{"path":"/linux/vim%E6%93%8D%E4%BD%9C.html","title":"vim操作","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"vim操作","excerpt":null,"description":"vim操作 本教程并不是单纯的vim操作介绍，更多的是与Intellj Idea进行配合。需要同时具备Intellj Idea和vim使用基础的同学学习。 1 简介 图片图片 2 安装 图片图片 在Intellj Idea中 安装以下三个插件 IdeaVim IdeaVim-EasyMotion IdeaVimExtension 图片图片 发现图标像上...","date":"2024-03-06T00:00:00.000Z","category":"Linux","tag":"Linux","article":true,"timeline":true,"icon":"linux","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/linux/vim%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"vim操作"}],["meta",{"property":"og:description","content":"vim操作 本教程并不是单纯的vim操作介绍，更多的是与Intellj Idea进行配合。需要同时具备Intellj Idea和vim使用基础的同学学习。 1 简介 图片图片 2 安装 图片图片 在Intellj Idea中 安装以下三个插件 IdeaVim IdeaVim-EasyMotion IdeaVimExtension 图片图片 发现图标像上..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-0.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2024-03-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vim操作\\",\\"image\\":[\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-0.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-1.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-2.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-3.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-4.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-5.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-6.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-7.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-8.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-9.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062587-10.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-11.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-12.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-13.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-14.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-15.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-16.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-17.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-18.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-19.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-20.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-21.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-22.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-23.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-24.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-25.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062588-26.gif\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062589-27.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062589-28.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062589-29.png\\",\\"https://bitbucket.org/xlc520/blogasset/raw/main/images3/640-1709691062589-30.gif\\"],\\"datePublished\\":\\"2024-03-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"1 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2 安装","slug":"_2-安装","link":"#_2-安装","children":[]},{"level":2,"title":"3 Vim","slug":"_3-vim","link":"#_3-vim","children":[{"level":3,"title":"练习二：复制 & 粘贴","slug":"练习二-复制-粘贴","link":"#练习二-复制-粘贴","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]},{"level":3,"title":"练习三：在学多一点点","slug":"练习三-在学多一点点","link":"#练习三-在学多一点点","children":[]},{"level":3,"title":"练习四：jump","slug":"练习四-jump","link":"#练习四-jump","children":[]},{"level":3,"title":"练习五 学习一些通用场景","slug":"练习五-学习一些通用场景","link":"#练习五-学习一些通用场景","children":[]}]},{"level":2,"title":"4 配置","slug":"_4-配置","link":"#_4-配置","children":[]}],"git":{"createdTime":1714214949000,"updatedTime":1714224756000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":3.48,"words":1045},"filePathRelative":"linux/vim操作.md","localizedDate":"2024年3月6日","autoDesc":true}');export{p as comp,m as data};
