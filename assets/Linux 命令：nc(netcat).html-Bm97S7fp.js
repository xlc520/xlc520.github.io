import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as i,c as l,b as s,n as c,g as o,a as p}from"./app-BkZy1zYI.js";const d={},r=p(`<p>Linux 命令：nc(netcat)</p><h2 id="_1-写在前面" tabindex="-1"><a class="header-anchor" href="#_1-写在前面"><span>1. 写在前面</span></a></h2><p>本文主要介绍 Linux <code>nc(netcat)</code> 命令: 通过 <code>TCP</code> 或 <code>UDP</code> 协议在两个计算机网络之间读取和写入数据，该命令因系统而异（<code>netcat</code>、<code>nc</code>、<code>ncat</code> 等）。</p><p><code>Netcat</code> 是跨平台的，可用于 Linux、macOS、Windows 和 BSD。可以使用 <code>Netcat</code> 来调试和监控网络连接、端口扫描/监听/重定向、传输数据（读写）、用作代理（TCP、SSH Socks、HTTP）等。</p><p>本文解释了 <code>nc</code> 命令（Netcat OpenBSD 版本），并提供了使用示例。</p><h2 id="_2-如何在-linux-中使用-nc-netcat-命令" tabindex="-1"><a class="header-anchor" href="#_2-如何在-linux-中使用-nc-netcat-命令"><span>2. 如何在 Linux 中使用 nc(netcat) 命令?</span></a></h2><h3 id="_2-1-安装" tabindex="-1"><a class="header-anchor" href="#_2-1-安装"><span>2.1 安装</span></a></h3><p>默认已预装在 macOS 和流行的 Linux 发行版（如 Ubuntu、Debian 或 CentOS）上。若需要安装 <code>netcat</code>工具，请根据 Linux 发行版使用以下命令。</p><ul><li><p>Debian/Ubuntu:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> netcat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>CentOS/RHEL:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token function">nc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Fedora 22+ 和 RHEL 8、9:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> dnf <span class="token function">install</span> <span class="token function">nc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>命令 <code>nc -h</code>，显示 <code>Netcat</code> 的帮助菜单，表明已安装并可以使用。</p><h3 id="_2-2-nc-命令语法" tabindex="-1"><a class="header-anchor" href="#_2-2-nc-命令语法"><span>2.2 nc 命令语法</span></a></h3><p><strong>基本语法:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">nc</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>options<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>host<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>指令组成部分:</strong></p><p>在 Ubuntu 上，<code>nc</code> 和 <code>netcat</code> 命令都是 OpenBSD 版本 Netcat 的符号链接。在 CentOS、Debian 和 RHEL 上，命令是 ncat。</p><ul><li><code>&lt;options&gt;</code> 定义 <code>nc</code> 命令的行为。例如：添加详细输出、设置连接超时等；</li><li><code>&lt;host&gt;</code> IP 地址（如 192.168.0.1）/域名（如 example.com）;</li><li><code>&lt;port&gt;</code> 端口/服务名称，例如：端口 80（HTTP）或端口 22（SSH）连接;</li></ul><p><strong>Netcat 有两种工作模式：</strong></p><ul><li><p>连接模式（Connect mode）：在连接模式下，<code>Netcat</code> 作为客户端工作。该实用程序需要</p><p>和 参数。</p></li><li><p>监听模式（Listen mode）：在监听模式下，<code>Netcat</code> 作为服务器工作。省略</p><p>时，Netcat 会监听指定端口的所有可用地址。</p></li></ul><h3 id="_2-3-netcat-nc-命令选项" tabindex="-1"><a class="header-anchor" href="#_2-3-netcat-nc-命令选项"><span>2.3 Netcat (nc) 命令选项</span></a></h3><p>下表概述了常用的 nc 命令选项：</p><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>-4</td><td>Protocol</td><td>仅使用 IPv4</td></tr><tr><td>-6</td><td>Protocol</td><td>仅使用 IPv6</td></tr><tr><td>-U/--unixsock</td><td>Protocol</td><td>使用 Unix 域套接字</td></tr><tr><td>-u/--udp</td><td>Protocol</td><td>使用 UDP 连接</td></tr><tr><td>-p /--source-port</td><td>Connect mode</td><td>设置本地主机使用的通信端口</td></tr><tr><td>-s /--source</td><td>Connect mode</td><td>设置本地主机送出数据包的IP地址</td></tr><tr><td>-l/--listen</td><td>Listen mode</td><td>监听连接，而不是使用连接模式</td></tr><tr><td>-k/--keep-open</td><td>Listen mode</td><td>保持连接开放，以便同时进行多个连接</td></tr><tr><td>-v/--verbose</td><td>Output</td><td>显示指令执行过程</td></tr><tr><td>-z</td><td>Output</td><td>使用0输入/输出模式，只在扫描通信端口时使用</td></tr></tbody></table><p>该列表并不全面。使用 man 命令查看手册页面以获取完整的选项列表：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev:~<span class="token comment"># man netcat</span>
或
root@dev:~<span class="token comment"># man nc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-nc-命令示例" tabindex="-1"><a class="header-anchor" href="#_3-nc-命令示例"><span>3. nc 命令示例</span></a></h2><p>两台设备均以 Linux Ubuntu 20.04+ 虚拟机的形式运行，但也可以采用其他设备。请注意，不同操作系统的命令有所不同。</p><p>设备1 IP: <code>10.20.3.215</code></p><p>设备2 IP: <code>10.20.2.226</code></p><p>查看IP地址：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~<span class="token comment"># ip addr show ens3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-1-client-server-连接" tabindex="-1"><a class="header-anchor" href="#_3-1-client-server-连接"><span>3.1 Client/Server 连接</span></a></h3><p><code>Client/Server</code> 连接指两个设备之间的连接，一台设备充当服务器（监听），另一台充当客户端（连接）。</p><ul><li><p>在设备1 上，以侦听模式运行 <code>nc</code> 命令，并提供一个端口：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~<span class="token comment"># nc -lv 1234</span>
-----------------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若提示：<code>nc: getnameinfo: Temporary failure in name resolution</code></p><p>可增加 <code>n</code> 参数: <code>nc -lvn 1234</code>，或修改 <code>vi /etc/resolv.conf</code>: <code>nameserver</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~<span class="token comment"># nc -lv 1234</span>
-----------------------------------------------------------------------------
nc: getnameinfo: Temporary failure <span class="token keyword">in</span> name resolution

root@dev1:~<span class="token comment"># nc -lvn 1234</span>
-----------------------------------------------------------------------------
Listening on <span class="token number">0.0</span>.0.0 <span class="token number">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-l:</code> 选项开启监听模式，使 &quot;设备1&quot; 成为服务器; <code>-v:</code> 显示指令执行过程; <code>-n:</code> 直接使用IP地址，而不通过域名服务器;</p></li><li><p>在设备2 上，使用设备1 的 IP 地址和端口运行 <code>nc</code> 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~<span class="token comment"># nc -v 10.20.3.215 1234</span>
-----------------------------------------------------------------------
Connection to <span class="token number">10.20</span>.3.215 <span class="token number">1234</span> port <span class="token punctuation">[</span>tcp/*<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出显示连接成功。设备 1 确认链接并打印设备 2 的 IP 地址。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~<span class="token comment"># nc -lv 1234</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
Connection from <span class="token number">10.20</span>.2.226 <span class="token number">9940</span> received<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Client/Server</code> 成功建立连接。</p></li></ul><h3 id="_3-2-ping-网站上的特定端口" tabindex="-1"><a class="header-anchor" href="#_3-2-ping-网站上的特定端口"><span>3.2 Ping 网站上的特定端口</span></a></h3><p>使用 <code>nc</code> 代替 <code>ping</code> 命令测试网站的特定端口，例如:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~<span class="token comment"># nc -zv bing.com 443</span>
-----------------------------------------------------------------------
Connection to bing.com <span class="token number">443</span> port <span class="token punctuation">[</span>tcp/https<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 <code>ping</code> 成功，输出将显示连接成功信息。<code>-z</code> 选项确保连接不会持续。</p><h3 id="_3-3-扫描端口" tabindex="-1"><a class="header-anchor" href="#_3-3-扫描端口"><span>3.3 扫描端口</span></a></h3><p>使用 <code>nc</code> 命令扫描打开的端口;</p><ul><li><p>在设备1 上运行 <code>nc</code>，监听 1234 端口：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~<span class="token comment"># nc -lkv 1234</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-k</code> 选项可确保连接在断开后保持打开。</p></li><li><p>在设备2 上运行以下命令，检查 1234 端口是否打开：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~<span class="token comment"># nc -zv 10.20.3.215 1234</span>
-----------------------------------------------------------------------
Connection to <span class="token number">10.20</span>.3.215 <span class="token number">1234</span> port <span class="token punctuation">[</span>tcp/*<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果端口已打开，输出将显示连接成功信息。</p></li><li><p>或者，通过添加端口范围来扫描设备 1 上的多个端口。例如:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~<span class="token comment"># nc -zv 10.20.3.215 1230-1235</span>
-----------------------------------------------------------------------
nc: connect to <span class="token number">10.20</span>.3.215 port <span class="token number">1230</span> <span class="token punctuation">(</span>tcp<span class="token punctuation">)</span> failed: Connection refused
nc: connect to <span class="token number">10.20</span>.3.215 port <span class="token number">1231</span> <span class="token punctuation">(</span>tcp<span class="token punctuation">)</span> failed: Connection refused
nc: connect to <span class="token number">10.20</span>.3.215 port <span class="token number">1232</span> <span class="token punctuation">(</span>tcp<span class="token punctuation">)</span> failed: Connection refused
nc: connect to <span class="token number">10.20</span>.3.215 port <span class="token number">1233</span> <span class="token punctuation">(</span>tcp<span class="token punctuation">)</span> failed: Connection refused
Connection to <span class="token number">10.20</span>.3.215 <span class="token number">1234</span> port <span class="token punctuation">[</span>tcp/*<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
nc: connect to <span class="token number">10.20</span>.3.215 port <span class="token number">1235</span> <span class="token punctuation">(</span>tcp<span class="token punctuation">)</span> failed: Connection refused
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果显示每个端口的连接是否成功。</p></li><li><p>扫描端口范围时，使用 <code>grep</code> 过滤结果：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~<span class="token comment"># nc -zv 10.20.3.215 1230-1235 2&gt;&amp;1 | grep &#39;succeeded&#39;</span>
-----------------------------------------------------------------------
Connection to <span class="token number">10.20</span>.3.215 <span class="token number">1234</span> port <span class="token punctuation">[</span>tcp/*<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仅输出显示开放端口。</p></li></ul><h3 id="_3-4-传输数据" tabindex="-1"><a class="header-anchor" href="#_3-4-传输数据"><span>3.4 传输数据</span></a></h3><ul><li><p>设备1， 接受数据</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># nc -l -p 1234 &gt;output.txt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设备2，发送数据</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~/files_destination<span class="token comment"># echo &quot;Hello Wrold&quot; &gt;input.txt</span>
root@dev2:~/files_destination<span class="token comment"># nc 10.20.3.215 1234 &lt;input.txt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>设备1，查看数据</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># nc -l -p 1234 &gt;output.txt</span>
root@dev2:~/files<span class="token comment"># cat output.txt </span>
Hello Wrold
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3-5-传输文件" tabindex="-1"><a class="header-anchor" href="#_3-5-传输文件"><span>3.5 传输文件</span></a></h3><p><code>Netcat</code> 允许通过已建立的连接传输文件。要了解文件传输的工作原理，请执行以下操作：</p><ul><li><p>使用 <code>touch</code> 命令在设备1 上创建样本文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~<span class="token comment"># touch text1.txt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将创建一个空文本文件。</p></li><li><p>在设备1 上创建监听连接，并将文件重定向到 <code>nc</code> 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~<span class="token comment"># nc -lv 1234 &lt; text1.txt</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在设备2 上，连接设备1 并重定向文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~<span class="token comment"># nc -zv 10.20.3.215 1234 &gt; text1.txt</span>
-----------------------------------------------------------------------
Connection to <span class="token number">10.20</span>.3.215 <span class="token number">1234</span> port <span class="token punctuation">[</span>tcp/*<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
root@dev2:~<span class="token comment"># ls</span>
-----------------------------------------------------------------------
text1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>ls</code> 命令，输出显示文件名，表明传输成功。</p></li></ul><h3 id="_3-6-传输目录" tabindex="-1"><a class="header-anchor" href="#_3-6-传输目录"><span>3.6 传输目录</span></a></h3><p><code>Netcat</code> 无法像传输文件那样传输目录。使用 <code>tar</code> 命令打包多个文件或目录，并将该命令导入 <code>Netcat</code>。</p><ul><li><p>在任一设备上创建一个目录并添加多个文件：</p><p>设备1:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1~<span class="token comment"># mkdir files; touch files/file{1..5}.txt</span>

root@dev1:~/files<span class="token comment"># ls</span>
-----------------------------------------------------------------------
file1.txt  file2.txt  file3.txt  file4.txt  file5.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该命令将创建一个包含五个文本文件的目录。</p></li><li><p>使用 <code>cd</code> 命令进入目录</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> files
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>在另一台设备上，创建并进入目标目录：</p><p>设备2</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~<span class="token comment"># mkdir files_destination &amp;&amp; cd files_destination</span>
root@dev2:~/files_destination<span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在 1234 端口创建监听连接，并输入 <code>tar</code> 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~/files_destination<span class="token comment"># nc -lv 1234 | tar xfv -</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听连接，并通过 <code>tar</code> 提取的文件。</p></li><li><p>在另一台设备上，用以下方式发送目录：</p><p>设备1</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># tar -cf - . | nc -v 10.20.2.226 1234</span>
-----------------------------------------------------------------------
Connection to <span class="token number">10.20</span>.2.226 <span class="token number">1234</span> port <span class="token punctuation">[</span>tcp/*<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到连接建立并发送 <code>tar</code> 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~/files_destination<span class="token comment"># nc -lv 1234 | tar xfv -</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
Connection from <span class="token number">10.20</span>.3.215 <span class="token number">23380</span> received<span class="token operator">!</span>
./
./file4.txt
./file1.txt
./file3.txt
./file5.txt
./file2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接收端立即提取文件，传输完成。</p></li></ul><h3 id="_3-7-创建网络服务器" tabindex="-1"><a class="header-anchor" href="#_3-7-创建网络服务器"><span>3.7 创建网络服务器</span></a></h3><p>使用 <code>Netcat</code> 创建网络服务器：</p><ul><li><p>在设备1 上运行网络服务器，并监听 1234 端口的连接：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># nc -lv 1234</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>缺省 IP 地址，网络服务器将在 <code>0.0.0.0</code> 上运行。</p></li><li><p>在设备2 上，浏览器中运行地址和端口,或者使用 curl 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~/files_destination<span class="token comment"># curl 10.20.3.215:1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>页面暂时不显示任何内容。</p></li><li><p>设备1 上，浏览器或 <code>curl</code> 对发送过来的请求可见</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># nc -lv 1234</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
Connection from <span class="token number">10.20</span>.2.226 <span class="token number">50171</span> received<span class="token operator">!</span>
GET / HTTP/1.1
Host: <span class="token number">10.20</span>.3.215:1234
User-Agent: curl/7.58.0
Accept: */*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显示请求信息，如:请求类型、主机和用户代理。</p></li><li><p>要向客户端（设备 2）发送响应，请在设备 1 上粘贴以下代码：</p><p>设备1</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># nc -lv 1234</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
Connection from <span class="token number">10.20</span>.2.226 <span class="token number">50171</span> received<span class="token operator">!</span>
GET / HTTP/1.1
Host: <span class="token number">10.20</span>.3.215:1234
User-Agent: curl/7.58.0
Accept: */*

HTTP/1.1 <span class="token number">200</span> Everything OK
Server: netcat
Content-Type: text/html<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>UTF-8
-----------------------------------------------------------------------
<span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>
Netcat
<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>A webpage served with nc<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>
<span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设备2：回复后会立即更新显示信息；</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~/files_destination<span class="token comment"># curl 10.20.3.215:1234</span>
-----------------------------------------------------------------------
<span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>
Netcat
<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>A webpage served with nc<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>
<span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果通过浏览器访问网络服务器，浏览器页面会实时获取更新信息。 使用 <code>CTRL+C</code> 关闭服务器。</p></li></ul><h3 id="_3-8-简单聊天服务器" tabindex="-1"><a class="header-anchor" href="#_3-8-简单聊天服务器"><span>3.8 简单聊天服务器</span></a></h3><p>利用 <code>Netcat</code> 通信功能创建一个简单的聊天服务器。</p><ul><li><p>在设备1 上运行以下命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># awk -W interactive &#39;$0=&quot;Jp: &quot;$0&#39; | nc -lv 1234</span>
-----------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
awk: option \`-W interactive&#39; unrecognized, ignored
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>awk</code> 命令有助于将用户名(Jp)添加到通过服务器发送的信息中。</p><p><strong>备注：</strong> 若 <code>awk: option </code>-W interactive&#39; unrecognized, ignored\` “awk” 可替换为 “mawk”</p><p>参考链接</p></li><li><p>在设备2 上，添加不同的用户名并连接到聊天服务器</p><p>设备 1、设备 2，相互发送消息可见；</p><p>设备1:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># mawk -W interactive &#39;$0=&quot;Jp: &quot;$0&#39; | nc -lv 1234</span>
-------------------------------------------------------------------------------------
Listening on <span class="token punctuation">[</span><span class="token number">0.0</span>.0.0<span class="token punctuation">]</span> <span class="token punctuation">(</span>family <span class="token number">0</span>, port <span class="token number">1234</span><span class="token punctuation">)</span>
Connection from <span class="token number">10.20</span>.2.226 <span class="token number">11606</span> received<span class="token operator">!</span>
Hi Paddy
Paddy: Hi Jp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设备2:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev2:~/files_destination<span class="token comment"># mawk -W interactive &#39;$0=&quot;Paddy: &quot;$0&#39; | nc 10.20.3.215 1234</span>
-------------------------------------------------------------------------------------
Jp: Hi Paddy
Hi Jp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自己的用户名不会显示在聊天窗口中。</p></li></ul><h3 id="_3-9-发送-http-请求" tabindex="-1"><a class="header-anchor" href="#_3-9-发送-http-请求"><span>3.9 发送 HTTP 请求</span></a></h3><p>使用 <code>Netcat</code> 和 <code>printf</code> 向网站发送 HTTP 请求。例如，要通过 80 端口（用于 TCP/IP 连接）向 www.baidu.com 发送请求，请执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>root@dev1:~/files<span class="token comment"># printf &quot;GET / HTTP/1.0\\r\\n\\r\\n&quot; | nc -v www.baidu.com 80</span>
-------------------------------------------------------------------------------------
Connection to www.baidu.com <span class="token number">80</span> port <span class="token punctuation">[</span>tcp/http<span class="token punctuation">]</span> succeeded<span class="token operator">!</span>
HTTP/1.0 <span class="token number">200</span> OK
Accept-Ranges: bytes
Cache-Control: no-cache
Content-Length: <span class="token number">9508</span>
Content-Type: text/html
Date: Tue, <span class="token number">26</span> Dec <span class="token number">2023</span> <span class="token number">16</span>:02:11 GMT
P3p: <span class="token assign-left variable">CP</span><span class="token operator">=</span><span class="token string">&quot; OTI DSP COR IVA OUR IND COM &quot;</span>
P3p: <span class="token assign-left variable">CP</span><span class="token operator">=</span><span class="token string">&quot; OTI DSP COR IVA OUR IND COM &quot;</span>
Pragma: no-cache
Server: BWS/1.1
Set-Cookie: <span class="token assign-left variable">BAIDUID</span><span class="token operator">=</span>24395D2F77DCF8CFE08D2038383245D4:FG<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token assign-left variable">expires</span><span class="token operator">=</span>Thu, 
<span class="token punctuation">..</span>. <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出会打印 header 和内容。大多数页面会禁用 TCP 连接并获取 404 错误页面。</p>`,57);function u(v,m){const e=n("VPBanner"),a=n("Share");return i(),l("div",null,[s(e,c(o({title:"Linux 命令：nc(netcat)",content:"Linux 命令：nc(netcat)",logo:null,color:"var(--banner-text)",background:"rgba(217, 244, 208, 0.5)",actions:[{text:"Linux 命令：nc(netcat)",link:"/Linux 命令：nc(netcat)/"}]})),null,16),r,s(a,{colorful:"",service:"email,qq,qzone,qrcode,weibo,telegram,twitter"})])}const k=t(d,[["render",u],["__file","Linux 命令：nc(netcat).html.vue"]]),g=JSON.parse('{"path":"/linux/Linux%20%E5%91%BD%E4%BB%A4%EF%BC%9Anc(netcat).html","title":"Linux 命令：nc(netcat)","lang":"zh-CN","frontmatter":{"title":"Linux 命令：nc(netcat)","excerpt":"Linux 命令：nc(netcat)","description":"Linux 命令：nc(netcat)","date":"2024-05-19T00:00:00.000Z","category":"Linux","tag":"Linux","author":"xlc520","article":true,"timeline":true,"icon":"linux","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/linux/Linux%20%E5%91%BD%E4%BB%A4%EF%BC%9Anc(netcat).html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"Linux 命令：nc(netcat)"}],["meta",{"property":"og:description","content":"Linux 命令：nc(netcat)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-18T10:09:50.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2024-05-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-18T10:09:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 命令：nc(netcat)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-18T10:09:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"1. 写在前面","slug":"_1-写在前面","link":"#_1-写在前面","children":[]},{"level":2,"title":"2. 如何在 Linux 中使用 nc(netcat) 命令?","slug":"_2-如何在-linux-中使用-nc-netcat-命令","link":"#_2-如何在-linux-中使用-nc-netcat-命令","children":[{"level":3,"title":"2.1 安装","slug":"_2-1-安装","link":"#_2-1-安装","children":[]},{"level":3,"title":"2.2 nc 命令语法","slug":"_2-2-nc-命令语法","link":"#_2-2-nc-命令语法","children":[]},{"level":3,"title":"2.3 Netcat (nc) 命令选项","slug":"_2-3-netcat-nc-命令选项","link":"#_2-3-netcat-nc-命令选项","children":[]}]},{"level":2,"title":"3. nc 命令示例","slug":"_3-nc-命令示例","link":"#_3-nc-命令示例","children":[{"level":3,"title":"3.1 Client/Server 连接","slug":"_3-1-client-server-连接","link":"#_3-1-client-server-连接","children":[]},{"level":3,"title":"3.2 Ping 网站上的特定端口","slug":"_3-2-ping-网站上的特定端口","link":"#_3-2-ping-网站上的特定端口","children":[]},{"level":3,"title":"3.3 扫描端口","slug":"_3-3-扫描端口","link":"#_3-3-扫描端口","children":[]},{"level":3,"title":"3.4 传输数据","slug":"_3-4-传输数据","link":"#_3-4-传输数据","children":[]},{"level":3,"title":"3.5 传输文件","slug":"_3-5-传输文件","link":"#_3-5-传输文件","children":[]},{"level":3,"title":"3.6 传输目录","slug":"_3-6-传输目录","link":"#_3-6-传输目录","children":[]},{"level":3,"title":"3.7 创建网络服务器","slug":"_3-7-创建网络服务器","link":"#_3-7-创建网络服务器","children":[]},{"level":3,"title":"3.8 简单聊天服务器","slug":"_3-8-简单聊天服务器","link":"#_3-8-简单聊天服务器","children":[]},{"level":3,"title":"3.9 发送 HTTP 请求","slug":"_3-9-发送-http-请求","link":"#_3-9-发送-http-请求","children":[]}]}],"git":{"createdTime":1716026990000,"updatedTime":1716026990000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":8.44,"words":2532},"filePathRelative":"linux/Linux 命令：nc(netcat).md","localizedDate":"2024年5月19日"}');export{k as comp,g as data};
