const n=JSON.parse(`{"key":"v-15b1d789","path":"/script/%E4%BD%BF%E7%94%A8CloudFlareWorkers%E5%8F%8D%E4%BB%A3%E7%BD%91%E7%AB%99.html","title":"使用CloudFlareWorkers反代网站","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"使用CloudFlareWorkers反代网站","description":"使用CloudFlareWorkers反代网站 给出三种反代源码。 镜像整个网站 镜像网站带密码访问 镜像网站指定目录 注意： 如果出现： “需要网站所有者处理的错误:网站密钥的网域无效” Google reCAPTCHA V3.0无效. “网站所有者的错误：密钥类型无效” 解决方法： 在代码中修改new_request_headers.set('Re...","date":"2022-06-09T00:00:00.000Z","category":"Script","tag":["Github","Google"],"article":true,"dateline":true,"icon":"script","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/script/%E4%BD%BF%E7%94%A8CloudFlareWorkers%E5%8F%8D%E4%BB%A3%E7%BD%91%E7%AB%99.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"使用CloudFlareWorkers反代网站"}],["meta",{"property":"og:description","content":"使用CloudFlareWorkers反代网站 给出三种反代源码。 镜像整个网站 镜像网站带密码访问 镜像网站指定目录 注意： 如果出现： “需要网站所有者处理的错误:网站密钥的网域无效” Google reCAPTCHA V3.0无效. “网站所有者的错误：密钥类型无效” 解决方法： 在代码中修改new_request_headers.set('Re..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T09:41:05.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Github"}],["meta",{"property":"article:tag","content":"Google"}],["meta",{"property":"article:published_time","content":"2022-06-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T09:41:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用CloudFlareWorkers反代网站\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T09:41:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"镜像整个网站","slug":"镜像整个网站","link":"#镜像整个网站","children":[]},{"level":2,"title":"镜像网站带密码访问","slug":"镜像网站带密码访问","link":"#镜像网站带密码访问","children":[]},{"level":2,"title":"镜像网站指定目录","slug":"镜像网站指定目录","link":"#镜像网站指定目录","children":[]},{"level":2,"title":"注意：","slug":"注意","link":"#注意","children":[{"level":3,"title":"解决方法：","slug":"解决方法","link":"#解决方法","children":[]}]}],"git":{"createdTime":1668948234000,"updatedTime":1678873265000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2}]},"readingTime":{"minutes":4.85,"words":1454},"filePathRelative":"script/使用CloudFlareWorkers反代网站.md","localizedDate":"2022年6月9日","excerpt":"\\n<p>给出三种反代源码。</p>\\n<h2>镜像整个网站</h2>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 替换成你想镜像的站点</span>\\n<span class=\\"token keyword\\">const</span> upstream <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'www.google.com'</span>\\n \\n<span class=\\"token comment\\">// 如果那个站点有专门的移动适配站点，否则保持和上面一致</span>\\n<span class=\\"token keyword\\">const</span> upstream_mobile <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'www.google.com'</span>\\n \\n<span class=\\"token comment\\">// 你希望禁止哪些国家访问</span>\\n<span class=\\"token keyword\\">const</span> blocked_region <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'RU'</span><span class=\\"token punctuation\\">]</span>\\n \\n<span class=\\"token comment\\">// 禁止自访问</span>\\n<span class=\\"token keyword\\">const</span> blocked_ip_address <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'0.0.0.0'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'127.0.0.1'</span><span class=\\"token punctuation\\">]</span>\\n \\n<span class=\\"token comment\\">// 替换成你想镜像的站点</span>\\n<span class=\\"token keyword\\">const</span> replace_dict <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token string-property property\\">'$upstream'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'$custom_domain'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string-property property\\">'//www.google.com'</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">''</span>\\n<span class=\\"token punctuation\\">}</span>\\n \\n<span class=\\"token comment\\">//以下内容都不用动</span>\\n<span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'fetch'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token parameter\\">event</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    event<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">respondWith</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">fetchAndApply</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token punctuation\\">.</span>request<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n \\n<span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fetchAndApply</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">request</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n \\n    <span class=\\"token keyword\\">const</span> region <span class=\\"token operator\\">=</span> request<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'cf-ipcountry'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toUpperCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">const</span> ip_address <span class=\\"token operator\\">=</span> request<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'cf-connecting-ip'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">const</span> user_agent <span class=\\"token operator\\">=</span> request<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'user-agent'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n \\n    <span class=\\"token keyword\\">let</span> response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">let</span> url <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">URL</span><span class=\\"token punctuation\\">(</span>request<span class=\\"token punctuation\\">.</span>url<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">let</span> url_host <span class=\\"token operator\\">=</span> url<span class=\\"token punctuation\\">.</span>host<span class=\\"token punctuation\\">;</span>\\n \\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>url<span class=\\"token punctuation\\">.</span>protocol <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'http:'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        url<span class=\\"token punctuation\\">.</span>protocol <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'https:'</span>\\n        response <span class=\\"token operator\\">=</span> Response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">redirect</span><span class=\\"token punctuation\\">(</span>url<span class=\\"token punctuation\\">.</span>href<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> response<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n \\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">await</span> <span class=\\"token function\\">device_status</span><span class=\\"token punctuation\\">(</span>user_agent<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        upstream_domain <span class=\\"token operator\\">=</span> upstream\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n        upstream_domain <span class=\\"token operator\\">=</span> upstream_mobile\\n    <span class=\\"token punctuation\\">}</span>\\n \\n    url<span class=\\"token punctuation\\">.</span>host <span class=\\"token operator\\">=</span> upstream_domain<span class=\\"token punctuation\\">;</span>\\n \\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>blocked_region<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span>region<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Response</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Access denied: WorkersProxy is not available in your region yet.'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token literal-property property\\">status</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">403</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>blocked_ip_address<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span>ip_address<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Response</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Access denied: Your IP address is blocked by WorkersProxy.'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token literal-property property\\">status</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">403</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">let</span> method <span class=\\"token operator\\">=</span> request<span class=\\"token punctuation\\">.</span>method<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">let</span> request_headers <span class=\\"token operator\\">=</span> request<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">let</span> new_request_headers <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Headers</span><span class=\\"token punctuation\\">(</span>request_headers<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n \\n        new_request_headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Host'</span><span class=\\"token punctuation\\">,</span> upstream_domain<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        new_request_headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Referer'</span><span class=\\"token punctuation\\">,</span> url<span class=\\"token punctuation\\">.</span>href<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n \\n        <span class=\\"token keyword\\">let</span> original_response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span>url<span class=\\"token punctuation\\">.</span>href<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token literal-property property\\">method</span><span class=\\"token operator\\">:</span> method<span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">headers</span><span class=\\"token operator\\">:</span> new_request_headers\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n \\n        <span class=\\"token keyword\\">let</span> original_response_clone <span class=\\"token operator\\">=</span> original_response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">clone</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">let</span> original_text <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">let</span> response_headers <span class=\\"token operator\\">=</span> original_response<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">let</span> new_response_headers <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Headers</span><span class=\\"token punctuation\\">(</span>response_headers<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">let</span> status <span class=\\"token operator\\">=</span> original_response<span class=\\"token punctuation\\">.</span>status<span class=\\"token punctuation\\">;</span>\\n \\n        new_response_headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'access-control-allow-origin'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'*'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        new_response_headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'access-control-allow-credentials'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        new_response_headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'content-security-policy'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        new_response_headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'content-security-policy-report-only'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        new_response_headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'clear-site-data'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n \\n        <span class=\\"token keyword\\">const</span> content_type <span class=\\"token operator\\">=</span> new_response_headers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'content-type'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>content_type<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'text/html'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> content_type<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'UTF-8'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            original_text <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">replace_response_text</span><span class=\\"token punctuation\\">(</span>original_response_clone<span class=\\"token punctuation\\">,</span> upstream_domain<span class=\\"token punctuation\\">,</span> url_host<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            original_text <span class=\\"token operator\\">=</span> original_response_clone<span class=\\"token punctuation\\">.</span>body\\n        <span class=\\"token punctuation\\">}</span>\\n \\n        response <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Response</span><span class=\\"token punctuation\\">(</span>original_text<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n            status<span class=\\"token punctuation\\">,</span>\\n            <span class=\\"token literal-property property\\">headers</span><span class=\\"token operator\\">:</span> new_response_headers\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> response<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n \\n<span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">replace_response_text</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">response<span class=\\"token punctuation\\">,</span> upstream_domain<span class=\\"token punctuation\\">,</span> host_name</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> text <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">text</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n \\n    <span class=\\"token keyword\\">var</span> i<span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token keyword\\">in</span> replace_dict<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        j <span class=\\"token operator\\">=</span> replace_dict<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'$upstream'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            i <span class=\\"token operator\\">=</span> upstream_domain\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'$custom_domain'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            i <span class=\\"token operator\\">=</span> host_name\\n        <span class=\\"token punctuation\\">}</span>\\n \\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>j <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'$upstream'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            j <span class=\\"token operator\\">=</span> upstream_domain\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>j <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'$custom_domain'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            j <span class=\\"token operator\\">=</span> host_name\\n        <span class=\\"token punctuation\\">}</span>\\n \\n        <span class=\\"token keyword\\">let</span> re <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">RegExp</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'g'</span><span class=\\"token punctuation\\">)</span>\\n        text <span class=\\"token operator\\">=</span> text<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span>re<span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> text<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n \\n<span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">device_status</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">user_agent_info</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">var</span> agents <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"Android\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"iPhone\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"SymbianOS\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Windows Phone\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"iPad\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"iPod\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">var</span> flag <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> v <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> v <span class=\\"token operator\\">&lt;</span> agents<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> v<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>user_agent_info<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>agents<span class=\\"token punctuation\\">[</span>v<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            flag <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">break</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> flag<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}`);export{n as data};
