const e=JSON.parse('{"key":"v-0f0a00d8","path":"/dev/Vue3%20_%20setup%20_%20ts%20%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html","title":"Vue3 + setup + ts 使用技巧","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"Vue3 + setup + ts 使用技巧","description":"Vue3 + setup + ts 使用技巧 1. 组件引入 当使用 setup 的时候，组件直接引入就可以了，不需要再自己手动注册 2. ref 和 reactive ref 一般用于基本的数据类型，比如 string，boolean ,reactive 一般用于对象 ref 的地方其实也是调用的 reactive 实现的。 3. defineEmi...","date":"2023-11-10T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/Vue3%20_%20setup%20_%20ts%20%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"Vue3 + setup + ts 使用技巧"}],["meta",{"property":"og:description","content":"Vue3 + setup + ts 使用技巧 1. 组件引入 当使用 setup 的时候，组件直接引入就可以了，不需要再自己手动注册 2. ref 和 reactive ref 一般用于基本的数据类型，比如 string，boolean ,reactive 一般用于对象 ref 的地方其实也是调用的 reactive 实现的。 3. defineEmi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-11T08:43:35.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-11-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-11T08:43:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue3 + setup + ts 使用技巧\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-11T08:43:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"1. 组件引入","slug":"_1-组件引入","link":"#_1-组件引入","children":[]},{"level":2,"title":"2. ref 和 reactive","slug":"_2-ref-和-reactive","link":"#_2-ref-和-reactive","children":[]},{"level":2,"title":"3. defineEmits 和 defineProps 获取父组件传过来值和事件","slug":"_3-defineemits-和-defineprops-获取父组件传过来值和事件","link":"#_3-defineemits-和-defineprops-获取父组件传过来值和事件","children":[]},{"level":2,"title":"4. 使用 useAttrs 和 useSlots","slug":"_4-使用-useattrs-和-useslots","link":"#_4-使用-useattrs-和-useslots","children":[{"level":3,"title":"父组件：","slug":"父组件","link":"#父组件","children":[]},{"level":3,"title":"子组件：","slug":"子组件","link":"#子组件","children":[]},{"level":3,"title":"使用自定义指令","slug":"使用自定义指令","link":"#使用自定义指令","children":[]}]},{"level":2,"title":"5. 使用 defineExpose 子组件传父组件","slug":"_5-使用-defineexpose-子组件传父组件","link":"#_5-使用-defineexpose-子组件传父组件","children":[{"level":3,"title":"子组件","slug":"子组件-1","link":"#子组件-1","children":[]},{"level":3,"title":"父组件","slug":"父组件-1","link":"#父组件-1","children":[]}]},{"level":2,"title":"6. 父组件传子组件","slug":"_6-父组件传子组件","link":"#_6-父组件传子组件","children":[{"level":3,"title":"父组件","slug":"父组件-2","link":"#父组件-2","children":[]},{"level":3,"title":"子组件","slug":"子组件-2","link":"#子组件-2","children":[]}]},{"level":2,"title":"7. toRefs","slug":"_7-torefs","link":"#_7-torefs","children":[{"level":3,"title":"父组件","slug":"父组件-3","link":"#父组件-3","children":[]},{"level":3,"title":"子组件","slug":"子组件-3","link":"#子组件-3","children":[]}]},{"level":2,"title":"8. 子组件使用 v-model","slug":"_8-子组件使用-v-model","link":"#_8-子组件使用-v-model","children":[{"level":3,"title":"8.1 可以在子组件中使用 computed，实现双向绑定","slug":"_8-1-可以在子组件中使用-computed-实现双向绑定","link":"#_8-1-可以在子组件中使用-computed-实现双向绑定","children":[]},{"level":3,"title":"8.2 可以从父组件传递值和改变值的方法，然后子组件也可以使用 v-model","slug":"_8-2-可以从父组件传递值和改变值的方法-然后子组件也可以使用-v-model","link":"#_8-2-可以从父组件传递值和改变值的方法-然后子组件也可以使用-v-model","children":[]},{"level":3,"title":"父组件：","slug":"父组件-5","link":"#父组件-5","children":[]},{"level":3,"title":"子组件：","slug":"子组件-5","link":"#子组件-5","children":[]}]},{"level":2,"title":"9. 递归组件","slug":"_9-递归组件","link":"#_9-递归组件","children":[{"level":3,"title":"父组件","slug":"父组件-6","link":"#父组件-6","children":[]},{"level":3,"title":"子组件","slug":"子组件-6","link":"#子组件-6","children":[]}]},{"level":2,"title":"10. vue3 ts 获取组件 ref 实例","slug":"_10-vue3-ts-获取组件-ref-实例","link":"#_10-vue3-ts-获取组件-ref-实例","children":[]}],"git":{"createdTime":1699692215000,"updatedTime":1699692215000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":6.94,"words":2082},"filePathRelative":"dev/Vue3 + setup + ts 使用技巧.md","localizedDate":"2023年11月10日","excerpt":"\\n<h2><strong>1. 组件引入</strong></h2>\\n<p>当使用 <code>setup</code> 的时候，组件直接引入就可以了，不需要再自己手动注册</p>\\n<div class=\\"language-typescript\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token operator\\">&lt;</span>template<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span>Child <span class=\\"token operator\\">/</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>template<span class=\\"token operator\\">&gt;</span>\\n\\n<span class=\\"token operator\\">&lt;</span>script setup lang<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"ts\\"</span><span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token keyword\\">import</span> Child <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"./Child.vue\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>script<span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}');export{e as data};
