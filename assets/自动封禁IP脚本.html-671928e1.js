import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,a as e}from"./app-865676a6.js";const i={},t=e(`<h1 id="自动封禁ip脚本" tabindex="-1"><a class="header-anchor" href="#自动封禁ip脚本" aria-hidden="true">#</a> 自动封禁IP脚本</h1><p>1.在ngnix的conf目录下创建一个<code>blockip.conf</code>文件</p><p>2.里面放需要封禁的IP，格式如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>deny 1.2.3.4;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3.在ngnix的HTTP的配置中添加如下内容</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>include blockips.conf;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4.重启 ngnix</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/local/nginx/sbin/nginx -s reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5.然后你就会看到IP被封禁了，你会喜提403</p><h2 id="操作步骤" tabindex="-1"><a class="header-anchor" href="#操作步骤" aria-hidden="true">#</a> 操作步骤</h2><p><strong>操作一：</strong> AWK统计<code>access.log</code>，记录每分钟访问超过60次的ip</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>awk &#39;{print $1}&#39; access.log | sort | uniq -cd | awk &#39;{if($1&gt;60)print $0}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>awk &#39;{print $1}&#39; access.log</code> 取出access.log的第一列即为ip。</li><li><code>sort | uniq -cd</code> 去重和排序</li><li><code>awk &#39;{if($1&gt;60)print $0}&#39; </code>判断重复的数量是否超过60个，超过60个就展示出来</li></ol><p><strong>操作二：</strong> 编写shell脚本，实现整体功能（写了注释代码）</p><p><code>vi /usr/local/nginx/logs/block_ip.sh</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#echo &quot;&quot; &gt; /root/nginxWebUI/conf.d/blockip.conf</span>

<span class="token assign-left variable">ip_list</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span> access.log <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-cd</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{if($1&gt;1)print $2}&#39;</span><span class="token variable">)</span></span>
<span class="token comment">#判断这个变量是否为空</span>
<span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$ip_list</span>&quot;</span>
<span class="token keyword">then</span>
	<span class="token comment"># 当前时间</span>
	<span class="token assign-left variable">current_create_time</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +<span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token variable">\`</span></span>
    <span class="token comment">#为空写入 empty.log中，并重新启动ngnix</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$current_create_time</span> 为空&quot;</span>  <span class="token operator">&gt;&gt;</span> empty.log
    /usr/sbin/nginx <span class="token parameter variable">-s</span> reload
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;deny<span class="token variable">$ip_list</span>&quot;</span><span class="token operator">&gt;</span>temp_ip.txt
    <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/deny//&#39;</span> temp_ip.txt
    <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/^/deny /g&#39;</span> temp_ip.txt
    <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/$/;/g&#39;</span> temp_ip.txt
    <span class="token comment">#如果不为空 前面加上 deny格式和ip写入blockip.conf中</span>
    <span class="token function">cat</span> temp_ip.txt<span class="token operator">&gt;&gt;</span>/root/nginxWebUI/conf.d/blockip.conf
    <span class="token comment">#重启ngnix</span>
    /usr/sbin/nginx <span class="token parameter variable">-s</span> reload
    <span class="token comment">#清空之前的日志，从最新的开始截取</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span> <span class="token operator">&gt;</span> /root/nginxWebUI/logs/access.log
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>操作三：</strong> 使用crontab定时，来实现访问每分钟超过60的</p><p>直接实操吧：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span> 

<span class="token number">10</span> <span class="token number">6</span> * * * <span class="token function">sh</span> /root/nginxWebUI/logs/block_ip.sh

systemctl restart crond.service 重启一下配置既可
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),l=[t];function c(o,p){return n(),a("div",null,l)}const v=s(i,[["render",c],["__file","自动封禁IP脚本.html.vue"]]);export{v as default};
