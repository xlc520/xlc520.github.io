import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as e}from"./app-BkZy1zYI.js";const t={},p=e(`<h1 id="_15000-字的-sql-语句大全" tabindex="-1"><a class="header-anchor" href="#_15000-字的-sql-语句大全"><span>15000 字的 SQL 语句大全</span></a></h1><p><strong>一、基础</strong></p><p><strong>1、说明：创建数据库</strong></p><p>CREATE DATABASE database-name</p><p><strong>2</strong>**、说明：删除数据库**</p><p><strong>d</strong>rop database dbname</p><p><strong>3、说明：备份 sql server</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">--- 创建 备份数据的 device</span>
<span class="token keyword">USE</span> master
<span class="token keyword">EXEC</span> sp_addumpdevice <span class="token string">&#39;disk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;testBack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c:\\mssql7backup\\MyNwind_1.dat&#39;</span>
<span class="token comment">--- 开始 备份</span>
<span class="token keyword">BACKUP</span> <span class="token keyword">DATABASE</span> pubs <span class="token keyword">TO</span> testBack 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4、说明：创建新表</strong></p><p>create table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],..)</p><p><strong>根据已有的表创建新表：</strong></p><p>**A：<strong>create table tab_new like tab_old (使用旧表创建新表) <strong>B</strong></strong>：**create table tab_new as select col1,col2…… from tab_old definition only</p><p><strong>5、说明：删除新表</strong></p><p>drop table tabname</p><p><strong>6、说明：增加一个列</strong></p><p>Alter table tabname add column col type</p><p><strong>注</strong>：列增加后将不能删除。DB2 中列加上后数据类型也不能改变，唯一能改变的是增加 varchar 类型的长度。</p><p><strong>7、说明：添加主键</strong>：Alter table tabname add primary key(col) 说明：删除主键：Alter table tabname drop primary key(col)</p><p><strong>8、说明：创建索引</strong>：create [unique] index idxname on tabname(col…….)</p><p>删除索引：drop index idxname** **</p><p>注：索引是不可更改的，想更改必须删除重新建。</p><p><strong>9</strong>**、说明：创建视图**：create view viewname as select statement</p><p><strong>删除视图</strong>：drop view viewname</p><p><strong>10</strong>**、说明：几个简单的基本的 sql 语句**</p><p>**选择：**select *from table1 where 范围 **插入：*<em>insert into table1(field1,field2) values(value1,value2) <strong>删除：<strong>delete from table1 where 范围</strong>更新</strong>：update table1 set field1=value1 where 范围 <strong>查找</strong>：select</em> from table1 where field1 like ’%value1%’ ---like 的语法很精妙，查资料! <strong>排序</strong>：select * from table1 order by field1,field2 [desc] <strong>总数</strong>：select count as totalcount from table1 <strong>求和</strong>：select sum(field1) as sumvalue from table1 <strong>平均</strong>：select avg(field1) as avgvalue from table1 <strong>最大</strong>：select max(field1) as maxvalue from table1 <strong>最小</strong>：select min(field1) as minvalue from table1</p><p><strong>11、说明：几个高级查询运算词</strong></p><p><strong>A：UNION 运算符</strong></p><p>UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION 一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。</p><p><strong>B：EXCEPT 运算符</strong></p><p><strong>EXCEPT</strong>运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。** **</p><p><strong>C：INTERSECT 运算符</strong></p><p><strong>INTERSECT</strong>运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 <strong>ALL</strong>随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。 **注：**使用运算词的几个查询结果行必须是一致的。</p><p><strong>12</strong>**、说明：使用外连接**</p><p>A、<strong>left （outer） join</strong>：</p><p>左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。</p><p>SQL: select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c</p><p><strong>B：right （outer） join:</strong></p><p>右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。</p><p><strong>C：full/cross （outer） join</strong>：</p><p>全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</p><p><strong>12</strong>**、分组:Group by: **</p><p>一张表，一旦分组 完成后，查询后只能得到组相关的信息。</p><p><strong>组相关的信息：</strong>（统计信息） count,sum,max,min,avg <strong>分组的标准)</strong></p><p><strong>在 SQLServer 中分组时：不能以 text,ntext,image 类型的字段作为分组依据</strong></p><p><strong>在 selecte 统计函数中的字段，不能和普通的字段放在一起；</strong></p><p><strong>13、对数据库进行操作：</strong></p><p>** **</p><p><strong>分离数据库</strong>： <strong>sp_detach_db;</strong></p><p><strong>附加数据库</strong>：<strong>sp_attach_db</strong> 后接表明，附加需要完整的路径名</p><p>**14.**<strong>如何修改数据库的名称:</strong></p><p>sp_renamedb &#39;old_name&#39;, &#39;new_name&#39;</p><p>对了，我把 MySQL 相关的文章整理成了 PDF，有需要的关注微信公众号 Java 后端，回复 666 下载。</p><p><strong>二、提升</strong></p><p>**1、说明：复制表(只复制结构,源表名：a 新表名：b) (Access 可用) **</p><p>**法一：**select * into b from a where 1&lt;&gt;1（仅用于 SQlServer）</p><p>**法二：**select top 0 * into b from a ** **</p><p>**2、说明：拷贝表(拷贝数据,源表名：a 目标表名：b) (Access 可用) **</p><p>insert into b(a, b, c) select d,e,f from b;</p><p>**3、说明：跨数据库之间表的拷贝(具体数据使用绝对路径) (Access 可用) **</p><p>insert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件 例子：..from b in &#39;&quot;&amp;Server.MapPath(&quot;.&quot;)&amp;&quot;\\data.mdb&quot; &amp;&quot;&#39; where..</p><p>**4、说明：子查询(表名 1：a 表名 2：b) **</p><p>select a,b,c from a where a IN (select d from b ) 或者: select a,b,c from a where a IN (1,2,3)</p><p>**5、说明：显示文章、提交人和最后回复时间 **</p><p>select a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b</p><p>**6、说明：外连接查询(表名 1：a 表名 2：b) **</p><p>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c</p><p>**7、说明：在线视图查询(表名 1：a ) **select * from (SELECT a,b,c FROM a) T where t.a &gt; 1;</p><p>**8、说明：between 的用法,between 限制查询数据范围时包括了边界值,not between 不包括 **</p><p>select * from table1 where time between time1 and time2 select a,b,c, from table1 where a not between 数值 1 and 数值 2</p><p>**9、说明：in 的使用方法 **</p><p>select * from table1 where a [not] in (‘值 1’,’值 2’,’值 4’,’值 6’)</p><p>**10、说明：两张关联表，删除主表中已经在副表中没有的信息 **</p><p>delete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )</p><p>**11、说明：四表联查问题： **</p><p>select * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where ……</p><p>**12、说明：日程安排提前五分钟提醒 **</p><p>SQL: select * from 日程安排 where datediff(&#39;minute&#39;,f 开始时间,getdate())&gt;5</p><p><strong>13</strong>**、说明：一条****sql** <strong>语句搞定数据库分页</strong></p><p>select top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段</p><p>** **</p><p>**具体实现：**关于数据库分页：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">declare</span> <span class="token variable">@start</span> <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token variable">@end</span> <span class="token keyword">int</span>
  <span class="token variable">@sql</span>  nvarchar<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span>
  <span class="token keyword">set</span> <span class="token variable">@sql</span><span class="token operator">=</span>’<span class="token keyword">select</span> <span class="token keyword">top</span>’<span class="token operator">+</span>str<span class="token punctuation">(</span><span class="token variable">@end</span><span class="token operator">-</span><span class="token variable">@start</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>’<span class="token operator">+</span><span class="token keyword">from</span> T <span class="token keyword">where</span> rid <span class="token operator">not</span> <span class="token operator">in</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">top</span>’<span class="token operator">+</span>str<span class="token punctuation">(</span><span class="token variable">@str</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>’Rid <span class="token keyword">from</span> T <span class="token keyword">where</span> Rid<span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>’
  <span class="token keyword">exec</span> sp_executesql <span class="token variable">@sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**注意：**在 top 后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid 为一个标识列，如果 top 后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top 的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）</p><p>**14、说明：前 10 条记录 **</p><p>select top 10 * form table1 where 范围</p><p>**15、说明：<strong>选择在每一组 b 值相同的数据中对应的 a 最大的记录的所有信息( 类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)</strong> **</p><p>select a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)</p><p>**16、说明：<strong>包括所有在 TableA 中但不在 TableB 和 TableC 中的行并消除所有重复行而派生出一个结果表</strong> **</p><p>(select a from tableA ) except (select a from tableB) except (select a from tableC)</p><p>**17、说明：随机取出 10 条数据 **</p><p>select top 10 * from tablename order by newid()</p><p>**18、说明：随机选择记录 **</p><p>select newid()</p><p>**19、说明：删除重复记录 **</p><p><strong>1)</strong> delete from tablename where id not in (select max(id) from tablename group by col1,col2,...)</p><p><strong>2)</strong> select distinct <em>into temp from tablename delete from tablename insert into tablename select</em> from temp ** **</p><p>**评价：**这种操作牵连大量的数据的移动，这种做法不适合大容量但数据操作 3) ,例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> tablename
<span class="token comment">--添加一个自增列</span>
<span class="token keyword">add</span>  column_b <span class="token keyword">int</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">delete</span> <span class="token keyword">from</span> tablename <span class="token keyword">where</span> column_b <span class="token operator">not</span> <span class="token operator">in</span><span class="token punctuation">(</span>
<span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>column_b<span class="token punctuation">)</span> <span class="token keyword">from</span> tablename <span class="token keyword">group</span> <span class="token keyword">by</span> column1<span class="token punctuation">,</span>column2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> tablename <span class="token keyword">drop</span> <span class="token keyword">column</span> column_b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**20、说明：列出数据库里所有的表名 **</p><p>select name from sysobjects where type=&#39;U&#39; // U 代表用户</p><p>**21、说明：列出表里的所有的列名 **</p><p>select name from syscolumns where id=object_id(&#39;TableName&#39;)</p><p>**22、说明：<strong>列示 type、vender、pcs 字段，以 type 字段排列，case 可以方便地实现多重选择，类似 select 中的 case。</strong> **</p><p>select type,sum(case vender when &#39;A&#39; then pcs else 0 end),sum(case vender when &#39;C&#39; then pcs else 0 end),sum(case vender when &#39;B&#39; then pcs else 0 end) FROM tablename group by type ** **</p><p>**显示结果： type vender pcs **电脑 A 1 电脑 A 1 光盘 B 2 光盘 A 2 手机 B 3 手机 C 3</p><p><strong>23、说明：初始化表 table1</strong></p><p>TRUNCATE TABLE table1</p><p>**24、说明：选择从 10 到 15 的记录 **</p><p>select top 5 <em>from (select top 15</em> from table order by id asc) table_别名 order by id desc</p><p><strong>三、技巧</strong></p><p><strong>1、1=1，1=2 的使用，在 SQL 语句组合时用的较多</strong></p><p><strong>“where 1=1” 是表示选择全部 “where 1=2”全部不选，</strong> 如：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">if</span> <span class="token variable">@strWhere</span> <span class="token operator">!=</span><span class="token string">&#39;&#39;</span> 
<span class="token keyword">begin</span>
<span class="token keyword">set</span> <span class="token variable">@strSQL</span> <span class="token operator">=</span> <span class="token string">&#39;select count(*) as Total from [&#39;</span> <span class="token operator">+</span> <span class="token variable">@tblName</span> <span class="token operator">+</span> <span class="token string">&#39;] where &#39;</span> <span class="token operator">+</span> <span class="token variable">@strWhere</span>
<span class="token keyword">end</span>
<span class="token keyword">else</span> 
<span class="token keyword">begin</span>
<span class="token keyword">set</span> <span class="token variable">@strSQL</span> <span class="token operator">=</span> <span class="token string">&#39;select count(*) as Total from [&#39;</span> <span class="token operator">+</span> <span class="token variable">@tblName</span> <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span> 
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>我们可以直接写成</strong></p><p>set @strSQL = &#39;select count(*) as Total from [&#39; + @tblName + &#39;] where 1=1 安定 &#39;+ @strWhere</p><p>** **</p><p><strong>2、收缩数据库</strong></p><p>** **--重建索引 DBCC REINDEX DBCC INDEXDEFRAG --收缩数据和日志 DBCC SHRINKDB DBCC SHRINKFILE</p><p><strong>3、压缩数据库</strong></p><p>** **dbcc shrinkdatabase(dbname)</p><p><strong>4、转移数据库给新用户以已存在用户权限</strong></p><p>** **exec sp_change_users_login &#39;update_one&#39;,&#39;newname&#39;,&#39;oldname&#39; go</p><p>**5、检查备份集 **RESTORE VERIFYONLY from disk=&#39;E:\\dvbbs.bak&#39;</p><p><strong>6、修复数据库</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">[</span>dvbbs<span class="token punctuation">]</span> <span class="token keyword">SET</span> SINGLE_USER
GO
<span class="token keyword">DBCC</span> CHECKDB<span class="token punctuation">(</span><span class="token string">&#39;dvbbs&#39;</span><span class="token punctuation">,</span>repair_allow_data_loss<span class="token punctuation">)</span> <span class="token keyword">WITH</span> TABLOCK
GO
<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">[</span>dvbbs<span class="token punctuation">]</span> <span class="token keyword">SET</span> MULTI_USER
GO
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>7、日志清除</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> NOCOUNT <span class="token keyword">ON</span>
<span class="token keyword">DECLARE</span> <span class="token variable">@LogicalFileName</span> sysname<span class="token punctuation">,</span>
 <span class="token variable">@MaxMinutes</span> <span class="token keyword">INT</span><span class="token punctuation">,</span>
 <span class="token variable">@NewSize</span> <span class="token keyword">INT</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> tablename <span class="token comment">-- 要操作的数据库名</span>
<span class="token keyword">SELECT</span> <span class="token variable">@LogicalFileName</span> <span class="token operator">=</span> <span class="token string">&#39;tablename_log&#39;</span><span class="token punctuation">,</span> <span class="token comment">-- 日志文件名</span>
<span class="token variable">@MaxMinutes</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">-- Limit on time allowed to wrap log.</span>
 <span class="token variable">@NewSize</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">-- 你想设定的日志文件的大小(M)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>Setup <span class="token operator">/</span> initialize
<span class="token keyword">DECLARE</span> <span class="token variable">@OriginalSize</span> <span class="token keyword">int</span>
<span class="token keyword">SELECT</span> <span class="token variable">@OriginalSize</span> <span class="token operator">=</span> size 
 <span class="token keyword">FROM</span> sysfiles
 <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token variable">@LogicalFileName</span>
<span class="token keyword">SELECT</span> <span class="token string">&#39;Original Size of &#39;</span> <span class="token operator">+</span> db_name<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; LOG is &#39;</span> <span class="token operator">+</span> 
 <span class="token keyword">CONVERT</span><span class="token punctuation">(</span><span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@OriginalSize</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; 8K pages or &#39;</span> <span class="token operator">+</span> 
 <span class="token keyword">CONVERT</span><span class="token punctuation">(</span><span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token variable">@OriginalSize</span><span class="token operator">*</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;MB&#39;</span>
 <span class="token keyword">FROM</span> sysfiles
 <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token variable">@LogicalFileName</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> DummyTrans
 <span class="token punctuation">(</span>DummyColumn <span class="token keyword">char</span> <span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">DECLARE</span> <span class="token variable">@Counter</span>  <span class="token keyword">INT</span><span class="token punctuation">,</span>
 <span class="token variable">@StartTime</span> <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>
 <span class="token variable">@TruncLog</span>  <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>
<span class="token keyword">SELECT</span> <span class="token variable">@StartTime</span> <span class="token operator">=</span> GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token variable">@TruncLog</span> <span class="token operator">=</span> <span class="token string">&#39;BACKUP LOG &#39;</span> <span class="token operator">+</span> db_name<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; WITH TRUNCATE_ONLY&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">DBCC</span> SHRINKFILE <span class="token punctuation">(</span><span class="token variable">@LogicalFileName</span><span class="token punctuation">,</span> <span class="token variable">@NewSize</span><span class="token punctuation">)</span>
<span class="token keyword">EXEC</span> <span class="token punctuation">(</span><span class="token variable">@TruncLog</span><span class="token punctuation">)</span>
<span class="token comment">-- Wrap the log if necessary.</span>
<span class="token keyword">WHILE</span> <span class="token variable">@MaxMinutes</span> <span class="token operator">&gt;</span> DATEDIFF <span class="token punctuation">(</span>mi<span class="token punctuation">,</span> <span class="token variable">@StartTime</span><span class="token punctuation">,</span> GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">-- time has not expired</span>
 <span class="token operator">AND</span> <span class="token variable">@OriginalSize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> size <span class="token keyword">FROM</span> sysfiles <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token variable">@LogicalFileName</span><span class="token punctuation">)</span> 
 <span class="token operator">AND</span> <span class="token punctuation">(</span><span class="token variable">@OriginalSize</span> <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token variable">@NewSize</span> 
 <span class="token keyword">BEGIN</span> <span class="token comment">-- Outer loop.</span>
<span class="token keyword">SELECT</span> <span class="token variable">@Counter</span> <span class="token operator">=</span> <span class="token number">0</span>
 <span class="token keyword">WHILE</span>  <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">@Counter</span> <span class="token operator">&lt;</span> <span class="token variable">@OriginalSize</span> <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">AND</span> <span class="token punctuation">(</span><span class="token variable">@Counter</span> <span class="token operator">&lt;</span> <span class="token number">50000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token keyword">BEGIN</span> <span class="token comment">-- update</span>
 <span class="token keyword">INSERT</span> DummyTrans <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Fill Log&#39;</span><span class="token punctuation">)</span> <span class="token keyword">DELETE</span> DummyTrans
 <span class="token keyword">SELECT</span> <span class="token variable">@Counter</span> <span class="token operator">=</span> <span class="token variable">@Counter</span> <span class="token operator">+</span> <span class="token number">1</span>
 <span class="token keyword">END</span>
 <span class="token keyword">EXEC</span> <span class="token punctuation">(</span><span class="token variable">@TruncLog</span><span class="token punctuation">)</span> 
 <span class="token keyword">END</span>
<span class="token keyword">SELECT</span> <span class="token string">&#39;Final Size of &#39;</span> <span class="token operator">+</span> db_name<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; LOG is &#39;</span> <span class="token operator">+</span>
 <span class="token keyword">CONVERT</span><span class="token punctuation">(</span><span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>size<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; 8K pages or &#39;</span> <span class="token operator">+</span> 
 <span class="token keyword">CONVERT</span><span class="token punctuation">(</span><span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>size<span class="token operator">*</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;MB&#39;</span>
 <span class="token keyword">FROM</span> sysfiles 
 <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token variable">@LogicalFileName</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> DummyTrans
<span class="token keyword">SET</span> NOCOUNT <span class="token keyword">OFF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>8、说明：更改某个表</strong></p><p>** **exec sp_changeobjectowner &#39;tablename&#39;,&#39;dbo&#39;</p><p><strong>9、存储更改全部表</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> dbo<span class="token punctuation">.</span>User_ChangeObjectOwnerBatch
<span class="token variable">@OldOwner</span> <span class="token keyword">as</span> NVARCHAR<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token variable">@NewOwner</span> <span class="token keyword">as</span> NVARCHAR<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>
<span class="token keyword">AS</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">DECLARE</span> <span class="token variable">@Name</span>  <span class="token keyword">as</span> NVARCHAR<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>
<span class="token keyword">DECLARE</span> <span class="token variable">@Owner</span>  <span class="token keyword">as</span> NVARCHAR<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>
<span class="token keyword">DECLARE</span> <span class="token variable">@OwnerName</span>  <span class="token keyword">as</span> NVARCHAR<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">DECLARE</span> curObject <span class="token keyword">CURSOR</span> <span class="token keyword">FOR</span> 
<span class="token keyword">select</span> <span class="token string">&#39;Name&#39;</span>  <span class="token operator">=</span> name<span class="token punctuation">,</span>
  <span class="token string">&#39;Owner&#39;</span>  <span class="token operator">=</span> user_name<span class="token punctuation">(</span>uid<span class="token punctuation">)</span>
<span class="token keyword">from</span> sysobjects
<span class="token keyword">where</span> user_name<span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token operator">=</span><span class="token variable">@OldOwner</span>
<span class="token keyword">order</span> <span class="token keyword">by</span> name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">OPEN</span>  curObject
<span class="token keyword">FETCH</span> <span class="token keyword">NEXT</span> <span class="token keyword">FROM</span> curObject <span class="token keyword">INTO</span> <span class="token variable">@Name</span><span class="token punctuation">,</span> <span class="token variable">@Owner</span>
<span class="token keyword">WHILE</span><span class="token punctuation">(</span>@<span class="token variable">@FETCH_STATUS</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">BEGIN</span>   
<span class="token keyword">if</span> <span class="token variable">@Owner</span><span class="token operator">=</span><span class="token variable">@OldOwner</span> 
<span class="token keyword">begin</span>
  <span class="token keyword">set</span> <span class="token variable">@OwnerName</span> <span class="token operator">=</span> <span class="token variable">@OldOwner</span> <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> rtrim<span class="token punctuation">(</span><span class="token variable">@Name</span><span class="token punctuation">)</span>
  <span class="token keyword">exec</span> sp_changeobjectowner <span class="token variable">@OwnerName</span><span class="token punctuation">,</span> <span class="token variable">@NewOwner</span>
<span class="token keyword">end</span>
<span class="token comment">-- select @name,@NewOwner,@OldOwner</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">FETCH</span> <span class="token keyword">NEXT</span> <span class="token keyword">FROM</span> curObject <span class="token keyword">INTO</span> <span class="token variable">@Name</span><span class="token punctuation">,</span> <span class="token variable">@Owner</span>
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">close</span> curObject
<span class="token keyword">deallocate</span> curObject
GO
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>10、SQL SERVER 中直接循环写入数据</strong></p><p>** **declare @i int set @i=1 while @i&lt;30 begin insert into test (userid) values(@i) set @i=@i+1 end ** **</p><p><strong>案例</strong>**：**</p><p>** **有如下表，要求就裱中所有沒有及格的成績，在每次增長 0.1 的基礎上，使他們剛好及格:</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>Name   scor
Zhangshan 80
Lishi 59
Wangwu 50
Songquan 69
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>while((select</strong> <strong>min</strong>**(score) from tb_table)&lt;<strong><strong>60</strong></strong>)**</p><p><strong>begin</strong></p><p><strong>update tb_table set score</strong> **=****score***<strong>1.01</strong></p><p><strong>where score</strong>**&lt;60**</p><p><strong>if (select</strong> <strong>min</strong>**(score) from tb_table)****&gt;60**</p><p><strong>break</strong></p><p><strong>else</strong></p><p><strong>continue</strong></p><p><strong>end</strong></p><p><strong>数据开发-经典</strong></p><p><strong>1.按姓氏笔画排序:</strong></p><p>** **</p><p>Select * From TableName Order By CustomerName Collate Chinese_PRC_Stroke_ci_as //从少到多</p><p><strong>2.数据库加密:</strong></p><p>select encrypt(&#39;原始密码&#39;) select pwdencrypt(&#39;原始密码&#39;) select pwdcompare(&#39;原始密码&#39;,&#39;加密后密码&#39;) = 1--相同；否则不相同 encrypt(&#39;原始密码&#39;) select pwdencrypt(&#39;原始密码&#39;) select pwdcompare(&#39;原始密码&#39;,&#39;加密后密码&#39;) = 1--相同；否则不相同</p><p><strong>3.取回表中字段:</strong></p><p>declare @list varchar(1000), @sql nvarchar(1000) select @list=@list+&#39;,&#39;+b.name from sysobjects a,syscolumns b where a.id=b.id and a.name=&#39;表 A&#39; set @sql=&#39;select &#39;+right(@list,len(@list)-1)+&#39; from 表 A&#39; exec (@sql)</p><p><strong>4.查看硬盘分区:</strong></p><p><strong>EXEC master..xp_fixeddrives</strong></p><p><strong>5.比较 A,B 表是否相等:</strong></p><h1 id="if-select-checksum-agg-binary-checksum-from-a" tabindex="-1"><a class="header-anchor" href="#if-select-checksum-agg-binary-checksum-from-a"><span>if (select checksum_agg(binary_checksum(*)) from A)</span></a></h1><p>(select checksum_agg(binary_checksum(*)) from B) print &#39;相等&#39; else print &#39;不相等&#39;</p><p><strong>6.杀掉所有的事件探察器进程:</strong></p><p>DECLARE hcforeach CURSOR GLOBAL FOR SELECT &#39;kill &#39;+RTRIM(spid) FROM master.dbo.sysprocesses WHERE program_name IN(&#39;SQL profiler&#39;,N&#39;SQL 事件探查器&#39;) EXEC sp_msforeach_worker &#39;?&#39;</p><p><strong>7.<strong><strong>记录搜索</strong></strong>:</strong></p><p>** **</p><p><strong>开头到<strong><strong>N</strong></strong>条记录</strong>Select Top N * From 表</p><p>------------------------------- *<em>N<strong><strong>到</strong></strong>M<strong><strong>条记录</strong></strong>(<strong><strong>要有主索引</strong></strong>ID) <strong>Select Top M-N <em>From 表 Where ID in (Select Top M ID From 表) Order by ID Desc ---------------------------------- **N</em>***到结尾记录</strong>Select Top N</em> From 表 Order by ID Desc **案例<strong><strong>例如 1：一张表有一万多条记录，表的第一个字段 RecID 是自增长字段， 写一个 SQL 语句， 找出表的第</strong></strong>31<strong><strong>到第</strong></strong>40 **<strong>个记录。</strong></p><p>select top 10 recid from A where recid not in(select top 30 recid from A)</p><p>分析：如果这样写会产生某些问题，如果 recid 在表中存在逻辑索引。</p><p>select top 10 recid from A where……是从索引中查找，而后面的 select top 30 recid from A 则在数据表中查找，这样由于索引中的顺序有可能和数据表中的不一致，这样就导致查询到的不是本来的欲得到的数据。</p><p><strong>解决方案</strong></p><p>**1，**<strong>用 order by</strong> select top 30 recid from A order by ricid <strong>如果该字段不是自增长，就会出现问题</strong></p><p>**2，****在那个子查询中也加条件：**select top 30 recid from A where recid&gt;-1</p><p><strong>例 2</strong>**：查询表中的最后以条记录，并不知道这个表共有多少数据,**<strong>以及表结构。 set @s = &#39;select top 1 * from T where pid not in (select top &#39; + str(@count-1) + &#39; pid from T)&#39;</strong></p><p><strong>print @s exec sp_executesql @s</strong></p><p><strong>9：获取当前数据库中的所有用户表</strong></p><p>** **</p><p>select Name from sysobjects where xtype=&#39;u&#39; and status&gt;=0</p><p><strong>10：获取某一个表的所有字段</strong></p><p>** **select name from syscolumns where id=object_id(&#39;表名&#39;)</p><p>select name from syscolumns where id in (select id from sysobjects where type = &#39;u&#39; and name = &#39;表名&#39;)</p><p>两种方式的效果相同</p><p><strong>11：查看与某一个表相关的视图、存储过程、函数</strong></p><p>select a.* from sysobjects a, syscomments b where a.id = b.id and b.text like &#39;%表名%&#39;</p><p><strong>12：查看当前数据库中所有存储过程</strong></p><p>** **select name as 存储过程名称 from sysobjects where xtype=&#39;P&#39;</p><p><strong>13：查询用户创建的所有数据库</strong></p><p>select * from master..sysdatabases D where sid not in(select sid from master..syslogins where name=&#39;sa&#39;) 或者 select dbid, name AS DB_NAME from master..sysdatabases where sid &lt;&gt; 0x01</p><p><strong>14：查询某一个表的字段和数据类型</strong></p><p>** **select column_name,data_type from information_schema.columns where table_name = &#39;表名&#39;</p><p><strong>15</strong>**：不同服务器数据库之间的数据操作**</p><p>** **</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">--创建链接服务器</span>

<span class="token keyword">exec</span> sp_addlinkedserver <span class="token string">&#39;ITSV &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SQLOLEDB &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;远程服务器名或ip地址 &#39;</span>

<span class="token keyword">exec</span> sp_addlinkedsrvlogin <span class="token string">&#39;ITSV &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;false &#39;</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;用户名 &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;密码 &#39;</span>

<span class="token comment">--查询示例</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> ITSV<span class="token punctuation">.</span>数据库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>表名

<span class="token comment">--导入示例</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">into</span> 表 <span class="token keyword">from</span> ITSV<span class="token punctuation">.</span>数据库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>表名

<span class="token comment">--以后不再使用时删除链接服务器</span>

<span class="token keyword">exec</span> sp_dropserver <span class="token string">&#39;ITSV &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;droplogins &#39;</span>

<span class="token comment">--连接远程/局域网数据(openrowset/openquery/opendatasource)</span>

<span class="token comment">--1、openrowset</span>

<span class="token comment">--查询示例</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">openrowset</span><span class="token punctuation">(</span> <span class="token string">&#39;SQLOLEDB &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sql服务器名 &#39;</span><span class="token punctuation">;</span> <span class="token string">&#39;用户名 &#39;</span><span class="token punctuation">;</span> <span class="token string">&#39;密码 &#39;</span><span class="token punctuation">,</span>数据库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>表名<span class="token punctuation">)</span>

<span class="token comment">--生成本地表</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">into</span> 表 <span class="token keyword">from</span> <span class="token keyword">openrowset</span><span class="token punctuation">(</span> <span class="token string">&#39;SQLOLEDB &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sql服务器名 &#39;</span><span class="token punctuation">;</span> <span class="token string">&#39;用户名 &#39;</span><span class="token punctuation">;</span> <span class="token string">&#39;密码 &#39;</span><span class="token punctuation">,</span>数据库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>表名<span class="token punctuation">)</span>

<span class="token comment">--把本地表导入远程表</span>

<span class="token keyword">insert</span> <span class="token keyword">openrowset</span><span class="token punctuation">(</span> <span class="token string">&#39;SQLOLEDB &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sql服务器名 &#39;</span><span class="token punctuation">;</span> <span class="token string">&#39;用户名 &#39;</span><span class="token punctuation">;</span> <span class="token string">&#39;密码 &#39;</span><span class="token punctuation">,</span>数据库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>表名<span class="token punctuation">)</span>

<span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> 本地表

<span class="token comment">--更新本地表</span>

<span class="token keyword">update</span> b

<span class="token keyword">set</span> b<span class="token punctuation">.</span>列A<span class="token operator">=</span>a<span class="token punctuation">.</span>列A

 <span class="token keyword">from</span> <span class="token keyword">openrowset</span><span class="token punctuation">(</span> <span class="token string">&#39;SQLOLEDB &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sql服务器名 &#39;</span><span class="token punctuation">;</span> <span class="token string">&#39;用户名 &#39;</span><span class="token punctuation">;</span> <span class="token string">&#39;密码 &#39;</span><span class="token punctuation">,</span>数据库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>表名<span class="token punctuation">)</span><span class="token keyword">as</span> a <span class="token keyword">inner</span> <span class="token keyword">join</span> 本地表 b

<span class="token keyword">on</span> a<span class="token punctuation">.</span>column1<span class="token operator">=</span>b<span class="token punctuation">.</span>column1

<span class="token comment">--openquery用法需要创建一个连接</span>

<span class="token comment">--首先创建一个连接创建链接服务器</span>

<span class="token keyword">exec</span> sp_addlinkedserver <span class="token string">&#39;ITSV &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SQLOLEDB &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;远程服务器名或ip地址 &#39;</span>

<span class="token comment">--查询</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">openquery</span><span class="token punctuation">(</span>ITSV<span class="token punctuation">,</span> <span class="token string">&#39;SELECT * FROM 数据库.dbo.表名 &#39;</span><span class="token punctuation">)</span>

<span class="token comment">--把本地表导入远程表</span>

<span class="token keyword">insert</span> <span class="token keyword">openquery</span><span class="token punctuation">(</span>ITSV<span class="token punctuation">,</span> <span class="token string">&#39;SELECT * FROM 数据库.dbo.表名 &#39;</span><span class="token punctuation">)</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> 本地表

<span class="token comment">--更新本地表</span>

<span class="token keyword">update</span> b <span class="token keyword">set</span> b<span class="token punctuation">.</span>列B<span class="token operator">=</span>a<span class="token punctuation">.</span>列B <span class="token keyword">FROM</span> <span class="token keyword">openquery</span><span class="token punctuation">(</span>ITSV<span class="token punctuation">,</span> <span class="token string">&#39;SELECT * FROM 数据库.dbo.表名 &#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> a <span class="token keyword">inner</span> <span class="token keyword">join</span> 本地表 b <span class="token keyword">on</span> a<span class="token punctuation">.</span>列A<span class="token operator">=</span>b<span class="token punctuation">.</span>列A

<span class="token comment">--3、opendatasource/openrowset</span>

<span class="token keyword">SELECT</span>   <span class="token operator">*</span> <span class="token keyword">FROM</span>   <span class="token keyword">opendatasource</span><span class="token punctuation">(</span> <span class="token string">&#39;SQLOLEDB &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &#39;</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>test<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>roy_ta

<span class="token comment">--把本地表导入远程表</span>

<span class="token keyword">insert</span> <span class="token keyword">opendatasource</span><span class="token punctuation">(</span> <span class="token string">&#39;SQLOLEDB &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Data Source=ip/ServerName;User ID=登陆名;Password=密码 &#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>数据库<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>表名

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> 本地表
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SQL Server 基本函数</strong></p><p>SQL Server 基本函数</p><p><strong>1.字符串函数</strong> 长度与分析用</p><p><strong>1,datalength</strong>(Char_expr) 返回字符串包含字符数,但不包含后面的空格</p><p><strong>2,substring</strong>(expression,start,length) 取子串，字符串的下标是从“1”，start 为起始位置，length 为字符串长度，实际应用中以 len(expression)取得其长度</p><p><strong>3,right</strong>(char_expr,int_expr) 返回字符串右边第 int_expr 个字符，还用<strong>left</strong>于之相反** **</p><p><strong>4,isnull(</strong> <em>check</em>**_**<em>expression</em> <strong>,</strong> <em>replacement_value</em> **)**如果 check_expression 為空，則返回 replacement_value 的值，不為空，就返回 check_expression 字符操作类</p><p><strong>5,Sp_addtype</strong>自定義數據類型 例如：<code>EXEC sp_addtype birthday, datetime, &#39;NULL&#39;</code></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token number">6</span><span class="token punctuation">,</span><span class="token keyword">set</span> nocount {<span class="token keyword">on</span><span class="token operator">|</span><span class="token keyword">off</span>}
使返回的结果中不包含有关受 Transact<span class="token operator">-</span><span class="token keyword">SQL</span> 语句影响的行数的信息。如果存储过程中包含的一些语句并不返回许多实际的数据，则该设置由于大量减少了网络流量，因此可显著提高性能。<span class="token keyword">SET</span> NOCOUNT 设置是在执行或运行时设置，而不是在分析时设置。
<span class="token keyword">SET</span> NOCOUNT 为 <span class="token keyword">ON</span> 时，不返回计数（表示受 Transact<span class="token operator">-</span><span class="token keyword">SQL</span> 语句影响的行数）。
<span class="token keyword">SET</span> NOCOUNT 为 <span class="token keyword">OFF</span> 时，返回计数
常识
 
在<span class="token keyword">SQL</span>查询中：<span class="token keyword">from</span>后最多可以跟多少张表或视图：<span class="token number">256</span>
在<span class="token keyword">SQL</span>语句中出现 <span class="token keyword">Order</span> <span class="token keyword">by</span><span class="token punctuation">,</span>查询时，先排序，后取
在<span class="token keyword">SQL</span>中，一个字段的最大容量是<span class="token number">8000</span>，而对于nvarchar<span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>由于nvarchar是Unicode码。 
       
SQLServer2000同步复制技术实现步骤
一、 预备工作
<span class="token number">1.</span>发布服务器<span class="token punctuation">,</span>订阅服务器都创建一个同名的windows用户<span class="token punctuation">,</span>并设置相同的密码<span class="token punctuation">,</span>做为发布快照文件夹的有效访问用户
<span class="token comment">--管理工具</span>
<span class="token comment">--计算机管理</span>
<span class="token comment">--用户和组</span>
<span class="token comment">--右键用户</span>
<span class="token comment">--新建用户</span>
<span class="token comment">--建立一个隶属于administrator组的登陆windows的用户（SynUser）</span>
<span class="token number">2.</span>在发布服务器上<span class="token punctuation">,</span>新建一个共享目录<span class="token punctuation">,</span>做为发布的快照文件的存放目录<span class="token punctuation">,</span>操作:
我的电脑<span class="token comment">--D:\\ 新建一个目录,名为: PUB</span>
<span class="token comment">--右键这个新建的目录</span>
<span class="token comment">--属性--共享</span>
<span class="token comment">--选择&quot;共享该文件夹&quot;</span>
<span class="token comment">--通过&quot;权限&quot;按纽来设置具体的用户权限,保证第一步中创建的用户(SynUser) 具有对该文件夹的所有权限</span>
<span class="token comment">--确定</span>
<span class="token number">3.</span>设置<span class="token keyword">SQL</span>代理<span class="token punctuation">(</span>SQLSERVERAGENT<span class="token punctuation">)</span>服务的启动用户<span class="token punctuation">(</span>发布<span class="token operator">/</span>订阅服务器均做此设置<span class="token punctuation">)</span>
开始<span class="token comment">--程序--管理工具--服务</span>
<span class="token comment">--右键SQLSERVERAGENT</span>
<span class="token comment">--属性--登陆--选择&quot;此账户&quot;</span>
<span class="token comment">--输入或者选择第一步中创建的windows登录用户名（SynUser）</span>
<span class="token comment">--&quot;密码&quot;中输入该用户的密码</span>
<span class="token number">4.</span>设置<span class="token keyword">SQL</span> Server身份验证模式<span class="token punctuation">,</span>解决连接时的权限问题<span class="token punctuation">(</span>发布<span class="token operator">/</span>订阅服务器均做此设置<span class="token punctuation">)</span>
企业管理器
<span class="token comment">--右键SQL实例--属性</span>
<span class="token comment">--安全性--身份验证</span>
<span class="token comment">--选择&quot;SQL Server 和 Windows&quot;</span>
<span class="token comment">--确定</span>
<span class="token number">5.</span>在发布服务器和订阅服务器上互相注册
企业管理器
<span class="token comment">--右键SQL Server组</span>
<span class="token comment">--新建SQL Server注册...</span>
<span class="token comment">--下一步--可用的服务器中,输入你要注册的远程服务器名 --添加</span>
<span class="token comment">--下一步--连接使用,选择第二个&quot;SQL Server身份验证&quot;</span>
<span class="token comment">--下一步--输入用户名和密码（SynUser）</span>
<span class="token comment">--下一步--选择SQL Server组,也可以创建一个新组</span>
<span class="token comment">--下一步--完成</span>
<span class="token number">6.</span>对于只能用IP<span class="token punctuation">,</span>不能用计算机名的<span class="token punctuation">,</span>为其注册服务器别名（此步在实施中没用到）
 <span class="token punctuation">(</span>在连接端配置<span class="token punctuation">,</span>比如<span class="token punctuation">,</span>在订阅服务器上配置的话<span class="token punctuation">,</span>服务器名称中输入的是发布服务器的IP<span class="token punctuation">)</span>
开始<span class="token comment">--程序--Microsoft SQL Server--客户端网络实用工具</span>
<span class="token comment">--别名--添加</span>
<span class="token comment">--网络库选择&quot;tcp/ip&quot;--服务器别名输入SQL服务器名</span>
<span class="token comment">--连接参数--服务器名称中输入SQL服务器ip地址</span>
<span class="token comment">--如果你修改了SQL的端口,取消选择&quot;动态决定端口&quot;,并输入对应的端口号</span>
二、 正式配置
<span class="token number">1</span>、配置发布服务器
打开企业管理器，在发布服务器（B、C、D）上执行以下步骤:
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> 从<span class="token punctuation">[</span>工具<span class="token punctuation">]</span>下拉菜单的<span class="token punctuation">[</span>复制<span class="token punctuation">]</span>子菜单中选择<span class="token punctuation">[</span>配置发布、订阅服务器和分发<span class="token punctuation">]</span>出现配置发布和分发向导
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 选择分发服务器 可以选择把发布服务器自己作为分发服务器或者其他<span class="token keyword">sql</span>的服务器（选择自己）
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 设置快照文件夹
采用默认\\\\servername\\Pub
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 自定义配置
可以选择:是<span class="token punctuation">,</span>让我设置分发数据库属性启用发布服务器或设置发布设置
否<span class="token punctuation">,</span>使用下列默认设置（推荐）
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 设置分发数据库名称和位置 采用默认值
<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 启用发布服务器 选择作为发布的服务器
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 选择需要发布的数据库和发布类型
<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 选择注册订阅服务器
<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 完成配置
<span class="token number">2</span>、创建出版物
发布服务器B、C、D上
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>从<span class="token punctuation">[</span>工具<span class="token punctuation">]</span>菜单的<span class="token punctuation">[</span>复制<span class="token punctuation">]</span>子菜单中选择<span class="token punctuation">[</span>创建和管理发布<span class="token punctuation">]</span>命令
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>选择要创建出版物的数据库，然后单击<span class="token punctuation">[</span>创建发布<span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>在<span class="token punctuation">[</span>创建发布向导<span class="token punctuation">]</span>的提示对话框中单击<span class="token punctuation">[</span>下一步<span class="token punctuation">]</span>系统就会弹出一个对话框。对话框上的内容是复制的三个类型。我们现在选第一个也就是默认的快照发布<span class="token punctuation">(</span>其他两个大家可以去看看帮助<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>单击<span class="token punctuation">[</span>下一步<span class="token punctuation">]</span>系统要求指定可以订阅该发布的数据库服务器类型<span class="token punctuation">,</span>
SQLSERVER允许在不同的数据库如 orACLE或ACCESS之间进行数据复制。
但是在这里我们选择运行<span class="token string">&quot;SQL SERVER 2000&quot;</span>的数据库服务器
<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>单击<span class="token punctuation">[</span>下一步<span class="token punctuation">]</span>系统就弹出一个定义文章的对话框也就是选择要出版的表
注意: 如果前面选择了事务发布 则再这一步中只能选择带有主键的表
<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>选择发布名称和描述
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>自定义发布属性 向导提供的选择:
是 我将自定义数据筛选<span class="token punctuation">,</span>启用匿名订阅和或其他自定义属性
否 根据指定方式创建发布 （建议采用自定义的方式）
<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 选择筛选发布的方式
<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 可以选择是否允许匿名订阅
<span class="token number">1</span><span class="token punctuation">)</span>如果选择署名订阅<span class="token punctuation">,</span>则需要在发布服务器上添加订阅服务器
方法: <span class="token punctuation">[</span>工具<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span>复制<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span>配置发布、订阅服务器和分发的属性<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span>订阅服务器<span class="token punctuation">]</span> 中添加
否则在订阅服务器上请求订阅时会出现的提示:改发布不允许匿名订阅
如果仍然需要匿名订阅则用以下解决办法
<span class="token punctuation">[</span>企业管理器<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span>复制<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span>发布内容<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span>属性<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">[</span>订阅选项<span class="token punctuation">]</span> 选择允许匿名请求订阅
<span class="token number">2</span><span class="token punctuation">)</span>如果选择匿名订阅<span class="token punctuation">,</span>则配置订阅服务器时不会出现以上提示
<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 设置快照 代理程序调度
<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">[</span>下一步<span class="token punctuation">]</span> 完成配置
当完成出版物的创建后创建出版物的数据库也就变成了一个共享数据库
有数据
srv1<span class="token punctuation">.</span>库名<span class="token punctuation">.</span><span class="token punctuation">.</span>author有字段:id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>phone<span class="token punctuation">,</span>
srv2<span class="token punctuation">.</span>库名<span class="token punctuation">.</span><span class="token punctuation">.</span>author有字段:id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>telphone<span class="token punctuation">,</span>adress
 
要求：
srv1<span class="token punctuation">.</span>库名<span class="token punctuation">.</span><span class="token punctuation">.</span>author增加记录则srv1<span class="token punctuation">.</span>库名<span class="token punctuation">.</span><span class="token punctuation">.</span>author记录增加
srv1<span class="token punctuation">.</span>库名<span class="token punctuation">.</span><span class="token punctuation">.</span>author的phone字段更新，则srv1<span class="token punctuation">.</span>库名<span class="token punctuation">.</span><span class="token punctuation">.</span>author对应字段telphone更新
<span class="token comment">--*/</span>
 
<span class="token comment">--大致的处理步骤</span>
<span class="token comment">--1.在 srv1 上创建连接服务器,以便在 srv1 中操作 srv2,实现同步</span>
<span class="token keyword">exec</span> sp_addlinkedserver <span class="token string">&#39;srv2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;SQLOLEDB&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;srv2的sql实例名或ip&#39;</span>
<span class="token keyword">exec</span> sp_addlinkedsrvlogin <span class="token string">&#39;srv2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;false&#39;</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;密码&#39;</span>
go
<span class="token comment">--2.在 srv1 和 srv2 这两台电脑中,启动 msdtc(分布式事务处理服务),并且设置为自动启动</span>
。我的电脑<span class="token comment">--控制面板--管理工具--服务--右键 Distributed Transaction Coordinator--属性--启动--并将启动类型设置为自动启动</span>
go
  
<span class="token comment">--然后创建一个作业定时调用上面的同步处理存储过程就行了</span>
 
企业管理器
<span class="token comment">--管理</span>
<span class="token comment">--SQL Server代理</span>
<span class="token comment">--右键作业</span>
<span class="token comment">--新建作业</span>
<span class="token comment">--&quot;常规&quot;项中输入作业名称</span>
<span class="token comment">--&quot;步骤&quot;项</span>
<span class="token comment">--新建</span>
<span class="token comment">--&quot;步骤名&quot;中输入步骤名</span>
<span class="token comment">--&quot;类型&quot;中选择&quot;Transact-SQL 脚本(TSQL)&quot;</span>
<span class="token comment">--&quot;数据库&quot;选择执行命令的数据库</span>
<span class="token comment">--&quot;命令&quot;中输入要执行的语句: exec p_process</span>
<span class="token comment">--确定</span>
<span class="token comment">--&quot;调度&quot;项</span>
<span class="token comment">--新建调度</span>
<span class="token comment">--&quot;名称&quot;中输入调度名称</span>
<span class="token comment">--&quot;调度类型&quot;中选择你的作业执行安排</span>
<span class="token comment">--如果选择&quot;反复出现&quot;</span>
<span class="token comment">--点&quot;更改&quot;来设置你的时间安排</span>
 
然后将<span class="token keyword">SQL</span> Agent服务启动<span class="token punctuation">,</span>并设置为自动启动<span class="token punctuation">,</span>否则你的作业不会被执行
 
设置方法:
我的电脑<span class="token comment">--控制面板--管理工具--服务--右键 SQLSERVERAGENT--属性--启动类型--选择&quot;自动启动&quot;--确定. </span>
<span class="token comment">--3.实现同步处理的方法2,定时同步</span>
<span class="token comment">--在srv1中创建如下的同步处理存储过程</span>
<span class="token keyword">create</span> <span class="token keyword">proc</span> p_process <span class="token keyword">as</span>

<span class="token comment">--更新修改过的数据</span>

<span class="token keyword">update</span> b <span class="token keyword">set</span> name<span class="token operator">=</span>i<span class="token punctuation">.</span>name<span class="token punctuation">,</span>telphone<span class="token operator">=</span>i<span class="token punctuation">.</span>telphone

<span class="token keyword">from</span> srv2<span class="token punctuation">.</span>库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>author b<span class="token punctuation">,</span>author i

<span class="token keyword">where</span> b<span class="token punctuation">.</span>id<span class="token operator">=</span>i<span class="token punctuation">.</span>id <span class="token operator">and</span>

<span class="token punctuation">(</span>b<span class="token punctuation">.</span>name <span class="token operator">&lt;&gt;</span> i<span class="token punctuation">.</span>name <span class="token operator">or</span> b<span class="token punctuation">.</span>telphone <span class="token operator">&lt;&gt;</span> i<span class="token punctuation">.</span>telphone<span class="token punctuation">)</span>

<span class="token comment">--插入新增的数据</span>

<span class="token keyword">insert</span> srv2<span class="token punctuation">.</span>库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>author<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>telphone<span class="token punctuation">)</span>

<span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>telphone <span class="token keyword">from</span> author i

<span class="token keyword">where</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> srv2<span class="token punctuation">.</span>库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>author <span class="token keyword">where</span> id<span class="token operator">=</span>i<span class="token punctuation">.</span>id<span class="token punctuation">)</span>


<span class="token comment">--删除已经删除的数据(如果需要的话)</span>

<span class="token keyword">delete</span> b

<span class="token keyword">from</span> srv2<span class="token punctuation">.</span>库名<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>author b

<span class="token keyword">where</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> author <span class="token keyword">where</span> id<span class="token operator">=</span>b<span class="token punctuation">.</span>id<span class="token punctuation">)</span>

go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,208),o=[p];function l(c,i){return s(),a("div",null,o)}const d=n(t,[["render",l],["__file","15000字的SQL语句大全.html.vue"]]),k=JSON.parse('{"path":"/dev/15000%E5%AD%97%E7%9A%84SQL%E8%AF%AD%E5%8F%A5%E5%A4%A7%E5%85%A8.html","title":"15000 字的 SQL 语句大全","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"15000 字的 SQL 语句大全","excerpt":null,"description":"15000 字的 SQL 语句大全 一、基础 1、说明：创建数据库 CREATE DATABASE database-name 2**、说明：删除数据库** drop database dbname 3、说明：备份 sql server 4、说明：创建新表 create table tabname(col1 type1 [not null] [prim...","date":"2022-07-07T00:00:00.000Z","category":"Java","tag":"Java","article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/15000%E5%AD%97%E7%9A%84SQL%E8%AF%AD%E5%8F%A5%E5%A4%A7%E5%85%A8.html"}],["meta",{"property":"og:site_name","content":"StudyNote - 丰富的知识笔记库"}],["meta",{"property":"og:title","content":"15000 字的 SQL 语句大全"}],["meta",{"property":"og:description","content":"15000 字的 SQL 语句大全 一、基础 1、说明：创建数据库 CREATE DATABASE database-name 2**、说明：删除数据库** drop database dbname 3、说明：备份 sql server 4、说明：创建新表 create table tabname(col1 type1 [not null] [prim..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-07-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"15000 字的 SQL 语句大全\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[],"git":{"createdTime":1656560770000,"updatedTime":1714224756000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2},{"name":"xlc","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":21.25,"words":6375},"filePathRelative":"dev/15000字的SQL语句大全.md","localizedDate":"2022年7月7日","autoDesc":true}');export{d as comp,k as data};
