import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,a as e}from"./app-CMd4NNER.js";const t={},o=e(`<h1 id="informix-数据导入导出操作" tabindex="-1"><a class="header-anchor" href="#informix-数据导入导出操作"><span>informix 数据导入导出操作</span></a></h1><h2 id="_1-表数据导出" tabindex="-1"><a class="header-anchor" href="#_1-表数据导出"><span>1.表数据导出</span></a></h2><blockquote><p>可以采用在 dbaccess 工具环境直接输入</p><p>进入对应数据库：dbaccess database</p></blockquote><ul><li><strong>单表数据导出：（可导出 3 种不同的格式）</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>unload <span class="token keyword">to</span> fileName<span class="token punctuation">.</span>txt <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tableName

unload <span class="token keyword">to</span> ‘fileName<span class="token punctuation">.</span>dmp’ <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tableName<span class="token punctuation">;</span>

unload <span class="token keyword">to</span> <span class="token operator">/</span>opt<span class="token operator">/</span>informix<span class="token operator">/</span>fileName<span class="token punctuation">.</span>csv <span class="token keyword">delimiter</span> <span class="token string">&quot;,&quot;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tableName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>导出前十行数据：</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>unload <span class="token keyword">to</span> <span class="token operator">/</span>home<span class="token operator">/</span>informix<span class="token operator">/</span>fileName<span class="token punctuation">.</span>csv  <span class="token keyword">delimiter</span> <span class="token string">&quot;,&quot;</span> <span class="token keyword">select</span>  <span class="token keyword">first</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token keyword">from</span> tableName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：其中的 delimiter 是用来定义分隔符的，分隔符默认是&quot;| &quot; 但是也可以写为&quot; ，&quot;</p><h2 id="_2-表数据导入" tabindex="-1"><a class="header-anchor" href="#_2-表数据导入"><span>2.表数据导入</span></a></h2><ul><li><strong>单个表数据导入</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">load</span> <span class="token keyword">from</span> table1<span class="token punctuation">.</span>txt <span class="token keyword">insert</span> <span class="token keyword">into</span> table1<span class="token punctuation">;</span>
<span class="token keyword">load</span> <span class="token keyword">from</span> <span class="token operator">/</span>home<span class="token operator">/</span>informix<span class="token operator">/</span>lihewei<span class="token operator">/</span>crbt_userringset<span class="token punctuation">.</span>txt <span class="token keyword">insert</span> <span class="token keyword">into</span> crbt_userringset<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>批量导入：(方法一)</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 第一步：编写命令文件/home/informix/load.txt</span>
<span class="token keyword">FILE</span> table1<span class="token punctuation">.</span>txt <span class="token keyword">DELIMITER</span> <span class="token string">&#39;|&#39;</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">(</span>此处的数字为表各中对应的字段数目<span class="token punctuation">)</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table1<span class="token punctuation">;</span>
<span class="token keyword">FILE</span> table2<span class="token punctuation">.</span>txt <span class="token keyword">DELIMITER</span> <span class="token string">&#39;|&#39;</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">(</span>此处的数字为表各中对应的字段数目<span class="token punctuation">)</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table2<span class="token punctuation">;</span>
<span class="token keyword">FILE</span> table3<span class="token punctuation">.</span>txt <span class="token keyword">DELIMITER</span> <span class="token string">&#39;|&#39;</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">(</span>此处的数字为表各中对应的字段数目<span class="token punctuation">)</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table3<span class="token punctuation">;</span>

<span class="token comment">-- 第二步：通过输入如下的dbload命令批量的导入三个表格数据：</span>
dbload <span class="token operator">-</span>d <span class="token keyword">database</span><span class="token punctuation">(</span>数据库名字<span class="token punctuation">)</span> <span class="token operator">-</span>c <span class="token operator">/</span>home<span class="token operator">/</span>informix<span class="token operator">/</span><span class="token keyword">load</span><span class="token punctuation">.</span>txt <span class="token operator">-</span>l aaa<span class="token punctuation">(</span>随便输入的日志名字<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>批量导入：(方法二)</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 第一步：编写导入脚步（load.sql）</span>
<span class="token keyword">load</span> <span class="token keyword">from</span> table1<span class="token punctuation">.</span>txt <span class="token keyword">DELIMITER</span> <span class="token string">&#39;|&#39;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table1<span class="token punctuation">;</span>
<span class="token keyword">load</span> <span class="token keyword">from</span> table2<span class="token punctuation">.</span>txt <span class="token keyword">DELIMITER</span> <span class="token string">&#39;|&#39;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table2<span class="token punctuation">;</span>
<span class="token keyword">load</span> <span class="token keyword">from</span> table3<span class="token punctuation">.</span>txt <span class="token keyword">DELIMITER</span> <span class="token string">&#39;|&#39;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table3<span class="token punctuation">;</span>

<span class="token comment">-- 第二步：在dbaccess工具环境下直接输入</span>
dbaccess databaseName <span class="token operator">&lt;</span> <span class="token keyword">load</span><span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-表结构导出" tabindex="-1"><a class="header-anchor" href="#_3-表结构导出"><span>3.表结构导出</span></a></h2><ul><li><strong>备份整个数据库的表结构：</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>dbschema <span class="token operator">-</span>d <span class="token keyword">database</span> <span class="token operator">&gt;</span> <span class="token keyword">database</span><span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>导出某个数据表的表结构</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>dbschema <span class="token operator">-</span>d your_database_name <span class="token operator">-</span>t your_table_name xxx<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意： -d 表示导出整个数据库的表结构，-t 表示导出某一个数据表的表结构。</p><h2 id="_4-informix-新建-删除表结构" tabindex="-1"><a class="header-anchor" href="#_4-informix-新建-删除表结构"><span>4.informix 新建/删除表结构</span></a></h2><ul><li><strong>创建表，执行导出的 sql 脚本（xxx.sql 为 3 中导出的表结构）</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>dbaccess 数据库名 xxx<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>删除表数据</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> tableName<span class="token punctuation">;</span>
<span class="token keyword">truncate</span> <span class="token keyword">table</span> tableName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>truncate:</strong></p><ol><li>truncate 在使用时，不能加 where 条件。</li><li>truncate 执行操作时，<strong>速度更快 且 不可回滚</strong>；是因为：TRUNCATE 操作不会记录到事务日志中，而 DELETE 操作会记录到事务日志中，记录日志会耗时，所以 TRUNCATE 要快于 DELETE 且 truncate 不可回滚。</li><li>truncate 删除表数据是：先删除整张表包括数据，再重新创建表，因此，若果表中有自增长，<strong>会把自增长 id 重置成 1 开始</strong>。 delete 删除表数据时， 每次从表中删除一行。</li><li>表和索引所占空间。 当表被 TRUNCATE 后，这个表和索引所占用的空间会恢复到初始大小，而 DELETE 操作不会减少表或索引所占用的空间。drop 语句将表所占用的空间全释放掉。</li><li>应用范围。TRUNCATE 只能对 TABLE；DELETE 可以是 table 和 view</li><li>truncate、drop 是 DLL（data define language),操作立即生效，不会记录到事务日志中去</li><li><strong>在没有备份情况下，谨慎使用 drop 与 truncate</strong>。要删除部分数据行采用 delete 且注意结合 where 来约束影响范围</li></ol><h2 id="_5-informix-存储过程执行流程" tabindex="-1"><a class="header-anchor" href="#_5-informix-存储过程执行流程"><span>5.informix 存储过程执行流程</span></a></h2><ul><li><strong>informix 存储过程执行流程</strong></li></ul><p>（1）登录到数据库 informix 目录下； （2）上传存储过程 sync_user.sql; （3）执行命令 dbaccess 数据库名 sync_user.sql； （4）执行命令<code>echo &#39;execute procedure crbt_sync_user_ability()&#39; | dbaccess</code> 数据库名;</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token operator">-</span> <span class="token operator">*</span><span class="token operator">*</span>绑定存储过程<span class="token operator">*</span><span class="token operator">*</span>
  dbaccess <span class="token keyword">database</span> sync_user<span class="token punctuation">.</span><span class="token keyword">sql</span>

<span class="token operator">-</span> <span class="token operator">*</span><span class="token operator">*</span>删除绑定的存储过程<span class="token operator">*</span><span class="token operator">*</span>
  <span class="token keyword">drop</span> <span class="token keyword">procedure</span> crbt_sync_user_ability

<span class="token operator">-</span> <span class="token operator">*</span><span class="token operator">*</span>执行存储过程中的方法（在dbaccess中执行）<span class="token operator">*</span><span class="token operator">*</span>
  <span class="token keyword">execute</span> <span class="token keyword">procedure</span> crbt_sync_user_ability<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32),l=[o];function p(i,r){return a(),n("div",null,l)}const u=s(t,[["render",p],["__file","informix数据导入导出操作.html.vue"]]),k=JSON.parse('{"path":"/dev/informix%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E6%93%8D%E4%BD%9C.html","title":"informix数据导入导出操作","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"informix数据导入导出操作","excerpt":"informix数据导入导出操作","description":"informix数据导入导出操作","date":"2023-04-06T00:00:00.000Z","category":"Java","tag":["Java","informix"],"article":true,"timeline":true,"icon":"java","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/dev/informix%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"informix数据导入导出操作"}],["meta",{"property":"og:description","content":"informix数据导入导出操作"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:39:43.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"informix"}],["meta",{"property":"article:published_time","content":"2023-04-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:39:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"informix数据导入导出操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:39:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"1.表数据导出","slug":"_1-表数据导出","link":"#_1-表数据导出","children":[]},{"level":2,"title":"2.表数据导入","slug":"_2-表数据导入","link":"#_2-表数据导入","children":[]},{"level":2,"title":"3.表结构导出","slug":"_3-表结构导出","link":"#_3-表结构导出","children":[]},{"level":2,"title":"4.informix 新建/删除表结构","slug":"_4-informix-新建-删除表结构","link":"#_4-informix-新建-删除表结构","children":[]},{"level":2,"title":"5.informix 存储过程执行流程","slug":"_5-informix-存储过程执行流程","link":"#_5-informix-存储过程执行流程","children":[]}],"git":{"createdTime":1680872369000,"updatedTime":1714225183000,"contributors":[{"name":"xlc","email":"2215400217@qq.com","commits":2},{"name":"xlc520","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":2.97,"words":891},"filePathRelative":"dev/informix数据导入导出操作.md","localizedDate":"2023年4月6日"}');export{u as comp,k as data};
