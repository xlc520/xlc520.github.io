import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,a as e}from"./app-CXNU22eb.js";const t={},i=e(`<h1 id="自动封禁-ip-脚本" tabindex="-1"><a class="header-anchor" href="#自动封禁-ip-脚本"><span>自动封禁 IP 脚本</span></a></h1><p>1.在 ngnix 的 conf 目录下创建一个<code>blockip.conf</code>文件</p><p>2.里面放需要封禁的 IP，格式如下</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>deny 1.2.3.4;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3.在 ngnix 的 HTTP 的配置中添加如下内容</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>include blockips.conf;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4.重启 ngnix</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>/usr/local/nginx/sbin/nginx -s reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5.然后你就会看到 IP 被封禁了，你会喜提 403</p><h2 id="操作步骤" tabindex="-1"><a class="header-anchor" href="#操作步骤"><span>操作步骤</span></a></h2><p><strong>操作一：</strong> AWK 统计<code>access.log</code>，记录每分钟访问超过 60 次的 ip</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>awk &#39;{print $1}&#39; access.log | sort | uniq -cd | awk &#39;{if($1&gt;60)print $0}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>awk &#39;{print $1}&#39; access.log</code> 取出 access.log 的第一列即为 ip。</li><li><code>sort | uniq -cd</code> 去重和排序</li><li><code>awk &#39;{if($1&gt;60)print $0}&#39;</code>判断重复的数量是否超过 60 个，超过 60 个就展示出来</li></ol><p><strong>操作二：</strong> 编写 shell 脚本，实现整体功能（写了注释代码）</p><p><code>vi /usr/local/nginx/logs/block_ip.sh</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#echo &quot;&quot; &gt; /root/nginxWebUI/conf.d/blockip.conf</span>

<span class="token assign-left variable">ip_list</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span> access.log <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-cd</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{if($1&gt;1)print $2}&#39;</span><span class="token variable">)</span></span>
<span class="token comment">#判断这个变量是否为空</span>
<span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$ip_list</span>&quot;</span>
<span class="token keyword">then</span>
 <span class="token comment"># 当前时间</span>
 <span class="token assign-left variable">current_create_time</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +<span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token variable">\`</span></span>
    <span class="token comment">#为空写入 empty.log中，并重新启动ngnix</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$current_create_time</span> 为空&quot;</span>  <span class="token operator">&gt;&gt;</span> empty.log
    /usr/sbin/nginx <span class="token parameter variable">-s</span> reload
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;deny<span class="token variable">$ip_list</span>&quot;</span><span class="token operator">&gt;</span>temp_ip.txt
    <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/deny//&#39;</span> temp_ip.txt
    <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/^/deny /g&#39;</span> temp_ip.txt
    <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/$/;/g&#39;</span> temp_ip.txt
    <span class="token comment">#如果不为空 前面加上 deny格式和ip写入blockip.conf中</span>
    <span class="token function">cat</span> temp_ip.txt<span class="token operator">&gt;&gt;</span>/root/nginxWebUI/conf.d/blockip.conf
    <span class="token comment">#重启ngnix</span>
    /usr/sbin/nginx <span class="token parameter variable">-s</span> reload
    <span class="token comment">#清空之前的日志，从最新的开始截取</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span> <span class="token operator">&gt;</span> /root/nginxWebUI/logs/access.log
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>操作三：</strong> 使用 crontab 定时，来实现访问每分钟超过 60 的</p><p>直接实操吧：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span> 

<span class="token number">10</span> <span class="token number">6</span> * * * <span class="token function">sh</span> /root/nginxWebUI/logs/block_ip.sh

systemctl restart crond.service 重启一下配置既可
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),l=[i];function o(c,p){return a(),s("div",null,l)}const m=n(t,[["render",o],["__file","自动封禁IP脚本.html.vue"]]),u=JSON.parse('{"path":"/linux/%E8%87%AA%E5%8A%A8%E5%B0%81%E7%A6%81IP%E8%84%9A%E6%9C%AC.html","title":"自动封禁IP脚本","lang":"zh-CN","frontmatter":{"author":"xlc520","title":"自动封禁IP脚本","excerpt":null,"description":"自动封禁 IP 脚本 1.在 ngnix 的 conf 目录下创建一个blockip.conf文件 2.里面放需要封禁的 IP，格式如下 3.在 ngnix 的 HTTP 的配置中添加如下内容 4.重启 ngnix 5.然后你就会看到 IP 被封禁了，你会喜提 403 操作步骤 操作一： AWK 统计access.log，记录每分钟访问超过 60 次的...","date":"2023-01-01T00:00:00.000Z","category":"Linux","tag":"Linux","article":true,"timeline":true,"icon":"linux","head":[["meta",{"property":"og:url","content":"https://blog.ciberviler.top/linux/%E8%87%AA%E5%8A%A8%E5%B0%81%E7%A6%81IP%E8%84%9A%E6%9C%AC.html"}],["meta",{"property":"og:site_name","content":"StudyNote"}],["meta",{"property":"og:title","content":"自动封禁IP脚本"}],["meta",{"property":"og:description","content":"自动封禁 IP 脚本 1.在 ngnix 的 conf 目录下创建一个blockip.conf文件 2.里面放需要封禁的 IP，格式如下 3.在 ngnix 的 HTTP 的配置中添加如下内容 4.重启 ngnix 5.然后你就会看到 IP 被封禁了，你会喜提 403 操作步骤 操作一： AWK 统计access.log，记录每分钟访问超过 60 次的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:32:36.000Z"}],["meta",{"property":"article:author","content":"xlc520"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2023-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:32:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自动封禁IP脚本\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-27T13:32:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xlc520\\"}]}"]]},"headers":[{"level":2,"title":"操作步骤","slug":"操作步骤","link":"#操作步骤","children":[]}],"git":{"createdTime":1672848287000,"updatedTime":1714224756000,"contributors":[{"name":"xlc520","email":"2215400217@qq.com","commits":2},{"name":"xlc","email":"2215400217@qq.com","commits":1}]},"readingTime":{"minutes":1.32,"words":395},"filePathRelative":"linux/自动封禁IP脚本.md","localizedDate":"2023年1月1日","autoDesc":true}');export{m as comp,u as data};
